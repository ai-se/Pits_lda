TIM_Id,Subject,Severity,Description,Initiation_DateProjectE - TIM - 1886,"If-Condition always evaluates to FALSE, File command_reload.c, Line 94, Inst4 Analysis 1",3,"Issue: If-Condition always evaluates to FALSE File: command_reload.c, Line 94 If-Condition in function command_reload() of file command_reload.c always evaluates to FALSE. Developer has likely initialized the local variable ""reload"" incorrectly. File: command_reload.c 55 void command_reload(pend_rec *cmd) 56 { 57 byte *dest; 58 byte *src; 59 ushort size; 60 gbool reload = gFALSE; 61 62 /* read the table from the appropriate eeprom */ 63 if (cmd->data[0] == PARAMS) 64 { 65 dest = (byte *) Params; 66 size = sizeof(Params); 67 if (cmd->data[1] == 0) 68 { 69 src = (byte *) EEPROM_A_PARAMS; 70 } 71 else if (cmd->data[1] == 1) 72 { 73 src = (byte *) EEPROM_B_PARAMS; 74 } 75 } 76 else if (cmd->data[0] == ANALOG) 77 { 78 dest = (byte *) Analog_Table; 79 size = sizeof(Analog_Table); 80 if (cmd->data[1] == 0) 81 { 82 src = (byte *) EEPROM_A_ANALOG; 83 } 84 else if (cmd->data[1] == 1) 85 { 86 src = (byte *) EEPROM_B_ANALOG; 87 } 88 } 89 else 90 { 91 reload = gFALSE: 92 } 93 94 if (reload) 95 { 96 Function->mem_cpy_func(dest, src, size); 97 } 98 } /* command_reload */",4/24/07ProjectE - TIM - 1885,"Array out-of-bounds error in file pack_led.c, on lines 91, 99 and 191, Inst4 Analysis 1",2,"Issue: Array out-of-bounds error in file File: pack_led.c, on lines 91, 99 and 191 There is an array out-of-bounds error in file pack_led.c, on lines 91, 99 and 191. The array Trans.Packet_Counter[] is accessed at element 9 (i.e. LED1_PRIORITY) whereas the array size is defined as 6 (PACKET_COUNTER_SIZE). File pack_led.c, Lines 91, 99, 191 90 Function->msg_add_func(MSG_DATA_NOT_SENT, 91 Trans.Packet_Counter[LED1_PRIORITY], MSG_LED, 92 0, 0); 93 STI; 94 ret = MSG_DATA_NOT_SENT; 95 } 96 97 if (ret == 0) 98 { 99 Trans.Packet_Counter[LED1_PRIORITY]++; 100 ... 186 187 /* get the begin end times for this packet, set up begin time for next */ 188 led_buf->hdr.start_time = led_buf->end_time; 189 led_buf->end_time = GET_SYSTIME(); 190 led_buf->type = type; 191 led_buf->hdr.packet_count = Trans.Packet_Counter[LED1_PRIORITY]; telem.h #define ERROR_PRIORITY 0 #define ENG_PRIORITY 1 #define MSG_PRIORITY 2 #define DSC1_PRIORITY 3 #define DSC2_PRIORITY 4 #define EGA1_PRIORITY 5 #define EGA2_PRIORITY 6 #define EGA_HOP1_PRIORITY 7 #define EGA_HOP2_PRIORITY 8 #define LED1_PRIORITY 9 #define LED2_PRIORITY 10 #define DUMP1_PRIORITY 11 #define DUMP2_PRIORITY 12 #define HEART_PRIORITY 21 #define VML1_PRIORITY 22 #define VML2_PRIORITY 23 #define PACKET_COUNTER_SIZE 6 typedef struct { ... byte Packet_Counter[PACKET_COUNTER_SIZE]; } transmit_globals;",4/24/07ProjectE - TIM - 1884,"Array out-of-bounds error in file pack_ega_hop.c, lines 86, 94 and 104, Inst4 Analysis 1",2,"Issue: Array out-of-bounds error in file pack_ega_hop.c, on lines 86, 94 and 104 File: pack_ega_hop.c, lines 86, 94 and 104 There is an array out-of-bounds error in file pack_ega_hop.c, on lines 86, 94 and 104. the array Trans.Packet_Counter[] is accessed at element 7 (i.e. EGA_HOP1_PRIORITY) whereas the array size is defined as 6 (PACKET_COUNTER_SIZE). File pac_ega_hop.c, lines 86, 94, 104 82 else 83 { 84 CLI; 85 Function->msg_add_func(MSG_DATA_NOT_SENT, 86 Trans.Packet_Counter[EGA_HOP1_PRIORITY], 87 MSG_EGA_HOP, 0, 0); 88 STI; 89 ret = MSG_DATA_NOT_SENT; 90 } 91 92 if (ret == 0) 93 { 94 Trans.Packet_Counter[EGA_HOP1_PRIORITY]++; 95 96 /* get the begin end times for this packet, set up begin time for next */ 97 ega->hdr.start_time = EGA.Hop.Start_time; 98 EGA.Hop.Start_time = GET_SYSTIME(); 99 ega->end_time = EGA.Hop.Start_time; 100 ega->ega_time = EGA.Hop.Ega_time; 101 ega->count = EGA.Hop.Count; 102 ega->scan_type = EGA.Hop.Type; 103 ega->set_number = EGA.Hop.Set_Number; 104 ega->hdr.packet_count = Trans.Packet_Counter[EGA_HOP1_PRIORITY]; 105 106 size = sizeof(ega_hop_rec) * EGA.Hop.Count; 107 108 if (size > 0) 109 { 110 Function->mem_cpy_func(ega->recs, EGA.Hop.Ega, size); telem.h #define ERROR_PRIORITY 0 #define ENG_PRIORITY 1 #define MSG_PRIORITY 2 #define DSC1_PRIORITY 3 #define DSC2_PRIORITY 4 #define EGA1_PRIORITY 5 #define EGA2_PRIORITY 6 #define EGA_HOP1_PRIORITY 7 #define EGA_HOP2_PRIORITY 8 #define LED1_PRIORITY 9 #define LED2_PRIORITY 10 #define DUMP1_PRIORITY 11 #define DUMP2_PRIORITY 12 #define HEART_PRIORITY 21 #define VML1_PRIORITY 22 #define VML2_PRIORITY 23 #define PACKET_COUNTER_SIZE 6 typedef struct { ... byte Packet_Counter[PACKET_COUNTER_SIZE]; } transmit_globals;",4/24/07ProjectE - TIM - 1883,"Array out-of-bounds error in file command_memdump.c, function command_memory_dump, on lines 141, 158 and 160, Inst4 Analysis 1",2,"Issue: Array out-of-bounds error in file command_memdump.c, function command_memory_dump, on lines 141, 158 and 160 File: command_memdump.c, lines 141, 158 and 160 There is an array out-of-bounds error in file command_memdump.c, function command_memory_dump, on lines 141, 158 and 160. the array Trans.Packet_Counter[] is accessed at element 11 (i.e. DUMP1_PRIORITY) whereas the array size is defined as 6 (PACKET_COUNTER_SIZE). File command_memdump.c byte command_memory_dump(ushort id, dump_type *ad_len, dump_types type, byte seq_num) { ... 139 Function->msg_add_func(MSG_DATA_NOT_SENT, 140 Trans.Packet_Counter[DUMP1_PRIORITY], 141 MSG_DUMP, 0, 0); 142 STI; 143 ret = MSG_DATA_NOT_SENT; 144 } 145 146 if (!ret) 147 { 148 size = ad_len->length + DUMP_STD_LENGTH; 149 if (type == SEQUENCE_DUMP) 150 { 151 size++; 152 } 153 if (size & 0x01) 154 { 155 size++; 156 } 157 158 Trans.Packet_Counter[DUMP1_PRIORITY]++; 159 dump->hdr.start_time = GET_SYSTIME(); 160 dump->hdr.packet_count = Trans.Packet_Counter[DUMP1_PRIORITY]; 161 dump->hdr.length = size; telem.h #define ERROR_PRIORITY 0 #define ENG_PRIORITY 1 #define MSG_PRIORITY 2 #define DSC1_PRIORITY 3 #define DSC2_PRIORITY 4 #define EGA1_PRIORITY 5 #define EGA2_PRIORITY 6 #define EGA_HOP1_PRIORITY 7 #define EGA_HOP2_PRIORITY 8 #define LED1_PRIORITY 9 #define LED2_PRIORITY 10 #define DUMP1_PRIORITY 11 #define DUMP2_PRIORITY 12 #define HEART_PRIORITY 21 #define VML1_PRIORITY 22 #define VML2_PRIORITY 23 #define PACKET_COUNTER_SIZE 6 typedef struct { ... byte Packet_Counter[PACKET_COUNTER_SIZE]; } transmit_globals;",4/24/07ProjectE - TIM - 1882,"Assignment of 32 bit register value to 8 bit variable. File led_reading.c, Line 83, Inst4 Analysis 1",3,"Issue: 32 bit register value assigned to an 8 bit variable. File: led_reading.c, Line 83 In File led_reading.c on line 83, the 32 bit data register value storing the system time accessed with the macro GET_SYSTIME(), is assigned to ""Store.recs[Store.write_ptr].r_time"", where r_time is an 8 bit variable in the structure. File led_reading.c, Line 83 58 void led_reading(byte which, short value) 59 { 60 int i; 61 ... 76 /* no need to interrupt protect, called from the ADC interrupt */ 77 Function->engin_add_func(which, value, GET_SYSTIME()); 78 } 79 else if (Led.fast_rate) 80 { 81 Store.recs[Store.write_ptr].reading = which; 82 Store.recs[Store.write_ptr].r_value = value; 83 Store.recs[Store.write_ptr].r_time = GET_SYSTIME(); led.h ----------- typedef struct { byte reading; byte r_time; ushort r_value; } led_rec; tega2007.h ----------- #ifdef FSW #define GET_SYSTIME() (~Dma_Regs->systime) #else #define GET_SYSTIME() (Dma_Regs->systime) #endif dmaregs.h ----------- typedef struct { ushort manifold_pres; ushort shield_err; ushort oven_err; ushort oven_shield_misc; ushort adc_data; ushort unused0[3]; ulong systime; <==== ivv note: systime ushort unused1[2]; ushort oven_timer; ushort shld_timer; ushort t_timer; ushort unused2; ushort timer0; ... ushort timer7; } dma_reg_struct;",4/24/07ProjectE - TIM - 1881,"Condition always evaluates TRUE, File ega_start.c, Line 68, Inst4 Analysis 1",3,"Issue: Condition always evaluates TRUE File: File ega_start.c, Line 68 On line 68 of file ega_start.c (function ega_start), a condition will alway be true because the sum of ""start_up1.count1"" and ""start_up1.count2"" both of type byte (8 bits) can not exceed 510. The sum is compared to MAX_EGA_STARTUP which is equal to 1000. ega_start.c 50 void ega_start(byte *temp_buf, ushort *size, gbool *send_msg, 51 gbool *send_crc_msg) 52 { 53 ushort size_read; 54 dump_type dump; 55 ulong ega_time; 56 ushort crc; 57 ushort count; 58 ega_startup1 start_up1; 59 60 EGA.Err_Cnt = 0; 61 if (Function->read_ega_data_buf_func(sizeof(ega_startup1), &temp_buf[*size], 62 &size_read, gTRUE)) 63 { 64 Function->mem_cpy_func(&start_up1, &temp_buf[*size], 65 sizeof(ega_startup1)); 66 *size += sizeof(ega_startup1); 67 68 if (start_up1.count1 + start_up1.count2 < MAX_EGA_STARTUP) 69 { 70 count = (start_up1.count1 + start_up1.count2) * 4; 71 if (Function->read_ega_data_buf_func(count + 2 + sizeof(ega_startup2), 72 &temp_buf[*size], 73 &size_read, gTRUE)) 74 { 75 *size += count + sizeof(ega_startup2); 76 77 crc = *((ushort *) &temp_buf[*size]); 78 if (crc != Function->ega_crc_func(*size, temp_buf)) 79 { 80 *send_crc_msg = gTRUE; 81 *size += sizeof(ushort); 82 } 83 else 84 { 85 dump.address = (ulong) (temp_buf + 1); 86 dump.length = count + sizeof(ega_startup1) + 87 sizeof(ega_startup2); 88 Function->command_memory_dump_func(0, &dump, 89 EGA_STARTUP_DUMP, 0); 90 } 91 } 92 else 93 { 94 *send_msg = gTRUE; 95 *size += size_read; 96 } ega.h #define MAX_EGA_STARTUP 1000 #define EGA_READ_SIZE 1000 #define EGA_READ_BUF_SIZE 50 #define EGA_FIRST_READ_SIZE 1 #define EGA_MEM_LD_EXT_SIZE 10 #define EGA_STD_CMD_SIZE 6",4/24/07ProjectE - TIM - 1880,"Reuse of symbol name as function and variable. File eeprom_en_dis.c, Line 73, 88, Inst4 Analysis 1",5,"Issue: Reuse of symbol name as function and variable File: File eeprom_en_dis.c, Line 73, 88 Reuse of symbol name as function and variable. Symbol eeprom_ready is defined as a function in tega2007.h and as a local variable in function eeprom_en_dis() of file eeprom_en_dis.c. The header file tega2007.h is referenced in the file eeprom_en_dis.c 2nd instance of issue: The same type of issue exists with the symbol send_data in file pack_dsc.c (function pack_dsc()). Symbol send_data is both local variable and function where function is of type byte and local is type ushort. 3rd instance of issue: The same type of issue exists with the symbol send_data in file pack_msg.c (function pack_messages()). Symbol send_data is both local variable and function where function is of type byte and local is type ushort. File eeprom_en_dis.c, Line 73, 88 59 ushort eeprom_ready; 60 61 if (side == EEPROM_SIDEA) 62 { 63 if (Params[EEPROM_SIDEA_WRITE] != EEPROM_PROTECTA) 64 { 65 CLI; 66 Function->msg_add_func(MSG_EEPROM_NOT_ENABLED, id, side, 0, 0); 67 STI; 68 ret = MSG_EEPROM_NOT_ENABLED; 69 } 70 else 71 { 72 eep_base = EEPROM0_START; 73 eeprom_ready = EPR_0_READY; 74 } 75 } 76 else 77 { 78 if (Params[EEPROM_SIDEB_WRITE] != EEPROM_PROTECTB) 79 { 80 CLI; 81 Function->msg_add_func(MSG_EEPROM_NOT_ENABLED, id, side, 0, 0); 82 STI; 83 ret = MSG_EEPROM_NOT_ENABLED; 84 } 85 else 86 { 87 eep_base = EEPROM1_START; 88 eeprom_ready = EPR_1_READY; 89 } 90 }",4/24/07ProjectE - TIM - 1879,"Use of incorrect telemetry ID, nav2.c, line 167, build 6.21",3,"Issue: Use of incorrect telemetry ID File: nav2.c, line 167 As a result of a design document to code trace, a discrepancy in a telemetry reset function was found. The macro AV2_MRD_INIT_VEL_MCI_TLM_ID was repeated twice as shown in the code snippet. The likely intent of the developer was to execute tlm_store once for each telemetry ID – for MCI & MRD. File nav2.c 106 void nav2_Reset(void) 107 { ... 162 tlm_store_double(NAV2_MRD_INIT_TIME_TLM_ID, 0.0); 163 tlm_store_array_double(NAV2_MRD_INIT_POS_MCI_TLM_ID, 164 nav2Mci.position); 165 tlm_store_array_double(NAV2_MRD_INIT_VEL_MCI_TLM_ID, 166 nav2Mci.velocity); 167 tlm_store_array_double(NAV2_MRD_INIT_VEL_MCI_TLM_ID, 168 nav2Mrd.velocity);",4/20/07ProjectE - TIM - 1878,"Function returns improper error value, Payload FSW tests return value improperly, File eps.c, Function eps_comp_pwr_callback(), Payload Files Inst8_fsw.c, Inst6_fsw.c, Build 6.1",3,"Issue: Function returns improper error value, Payload FSW tests return value improperly File: File eps.c, Function eps_comp_pwr_callback(), Payload Files Inst8_fsw.c, Inst6_fsw.c The function eps_comp_pwr_callback() of eps.c returns EPS_ERROR_COMP_ID (equal to 6) in contradiction to documentation. Inline documentation (line 200 of eps.c) states that the function should return EPS_ERROR (equal to -1) when in error. All calls to the function in the primary FSW that checks the return value uses the condition (x != EPS_OK) or (x != 0) to trap errors. Calls to eps_comp_pwr_callback()in the Payload FSW file Inst8.mod/Inst8_fsw.c (line 224) and Inst6.mod/Inst6_fsw.c (line 240) are checking the return value with the condition ""if (EPS_ERROR == eps_rc)"". The payload engineer is aware of the proper return value but should have chosen to use the condition (eps_rc != EPS_OK) - the proper means to trap the errors. File: eps.c ** Return: ** EPS_OK on success 200 ** otherwise EPS_ERROR -----***********************************************************/ /*+++++ Begin Prototype +++++*/ 203 eps_error_t eps_comp_pwr_callback(eps_comp_id_t id, void (*f) (eps_comp_id_t, double, double *)) /*----- End Prototype -----*/ { eps_error_t retval; retval = EPS_OK; /*+++++ * do loop to control error flow, only executed once -----*/ do { /*+++++ * If component ID is not in range * return EPS_ERROR_COMP_ID * generate an EVR * break -----*/ if (UNDEFINED_EPS_COMP_ID_TYPE <= id) { retval = EPS_ERROR_COMP_ID; EVR_REPORT_EVENT_1(EVR_WARNING, EVR_ID_EPS_COMP_ID_02, EVR_LOC(__LINE__), ""Invalid comp id %i encountered"", id); break; } /*+++++ * update eps_comp[] element with ptr to f() -----*/ eps_comp[id].f = f; retval = EPS_OK; } while (FALSE); return retval; }",3/23/07ProjectE - TIM - 1877,"Function returns improper error value, Payload FSW tests return value improperly, File eps.c, Function eps_comp_msg_q() and Payload Files Inst8_fsw.c, Inst6_fsw.c, Build 6.1",3,"Issue: Function returns improper error value, Payload FSW tests return value improperly File: File eps.c, Function eps_comp_msg_q(), Payload Files Inst8_fsw.c, Inst6_fsw.c The function eps_comp_msg_q() in file eps.c, returns EPS_ERROR_COMP_ID in contradiction to documentation. Inline documentation states (line 267 of eps.c), that the function eps_comp_msg_q() should return EPS_ERROR when in error. All calls to the function in the primary FSW that checks the return value uses the condition (x != EPS_OK) or (x != 0) to trap errors. Calls to eps_comp_msg_q() in the Payload FSW file Inst8.mod/Inst8_fsw.c (line 239) and Inst6.mod/Inst6_fsw.c (line 255) check the return value with the condition ""if (EPS_ERROR == eps_rc)"". The payload engineer is aware of the proper return value but should have chosen to use the condition (eps_rc != EPS_OK) - the proper means to trap the errors. File: eps.c ** Return: ** eps_error_t ** EPS_OK 267 ** otherwise, EPS_ERROR -----**********************************************************/ /*+++++ Begin Prototype +++++*/ 270 eps_error_t eps_comp_msg_q(eps_comp_id_t id, taskId_t task_id, objectId_t object_id, instanceId_t instance_id, int priority) /*----- End Prototype -----*/ { eps_error_t retval; retval = EPS_OK; /*+++++ * do loop to control error flow, only executed once -----*/ do { /*+++++ * If component ID is not in range * return EPS_ERROR_COMP_ID * report error and abort * break -----*/ if (UNDEFINED_EPS_COMP_ID_TYPE <= id) { retval = EPS_ERROR_COMP_ID; ... ... return retval; }",3/23/07ProjectE - TIM - 1876,"Incorrect calculation of schedule data, improper range checking, File eps_schedule.c, Line 171, eps_task.c, Line 155, Build 6.1",3,"Issue: Incorrect calculation of schedule data File: File eps_schedule.c, Line 171, eps_task.c, Line 155 The statement on line 171 of file eps_schedule.c is not returning the actual number of entries in eps_schedule_entry[]. It is meant to calculate the number of entries in the array eps_schedule_entry[] but is actually returning a fixed value stored to eps_schedule.count which assigns the value to the local variable l_retval, the return value for the function. This return value is checked by a conditional on line 155 of file eps_task.c with the result that the condition is never true. File eps_schedule.c 165 /*+++++ 166 * Count the number of entries in the eps_schedule_entry[] 167 * Populate the eps_schedule.count member. 168 * NOTE: The LAST element in the eps_schedule_entry[] has not been included 169 * in this count by subtracting 1 from the total count. 170 -----*/ 171 eps_schedule.count = (sizeof(eps_schedule_entry) / sizeof(schEntry_t)) - 1; 172 173 l_retval = eps_schedule.count; 174 175 /*+++++ 176 * Point the eps_schedule.entry member to the first element in the eps_schedule_entry[]. 177 -----*/ 178 eps_schedule.entry = (schEntry_p) & eps_schedule_entry[0]; 179 180 /*+++++ 181 * Set the current subcycle to 0. 182 -----*/ 183 eps_schedule.subcycle = CYCLE_00; 184 185 return l_retval; 186 187 } File eps_task.c 152 /*+++++ 153 * init the eps schedule table 154 -----*/ 155 if (-1 == eps_schedule_init()) 156 { 157 status = EPS_ERROR_INIT_EPS_SCHEDULE; 158 EVR_REPORT_EVENT_0(EVR_WARNING, 159 EVR_ID_EPS_SCHEDULE_CREATE, 160 EVR_LOC(__LINE__), 161 ""Failed to init EPS schedule""); 162 } /* end if faile to init eps schedule */",3/23/07ProjectE - TIM - 1875,"Potential exception error by memcpy(), File vm_operand.c, Function vm_operand_copy_deep(), Line 193, Build 6.1",3,"Issue: Potential exception error by memcpy() File: vm_operand.c, vm_operand_copy_deep(), Line 193 If opd.kind is equal to COMMAND_KIND when the function vm_operand_copy_deep() on lines 4083 and 7160 of file vm_engine.c is called, then a memcpy() in the function vm_operand_copy_deep() will write to the NULL address and generate an exception. The two calls to the function vm_operand_copy_deep() make the call with the fourth call parameter (dest_command_ptr) as NULL. This NULL is transferred to ""dest_ptr->storage.command_ptr"" on line 192 of vm_operand.c (function vm_operand_copy_deep). Call to memcpy() on line 193 would generate an exception by trying to copy to NULL address. The value of opd.kind is not checked prior to the call to vm_operand_copy_deep on line 4083 and 7160 of vm_engine.c and therefore could potentially be equal to COMMAND_KIND which leads to the problem. \ For the call to vm_operand_copy_deep() on line 4083, the structure ""opd"" is previously assigned values through a chain of function calls leading to line 1043 and ultimately to line 1960 (handle_vm_spawn) in vm.c. For the call on line 7160, the structure ""opd"" is populated by calls to sscanf() in the function parse_value() of file vm_parm.c. There is no error checking and particularly none for the value opd.kind and this leaves open the chance that vm_operand_copy_deep() could generate an exception error. File vm.c 1043 cmd_vm_spawn_ptr = ((struct vm_cmd_vm_spawn_type *)(msg_ptr->parm_data)); ... 1959 case MSG_ID_VM_SPAWN: 1960 handle_vm_spawn(&msg); File vm_engine.c 4083 vm_operand_copy_deep(&opd, &subinstructions[OPD_1_OFFSET].opd, string_ptr, NULL); 7160 vm_operand_copy_deep(&opd, &vm_spawn_engine_ptr->instructions[num_instructions].opd, string_ptr, NULL); File vm_parm.c, Function parse_value() 300 if (sscanf(str, VM_SCANF_HEX_FORMAT_LOWER, &uint_value) == 1) vm_operand_set_uint(opd_ptr, CONSTANT_ACCESS, uint_value); File vm_operand.c, Function vm_operand_copy_deep() 188 case COMMAND_KIND: 189 dest_ptr->kind = source_ptr->kind; 190 dest_ptr->access_mode = source_ptr->access_mode; 191 dest_ptr->storage.command_ptr = dest_command_ptr; 192 size = cmd_size(source_ptr->storage.command_ptr); 193 memcpy(dest_ptr->storage.command_ptr, source_ptr->storage.command_ptr, (unsigned int)size); 194 break;",3/23/07ProjectE - TIM - 1874,"Potential access of NULL address, File vm_engine.c, Line 562, 563, Build 6.1",4,"Issue: Potential access of NULL address File: vm_engine.c, Line 562, 563 The pointer ""entry_ptr"" of type vm_symbol_table_entry_type could receive a NULL pointer from the function vm_symbol_table_look_up_entry(). Values in the structure at entry_ptr would be accessed and assigned to variables function_engine_index and function_instruction_index and lead to an exception error if entry_ptr is NULL. There is no error checking to prevent this problem. File: vm_engine.c static boolean allow_function_to_run(struct vm_engine_type *invoking_engine_ptr, char *function_name_to_check) { ... 560 entry_ptr = vm_symbol_table_look_up_entry(&vm_function_symbol_table, 561 function_name_to_check); 562 function_engine_index = entry_ptr->group; 563 function_instruction_index = entry_ptr->offset; ================================================================================ File: vm_symbol_table.c struct vm_symbol_table_entry_type *vm_symbol_table_look_up_entry( struct vm_symbol_table_type *table_ptr, const char *name) { struct vm_symbol_table_entry_type *entries; int i; int size; unsigned int key; size = table_ptr->size; entries = table_ptr->entries; key = calculate_key(name); for (i = 0; i < size; i++) { if (entries[i].num_references > 0 && entries[i].key == key && vm_utils_string_equal_caseless(VM_NUM_SYMBOL_CHARS, entries[i].name, name)) return &(entries[i]); } return NULL; }",3/23/07ProjectE - TIM - 1873,"Global Variable declared external but without definition, File ra_col_pub.h, Line 332",5,"Issue: Global Variable declared external but without definition File ra_col_pub.h, Line 332 A global variable is declared external in ra_col_pub.h but never defined. Three of the four external globals of which it is a part are defined in ra_col.c beginning on line 175. File ra_col.c 173 /* global variables */ 175 int ra_num_link_checks = 0; int ra_num_obj_checks = 0; int ra_num_pose_checks = 0; /* static global variables */ File ra_col_pub.h 324 /********************************************************************** * * global variables * **********************************************************************/ extern int ra_num_link_checks; extern int ra_num_obj_checks; extern int ra_num_pose_checks; 332 extern int ra_num_map_checks;",2/27/07ProjectE - TIM - 1872,"Access of a Null Pointer in data assignment, File ra_queues.c, Line 728, 1340, Build 6.01",3,"Issue: Access of a Null Pointer in data assignment File ra_queues.c, Line 728, 1340 On line 728 of file ra_queues.c, function ra_power_utilization(), there is potential for accessing a NULL pointer in a data assignement statement. The same problem exists on line 1340 in the function ra_switch_power(). Routine ra_read_parameters returns the pointer to ""pwr_cnst"" and this routine can return a value of zero (line 958 of ra_parameters.c) without any subsequnent condition checking for NULL. 722 void ra_power_utilization(eps_comp_id_t _unused_arg_0_, double _unused_arg_1_, double *power) { const struct power_states_params *const pwr_cnst = 726 ra_read_parameters(Inst9_POWER_STATES); 728 *power = pwr_cnst->power[ra_power_state]; } 1316 BOOL ra_switch_power(int state) { .... /* Get pointer to parameters */ 1323 ctrl_ptr = ra_read_parameters(Inst9_CTRL_PARAMS); ... if(status == Inst9_Q_EPS_ON) { 1340 fsw_taskDelayAtLeast(ctrl_ptr->power_on_time_delay); }",2/27/07ProjectE - TIM - 1871,"Access of a Null Pointer by memcpy(), File ra_parameters.c, Line 1118, Build 6.01",3,"Issue: Access of a Null Pointer by memcpy() File ra_parameters.c, Line 1118 On line 1118 of file ra_parameters.c, function ra_set_one_param(), there is potential for accessing a NULL pointer as a source in a call to memcpy(). Routine ra_read_parameters returns the pointer to ""buf"" and this routine can return a value of zero (line 958) without any subsequnent condition checking for NULL. ** Purpose: Read the specified parameter structure const void *ra_read_parameters(enum ra_pm_type type) { ... /*if not found, return error*/ 958 if (!ra_parameters[i].size) return 0; /*else return pointer to data*/ else return data + offset; } 1106 int ra_set_one_param(ra_set_one_param_arg *arg) { float new_data[Inst9_MAX_PARAMETERS]; const void *buf; int i; if (arg->offset >= Inst9_MAX_PARAMETERS) return Inst9_E_COMMAND; 1115 buf = ra_read_parameters(arg->type); for (i = 0; ra_parameters[i].type != arg->type && ra_parameters[i].size; i++); 1118 memcpy(new_data,buf,ra_parameters[i].size);",2/27/07ProjectE - TIM - 1870,"vm_instruction_get_operand() could return with NULL and generate an exception, File vm_parser.c, Line 1358, 5378, Build 6.01",4,"Issue: vm_instruction_get_operand() could return with NULL and generate an exception File vm_parser.c, Line 1358, 5378 In the function add_logical_opd_1() on line 1358, the structure pointer could have received a NULL pointer from the previous statement (line 1357) - a call to vm_instruction_get_operand() and with the call to vm_operand_set_logical(), there would be an attempt to assign data to a NULL pointer structure (line 531, file vm_operand.c [see below]). The same scenario exists on line 5378 where vm_instruction_get_operand() could have returned a NULL pointer and an attempt is made to reference a NULL pointer structure and assign a value. File vm_parser.c 1351 static void add_logical_opd_1(int instruction_index, boolean value) { struct vm_instruction_type *instruction_ptr; struct vm_operand_type *opd_ptr; instruction_ptr = &dest_engine_ptr->instructions[instruction_index]; 1357 opd_ptr = vm_instruction_get_operand(instruction_ptr, OPD_1_OFFSET); 1358 vm_operand_set_logical(opd_ptr, CONSTANT_ACCESS, (int)value); } ... 5359 static boolean replace_label_strings_with_offsets(...) 5360 { ... 5377 opd_ptr = vm_instruction_get_operand(&engine_ptr->instructions[i], OPD_2_OFFSET); 5378 name = opd_ptr->storage.string_ptr; ======================================================== File vm_operand.c, line 528 528 void vm_operand_set_logical(struct vm_operand_type *opd_ptr, enum vm_operand_access_mode_type access, int value) { 531 opd_ptr->access_mode = access; opd_ptr->kind = LOGICAL_KIND; opd_ptr->storage.logical_value = value; } ======================================================== File vm_instruction.c struct vm_operand_type *vm_instruction_get_operand( struct vm_instruction_type *instruction_ptr, int opd_offset) { int num; struct vm_instruction_type *subinstruction_ptrs[VM_INSTRUCTION_MAX_SUBINSTRUCTIONS]; num = vm_instruction_subinstructions(instruction_ptr, subinstruction_ptrs); 142 if (opd_offset >= num) return NULL; else return &subinstruction_ptrs[opd_offset]->opd; }",2/27/07ProjectE - TIM - 1869,"Function increment_data_index() could return NULL and generate an exception, File vm_engine.c, line 1770, Build 6.01",4,"Issue: Function increment_data_index() could return with NULL and generate an exception File vm_engine.c, line 1770 In the function vm_engine() on line 1770, the structure pointer ""opd_ptr"" is referenced without testing for NULL. During the previous iteration of the for-loop, opd_ptr is assigned a pointer from the call to increment_data_index() and if the pointer is NULL (potential exists at line 1391, then an exception would be generated by reference to the structure pointer on line 1770. File vm_engine.c, line 1770 static struct vm_operand_type *pop(struct vm_engine_type *engine_ptr, int num) { int i; struct vm_operand_type *opd_ptr; opd_ptr = &engine_ptr->data_stack[engine_ptr->data_index]; for (i = 1; i <= num; i++) { 1770 if (opd_ptr->kind == STRING_KIND) vm_stack_remove(&engine_ptr->string_stack); else if (opd_ptr->kind == COMMAND_KIND) vm_stack_remove(&engine_ptr->command_stack); 1776 opd_ptr = increment_data_index(engine_ptr, -1); } return opd_ptr; } vm_engine.c - 1384 static struct vm_operand_type *increment_data_index(struct vm_engine_type *engine_ptr, int num) { int new_value; new_value = engine_ptr->data_index + num; 1391 if (new_value < LAST_REGISTER_OFFSET || new_value >= engine_ptr->max_data_index) 1392 return NULL; .... }",2/27/07ProjectE - TIM - 1868,"Function create_entry() could return NULL and generate exception, File telemetry_parser.c, Line 960, Build 6.01",3,"Issue: create_entry() may return with NULL and generate exception File telemetry_parser.c, Line 960 In the function load_array() for loading data arrays from files, a call to the function create_entry(), on line 959, can return a value of NULL as assignment to the structure pointer ""info"". On the next line (960), if info received NULL, it is referenced and would generate an exception error. Two conditions in create_entry() that indicate the system is out of heap would return NULL. EVR_REPORT_EVENT() is called within create_entry() in each case with a status value of EVR_WARNING. The function create_entry() is only called within code of telemetry _parser.c and in other instances, the return status is checked for NULL. File telemetry_parser.c, line 960 static boolean load_array(symbol_parse_type parse_kind, ... 955 info = tlm_look_up_hashed_entry(apid_index,tlm_id_parsed); if (info == NULL) { 959 info = create_entry(parse_kind); 960 info->tlm_id = tlm_id_parsed; created_new_entry = TRUE; } else created_new_entry = FALSE; File telemetry_parser.c, Line 531, (definition of function create_entry()) static struct tlm_info_type *create_entry(symbol_parse_type parse_kind)(){ ... }",2/27/07ProjectE - TIM - 1867,"fastPartGetPartId may return as NULL and generate exception, File: heap.c, Line 1395, 1518, Build 6.01",3,"Issue: fastPartGetPartId may return as NULL and generate exception File: heap.c, Line 1395, 1518 In the function heap_is_block(), the function fastPartGetPartId() can return NULL as the assignment to structure partId (the partition ID). If ""partId"" is NULL, then at line 1405, the structure partId would be referenced and generate an exception error. The issue also exists beginning on line 1518 in function heap_addr_range_status(). There is range checking after the call to fastPartGetPartId(). However, this fast partition routine can return NULL pointer and the condition checking in the routine that calls fastPartGetPartId() - heap_is_block(), will not necessarily trap and respond to partId equalling NULL. The condition ""if (sysPhysMemTop() < (char *) partId)"" checks for partID exceeding the upper range of memory but there is no check for NULL. File heap.c int heap_is_block(heap_t heap, void *block) { status = heap_is_heap(heap); if (status == HEAP_STATUS_OK) { /* ** Get the partition pointer. If this is a fast heap, ** then the partition cannot be accessed directly. Use ** the fastPartLib accessor in this case. */ if (heap->fast == TRUE) { 1395 partId = fastPartGetPartId((FAST_PART_ID) heap->partition); } else { partId = heap->partition; } if (sysPhysMemTop() < (char *) partId) { status = HEAP_STATUS_PART_ABOVE_SYS_MEM_TOP; } else if (block < heap->base_addr) { status = HEAP_STATUS_BLK_BEFORE_BASE; } else { endOfHeap = (char *) heap->base_addr + 1405 (partId->totalWords * 2); if ((void *) endOfHeap <= block) { status = HEAP_STATUS_BLK_AFTER_HEAP; File fastPartLib.c, Line 930 930 PART_ID fastPartGetPartId ( FAST_PART_ID fastPartId /* Get partId from this FAST_PART */ ) { /* The usual memPartLib error checking on the partId we were passed. */ if ((fastPartId == NULL) || (fastPartVerifyMemPartId(fastPartId->partId) == ERROR)) { errnoSet(S_fastPartLib_INVALID_FAST_PART); return NULL; } return fastPartId->partId; }",2/27/07ProjectE - TIM - 1866,"Array accessed out of bounds, File eps2.mod/eps_pdc_sw.c, Line 1829, Build 6.01",3,"Issue: Array accessed out of bounds File: eps2.mod/eps_pdc_sw.c, Line 1829, 1868 On line 1812 in file eps_pdc_sw.c, the if-conditional compares the array size to the size of the array using the logical operator "">="". Consequently, the array can be accessed out of bounds by 1. The array would be accessed out of bounds on line 1829 and 1868. File: eps_pdc_sw.c 131 static FP_Enables_t eps_pdc_sw_fp_enable_word[NUM_EPS_PDC_SW_FP_ENABLE_WORDS]; ... ** Description: ** Sets the fault protection enable/disable status for the specified PDC ** switch ... 1797 void eps_pdc_sw_set_fp_enable(eps_pdc_sw_id_t id, bool_t enable) /*----- End Prototype -----*/ { ... 1808 /*+++++ * If the fault protection enable word index is in range. -----*/ if ((0 <= fp_enable_word_idx) && 1812 (NUM_EPS_PDC_SW_FP_ENABLE_WORDS >= fp_enable_word_idx)) { FPU_Enable_Set(command, mask, 1829 eps_pdc_sw_fp_enable_word[fp_enable_word_idx]); ... /*+++++ * Push the new enable word in telemetry. -----*/ if (0 == fp_enable_word_idx) { tlm_store_uint(FP_PDC_ENABLE_STATUS_WORD_1_TLM_ID, eps_pdc_sw_fp_enable_word[fp_enable_word_idx]); } else { tlm_store_uint(FP_PDC_ENABLE_STATUS_WORD_2_TLM_ID, 1868 eps_pdc_sw_fp_enable_word[fp_enable_word_idx]); }",2/23/07ProjectE - TIM - 1865,"Switch variable is compared to binary logic values, File eps_emic_relay.c, Line 2358, Build 6.01",5,"Issue: Switch variable is compared to binary logic values File eps2.mod/eps_emic_relay.c, Line 2358, 2362 A switch variable is being compared to binary logic (True/False) from an OR comparison of two enumerators. Two case statements of the switch compare binary logic values to an integer variable with values ranging from 0 to 2. This code was first flagged by NASA IV&V as part of the Genesis FSW code analysis (GENESIS TIM-1107, May 2001, Issue Status=OPEN). Corrective actions were taken and implemented in MRO FSW (ref. MRO IV&V Archives) and are shown below as reference. ProjectE File eps_emic_relay.c, line 2358, 2362 2356 switch (comp_state) { 2357 2358 case (EPS_COMP_POS_1 || EPS_COMP_OFF): 2359 pos = EPS_EMIC_RELAY_POS_1; 2360 break; 2361 2362 case (EPS_COMP_POS_2 || EPS_COMP_ON): 2363 pos = EPS_EMIC_RELAY_POS_2; 2364 break; ======================================================================== MRO FSW, eps_relay.c, line 1861 static eps_relay_pos_t eps_relay_get_pos_from_comp(const eps_comp_state_t comp_state) /*----- End Prototype -----*/ { eps_relay_pos_t pos; /*+++++ Get the relay state from the component state. NOTE: This logic assumes the enumeration : EPS_COMP_OFF = 0 EPS_COMP_ON = 1 EPS_COMP_POS_1 = 0 EPS_COMP_POS_2 = 1 EPS_COMP_POS_3 = 2 -----*/ switch (comp_state) { case EPS_COMP_POS_1: /* EPS_COMP_POS_1 == EPS_COMP_OFF */ pos = EPS_RELAY_POS_1; break; case EPS_COMP_POS_2: /* EPS_COMP_POS_2 == EPS_COMP_ON */ pos = EPS_RELAY_POS_2; break; case EPS_COMP_POS_3: pos = EPS_RELAY_POS_3; break; default: pos = UNDEFINED_EPS_RELAY_POS_TYPE; break; } return pos; }",2/23/07ProjectE - TIM - 1864,"Unparenthesized formula for data writing to heap, File ra.mod/ra_monitor.c, Line 786, Build 6.01",4,"Issue: Unparenthesized formula for data writing to heap File ra.mod/ra_monitor.c, Line 786 The formula functioning as the input parameter to the macro Inst9_ROUND is unparenthesized. Without design details, engineering notes or inline comments, IV&V cannot determine how the formula is supposed to be evaluated. The formula will be evaluated simply from left to right without parentheses and the intended evaluation is not clear. File ra_monitor.c int ra_monitor_sensors(struct arm_science_1 **current_heap, ... 784 if(fabs(tau_ptr->temp.m[i]) > FLT_EPSILON) { 786 ra_science_1.trotor[i] = Inst9_ROUND(1/tau_ptr->temp.m[i]* temp_ptr->trotor[i] + tau_ptr->temp.b[i]);",2/23/07ProjectE - TIM - 1863,"Possible use of unassigned variables, File evr.mod/evr.c, Lines 658, 659, 826, 842, Build 6.01",4,"Issue: Possible assignment and storage of unassigned variables. File: evr.mod/evr.c, Line 658, 659, 826, 842 If the if-condition is false at line 595 [ if( !intContect()) ]in file evr.c, then ""rtcValue"" will be without an assigned value on line 658 of file evr.c where it is an input parameter to a copy function. The variable ""timestamp"" could also remain uninitialized and this would impact the statements on line 826 and 842 - calls to the function add_to_ring(). If intContect() on line 574 shows the FSW is not in interrupt context, this does not guarantee that it remains in that state on line 595; the state could have changed in the time that transpired between execution of statements. Both if-conditions on line 574 and 595 could be false. If interrupt context switches, then the if-condition on line 595 is FALSE and the problem arises (rtcValue without value). File evr.c void evr_report_event (evrLevel_t severity, uint32_t ID, int num_args, ...) { ... rtcValue_t rtcValue; /* rtc value */ /* Call the spacecraft time services to get the current time. */ ... 573 /* If in the interrupt context, increment counter and return */ 574 if( intContext() ) { EvrIntContextCntr++; return; } ... 595 if( !intContext() ) clock_rtc_sc_time (&rtcValue, &timestamp); ... /* First the RTC value */ 658 copy32_to_bigendian(&packet_body[rtc_index],rtcValue.upper); copy32_to_bigendian(&packet_body[rtc_index+4],rtcValue.lower); if (severity == EVR_FATAL) { /* Add to low DRAM ring buffer */ 826 add_to_ring (evr_fatal_header_ptr (), evr_fatal_ring_ptr (), EVR_FATAL_RING_SIZE, timestamp,",2/23/07ProjectE - TIM - 1862,"Redefinition of a VxWorks pre-processor symbol, File chkdsk.mod/dosFsChkLib.c, Line 245, Build 6.01",3,"Issue: Redefinition of a VxWorks pre-processor #define symbol CHK_ONLY File: chkdsk.mod/dosFsChkLib.c, Line 245 VxWorks defines the preprocessor symbol ""CHK_ONLY"". The symbol is redefined on line 245 of phx_fsw.ar\chkdsk.mod\dosFsChkLib.c. This preprocessor symbol is defined in the VxWorks header dosFsLib.h which is referenced by the file dosFsChkLib.c. VxWorks sets the value to 1 and it is redefined (without use of #undef) to a value of zero. File dosFsChkLib.c #include <dosFsLib.h> ... /* check-disk-error repair levels */ 245 #define CHK_ONLY 0 /* only to check disk ( not to restore ) */ 246 #define CHK_WR 1 /* min repair lever for writing repairs */ 247 #define CHK_KILL_BAD 2 /* repair level to kill all bad files and */",2/23/07ProjectE - TIM - 1861,"Mismatched types in a switch, File eps2.mod/eps_cmd_handler.c, Line 570, 640, Build 6.01",3,"Issue: Mismatched types with different values are comparedin a switch File: eps2.mod/eps_cmd_handler.c, Line 570, 640 Two switches comparing mismatched types reside at line 570 and 640 of file eps_cmd_handler.c. Parameter ccu_pm_id is of type (eps_ccu_id_t), an enumerator with values (0,1). The parameter is being compared to four cases of a different type, (ccu_id_t) {typedef uint8_t} with values of (0,1,2,3). File eps_cmd_handler.c 556 eps_ccu_id_t ccu_pm_id; 557 eps_comp_state_t state; 558 eps_comp_id_t l_comp_id; ... /*+++++ * Get corresponding component ID for specified CCU ID -----*/ 570 switch (ccu_pm_id) { 572 case ccu_id_value_CCU_1A: ... 577 case ccu_id_value_CCU_1B: ... 582 case ccu_id_value_CCU_2A: ... 587 case ccu_id_value_CCU_2B: {review also the switch at line 640}",2/23/07ProjectE - TIM - 1860,"Comparison of different enumerator types, File eps_ccu.c, Line 4313, Build 6.01",4,"Issue: Comparison of different enumerator types File eps_ccu.c, Line 4313 On line 4313, a comparison is made in an if-conditional between the parameter ""state"" of type (eps_ccu_pm_state_t) and an enumerator of type (eps_ccu_pm_cmd_t). The conditional is comparing an enumerator representing STATE to one representing COMMAND. The code functions as intended because the enumerations have the same values in their respective enumerators. File eps_ccu.c /*+++++ * set the condition of all enabled power modules back to good. -----*/ for (l_pm_id = 0; l_pm_id < NUM_EPS_CCU_PM_ID; l_pm_id++) { 4313 if (l_ccu->pm[l_pm_id].state == EPS_CCU_PM_CMD_ENABLE) { eps_ccu_pm_set_cond(ccu_id, l_pm_id, Good);",2/23/07ProjectE - TIM - 1859,"Incorrectly implemented formula, File eps2.mod/eps_ccu.c, Line 368, 431, Build 6.01",4,"Issue: Incorrectly implemented formula related to enabling power module state for CCU and PM File eps2.mod/eps_ccu.c, Line 368, 431 In file eps_ccu.c, line 368 and 431, the formula representing the fourth parameter in the call statement to fsw_cmd_send() (defined as type uint8_t, fsw_utils.c) is an offset into a buffer and may be incorrectly formulated. It may simply be missing parentheses. Without more developer notes, inline documentation or design documentation, we cannot determine the exact design intended. File: eps_ccu.c, line 368, 431 352 /*+++++ 353 * Loop through all the available CCUs 354 -----*/ 355 for (l_ccu_id = 0; l_ccu_id < NUM_EPS_CCU_ID; l_ccu_id++) { 357 /*+++++ 358 * Loop through all the available power modules for current CCU. 359 -----*/ 360 for (l_pm_id = 0; l_pm_id < NUM_EPS_CCU_PM_ID; l_pm_id++) { 362 /*+++++ 363 * command default enable/disable power module state for current CCU and PM 364 -----*/ 365 fsw_cmd_send (CMD_SOURCE_FSW_BUS_INDEX, 366 CMD_OP_CCU_MOD_EN_DIS, 367 eps_ccu_pm_default_state[l_ccu_id][l_pm_id], 368 (NUM_EPS_CCU_ID * l_ccu_id + l_pm_id), 0, 0); 370 } 372 } ... 428 fsw_cmd_send (CMD_SOURCE_FSW_BUS_INDEX, 429 CMD_OP_CCU_MOD_EN_DIS, 430 fltrec_nighttime_msg.eps_ccu_data.state[l_ccu_id][l_pm_id], 431 (NUM_EPS_CCU_ID * l_ccu_id + l_pm_id), 0, 0);",2/23/07ProjectE - TIM - 1858,"Potential for divide by zero, File edl_nav.c, Line 933, Build 6.01",2,"Issue: Potential for divide by zero in determination of residuals from altitude or velocity measurements File edl_nav.c, Line 933 The condition on line 907 does not prevent a divide by zero in the equation on line 933. The equation is an accumulator in a summation determining the variance of a measurement being processed through a kalman filter (EDL-2). No documentation exists to explain the range of values that ""nn"" could receive, and review of the code does not reveal the range except that ""nn"" will remain between 0 and EDL_NAV_RING_SIZE (value is 20) in the ring buffer. File edl_nav.c 883 STATIC bool_t edl_nav_cdr_reviewIsOk( edlNavMeasEnum meas, edlNavCovEnum type, vector_t bV) /*----- End Prototype -----*/ { /*+++++++++++++++++++++++++++++++++++++++++++++++++++ ** Determine number in buffer: nn = next - first. ** If number isn't positive, add RING_SIZE for wrap-around. **--------------------------------------------------*/ 906 nn = edl_nav_res[meas].next - edl_nav_res[meas].first; 907 if(nn <= 0) nn += EDL_NAV_RING_SIZE; ... 932 edl_nav_res[meas].resid = bR/nn; 933 sR = (sR - bR*edl_nav_res[meas].resid)/(nn-1);",2/23/07ProjectE - TIM - 1857,"Out of Bounds Error, File fpc.mod/floating_point.c, Line 149, 274, Build 6.01",2,"Issue: Out of Bounds Error, Scalar fpcsr is accessed as an array File: fpc.mod/floating_point.c, Line 149, 274 The statement in file floating_point.c, function fp_exc_init() on line 149, will access a scalar double variable ""fpcsr"" as an array and out of bounds. ""fpcsr"" is a double scalar variable in the typedef structure fpContext defined in VxWorks header fppPpcLib.h. In the header floating_point.h, the macro TASK_FPSCR (for CPU defined as RSC) is accessing element [1] (2nd element) of ""fpcsr"", as if it is an array variable. The macro is also applied on line 274 in floating_point.c. The relevant code fragments are listed below. ( This assumes the flight ready code uses the #define pre-processor definition of ""RSC"") File floating_point.c 106 static int fp_exc_init(WIND_TCB *tcb) { ... 148 #if (CPU!=SIMSPARCSOLARIS) 149 TASK_FPSCR(tcb) &= ~(FPSCR_VE | FPSCR_OE | FPSCR_UE | FPSCR_ZE | FPSCR_XE); #else TASK_FPSCR(tcb) = 0x0d0000a0U; /* no underflow exceptions */ #endif ---------------------------------------------- floating_point.h #if (CPU==PPC603) #define TASK_FPSCR(tcb) ((tcb)->pFpContext->fpcsr) #elif (CPU==RSC) #define TASK_FPSCR(tcb) (((int *) (&((tcb)->pFpContext->fpcsr)))[1]) #elif (CPU==SIMSPARCSOLARIS) #define TASK_FPSCR(tcb) ((tcb)->pFpContext->fsr) #endif --------------------------------------------------- VxWorks header fppPpcLib.h typedef struct fpContext /* FP_CONTEXT */ { #if ( CPU == RSC ) double fpx[FP_NUM_DREGS]; /* 32 doubles : 0 */ double fpcsr; /* control/statu : 256 */ /* TOTAL : 264 */ #else double fpr[FP_NUM_DREGS]; /* 32 doubles : 256 bytes */ int fpcsr; /* control/status : 4 bytes */ int pad; /* pad to 8 byte boundary */ #endif /* ( CPU == RSC ) */ } FP_CONTEXT; /* TOTAL : 260 bytes */",2/23/07ProjectE - TIM - 1856,Variable use results in underflow in Inst8 Build 5.4 FSW (Inst8_paci.c),3,"The local variable, rc (short), is assigned an ERROR (-1) value. After the -1 assignment, rc is used as a function parameter in a call to the function, ac_StateLogEntry. The function, ac_StateLogEntry, expects its last parameter to be and unsigned short value. If this -1 assignment were to occur, the most likely scenario is the value will be rolled over to maximum unsigned short value. It is not clear if this is the desired implementation. File: Inst8_paci.c Function: Inst8_PACIDiscrete Lines: 722, 734 722 rc = ERROR; ... 734 ac_StateLogEntry(Inst8_STATE_FAULT,MAGI_STATE_LOG_NO_COMMAND,rc);",1/5/07ProjectE - TIM - 1855,Missing type-cast in Inst6 Build 5.4 FSW (Inst6_image.c) may cause loss of data.,3,"The struct field, Inst6_CCD.pwr[].state (short), can be assigned a value of -1. However, all of its usages in assignment are to unsigned short values. It is not clear if these values are reset prior to being assigned to unsigned short values. If this -1 assignment were to occur to unsigned short values, the most likely scenario is the value will be rolled over to maximum unsigned short value. It is not clear if this is the desired implementation. Code segments listed below: File: Inst6_image.c Functions: Inst6_CCDGetPowerState, Inst6_CCDPowerSet Lines: 258, 450, 451, 258 power = Inst6_CCD.pwr[ccd_sel].state; ... 450 CCD_prev[Inst6_CCD_LEFT] = Inst6_CCD.pwr[Inst6_CCD_LEFT].state; 451 CCD_prev[Inst6_CCD_RIGHT] = Inst6_CCD.pwr[Inst6_CCD_RIGHT].state; ... ASSIGNMENT TO -1 514 Inst6_CCD.pwr[Inst6_CCD_LEFT].state = Inst6_CCD_PWR_FAULT; /* PFR 4653 */ 515 Inst6_CCD.pwr[Inst6_CCD_RIGHT].state = Inst6_CCD_PWR_FAULT; /* PFR 4653 */ 518 Inst6_CCD.pwr[ccd_sel].state = Inst6_CCD_PWR_FAULT; /* PFR 4653 */",1/5/07ProjectE - TIM - 1854,Variable assignment results in underflow in Inst6 Build 5.4 FSW (Inst6_fsw.c),3,"The local variable, rc (unsigned short), can be assigned an ERROR (-1) value. This assignment is obtained via returns from the function, Inst6_PACIDiscrete. If this -1 assignment were to occur, the most likely scenario is the value will be rolled over to maximum unsigned short value. It is not clear if this is the desired implementation. Code segment listed below: File: Inst6_fsw.c Function: Inst6_Reset Lines: 310 310 rc = Inst6_PACIDiscrete (Inst6_PACI_DSC_RST, Inst6_PACI_DISC_CLR);",1/5/07ProjectE - TIM - 1853,Uninitialized variable in Inst6 Build 5.4 FSW (Inst6_image.c),3,"The variable, ae_trial_cnt, is used to count the number of AE attempts. However, the variable is used on line 3114 without ever being set to any value. Code segment listed below: File: Inst6_image.c Line 230, 3114 230 static uint16_t ae_trial_cnt; /* count of AE attempts so far */ ... 3107 EVR_REPORT_EVENT_4 (EVR_WARNING, 3108 Inst6_AE_ACQ_FAIL_ERR_EVR_ID, 3109 EVR_LOC(__LINE__), 3110 """"Inst6: AE Re-acquisition failed-ccd: %d,left code:%d,right code:%d AE trial: %d"""", 3111 (int) ccd_sel, 3112 (int) img_acq_err[Inst6_CCD_LEFT], 3113 (int) img_acq_err[Inst6_CCD_RIGHT], 3114 (int) ae_trial_cnt);",1/3/07ProjectE - TIM - 1852,Uninitialized variables in Inst6 Build 5.4 FSW (Inst6_move.c),3,"The variable, act_dir, is used uninitialized in function Inst6_ElMove (Inst6_move.c) on line 1408. This uninitialized use will happen if the conditional statement on line 1360 does not evaluate to true as act_dir is initialized on line 1361. Code segments listed below. Function: Inst6_ElMove File: Inst6_move.c Lines: 1408 1360 if (new_pos != Inst6_move[Inst6_ACT_EL].curr_position) { 1361 Inst6_CalcRangeDir (... &act_steps, &act_dir); 1377 } ... 1408 Inst6_move[Inst6_ACT_EL].curr_dir = act_dir;",1/3/07ProjectE - TIM - 1851,Uninitialized variable in Inst7 Build 5.4 FSW (Inst7.c),3,"The variable, mardiAnalog, is used unitialized in Build 5.4 FSW. Inst7 analog devices are closed, though they are currently not opened because of pre-processor directive. Code segments listed below. File: Inst7.c Function: open_devices 1129 #if (0) 1130 if (!problems) { 1131 mardiAnalog[0] = open(PACI_Inst7_ANALOG_DEV, O_RDWR, NULL); 1132 if (mardiAnalog[0] == ERROR) { 1133 problems++; 1134 EVR_REPORT_EVENT_0(EVR_WARNING, EVR_ID_Inst7_OPEN_THM, 1135 EVR_LOC(__LINE__), """"can't open analog device""""); 1136 } 1137 } 1138 #endif ... 1161 for(i = 0; i < 1; i++) { 1162 close(mardiAnalog[i]);",1/3/07ProjectE - TIM - 1850,Uninitialized variable in Inst9 Build 5.4 FSW (ra_monitor.c),3,"The local struct fields, state.pot.q and state.enc.q, are used uninitialized in function ra_compute_state (ra_monitor.c) on line 1527. This will happen when the conditional statements on line 1517 and 1522 do not evaluate to true. Code segment listed below. Function: ra_compute_state File: ra_monitor.c Lines: 1517-1527 1517 if (fabs(joint_ptr->gear_ratio[i]) > FLT_EPSILON) 1518 state.enc.q[i] = joint_ptr->rad_per_enc[i]* 1519 ((double)his_ptr->pt[his_ptr->index].arm.jnt[i].enc / 1520 joint_ptr->gear_ratio[i] - joint_ptr->enc_offset[i]); 1521 /* PFR 4420: Need to account for reversed actuator-angle phasing */ 1522 if (fabs(joint_ptr->pot.m[i]) > FLT_EPSILON) 1523 state.pot.q[i] = (his_ptr->pt[his_ptr->index].arm.jnt[i].pot - 1524 joint_ptr->pot.b[i]) / joint_ptr->pot.m[i]; 1525 1526 state.mix.q[i] = (his_ptr->pt[his_ptr->index].use_pots[i]) ? 1527 state.pot.q[i] : state.enc.q[i];",1/3/07ProjectE - TIM - 1849,Lost of fraction portion in Inst6 Build 5.4 FSW ( Inst6_move.c),3,When two integers are divided and assigned to a floating point variable the fraction portion is lost. This happens in function Inst6_Move on line 1146. IV&V cannot determine if this is the intended implementation. Code segments listed below: File: Inst6_move.c Function: Inst6_Move Lines: 1146 1145 /* return wait time in fractional seconds */ 1146 wait_time = ((act_steps * act_rate)/500); /* twice the amount */,1/3/07ProjectE - TIM - 1848,Lost of fraction portion in Inst8 Build 5.4 FSW (Inst8_image.c),3,"When two integers are divided and assigned to a floating point variable the fraction portion is lost. This happens in function Inst8_CCDAutoExpose on lines 1436 and 1463. IV&V cannot determine if this is the intended implementation. Code segments listed below: File: Inst8_image.c Function: Inst8_CCDAutoExpose Lines: 1436, 1463 1436 PvTavg = PvTS / (PvTH - PvTL); 1463 PvIavg = PvIS / (PvIH - PvIL); The use of division within the ceil function parameter list 1423 should also be evaluated 1423 PvCM = ceil(PvWavg/PvTot);",1/3/07ProjectE - TIM - 1847,Negative array subscript in Inst9 Build 5.4 FSW (ra_col.c),3,"The variable, max, is used as a subscript in the function ra_expand_objects. max can hold a value of negative one on line 2954. This will happen when the conditional statment on line 2950 evaluates to true during the first iteration of the 'for' loop that starts on 2948. Code segment is listed below. File: ra_col.c Function: ra_expand_objects Lines: 2948-2957 2948 for (i = 0; i < Inst9_COL_NUM_OBJS; i++, file_obj++) { 2949 2950 if (file_obj->obj_id == Inst9_COL_NO_OBJ) break; 2951 2952 } 2953 2954 max = i-1; 2955 2956 obj = &objs.obj[max]; 2957 file_obj = &objs.parm[max];",1/3/07ProjectE - TIM - 1846,Unused local variable in Inst7 Build 5.4 FSW (Inst7.c),4,"The variable, nblocks, is used to store the computed number of blocks. However, the variable is never used. Code segment listed below: Function: take_image File: Inst7.c Line 1328 1328 nblocks = BLOCKS(size, block);",1/3/07ProjectE - TIM - 1845,Unreachable code in Inst6 Build 5.4 FSW (Inst6_image.c),3,The conditional statements on lines 1600 and 1621 will never execute because the values for which they are compared against are already positive (not in error). Code segment and line numbers are provided below. File: Inst6_image.c Function: Inst6_CCDProcImage 1520 rc4 = MAGI_OK; /* PFR 4652 */ 1521 rc5 = MAGI_OK; /* PFR 4652 */ ... 1599 rc3 = Inst6_CCDSubframe(ccd_sel); /* PFR 4652 */ 1600 if (MAGI_OK != rc4) { /* PFR 4652 */ ... 1620 rc4 = Inst6_CCDDecimate(ccd_sel); /* PFR 4652 */ 1621 if (MAGI_OK != rc5) { /* PFR 4652 */,12/27/06ProjectE - TIM - 1844,Unreachable code in Inst8 Build 5.4 FSW (Inst8_cmd.c),3,"The conditional statement on line 981 in the function, Inst8_ProcMulti, will never evaluate to True because the entry for this path of logic is opposite of what is listed on line 970 (Line 981 falls inside Line 970). Code segment and line numbers are provided below. File: Inst8_cmd.c Line: 981 970 if (!Inst8_system_abort) { ... 981 if (Inst8_system_abort) { /* FS9229 PFR5411 */",12/27/06ProjectE - TIM - 1843,Unreachable code in Inst6a Build 5.4 FSW (magi_image.c),3,"The conditional statement on line 1258 in the function, img_Decimate, will never evaluate to True because the variable is initialized to a default value that is never changed prior to this point in execution. Code segment and line numbers are provided below. File: magi_image.c 1142 ydec = 2; ... 1257 /* Generate histogram for 1x4 CCD binned images */ /* FS8688 PFR4656 */ 1258 if (1 == ydec) {",12/27/06ProjectE - TIM - 1842,Multiple declared functions with different parameter lists in Inst6/Inst6b Build 5.4 FSW,3,"The function, Inst6_CCDAERepeatImage, is declared twice but features different parameter lists in each declaration. Inst8_image.h, line 27 uint16_t Inst6_CCDAERepeatImage(void); /* FS8450 PFR4536 */ Inst6_image.h, line 45 uint16_t Inst6_CCDAERepeatImage(uint16_t ccd_sel); /* SPR FS8455 PFR 4537 */",12/27/06ProjectE - TIM - 1841,Unreachable code in Inst6 Build 5.4 FSW (Inst6_cmd.c),3,The following Inst6 current state checks for a Ready Inst6 operational state will never evaluate to true becuase the entry for this path of logic already restricts the Inst6 current state to Defer or Preheat. IV&V cannot determine if the intent of the PFRs are clearly implemented. Code segments and line numbers are listed below. File: Inst6_cmd.c Function: Inst6_ProcDeferred 903 if (((Inst6_STATE_DEFER == Inst6_curr_state) || /* FS8717 PFR4717 */ 904 (Inst6_STATE_PREHEAT == Inst6_curr_state)) && /* FS8717 PFR4717 */ 905 Inst6_MULTI_DONE == Inst6_cmd.multi_step) { 917 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 944 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 968 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 995 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1020 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1046 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1073 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1098 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1127 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */,12/27/06ProjectE - TIM - 1840,Requirement FSW4868 is not verified by test script fpvt-eps.bs-01-34,4,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4868 which states: ""a) If this is the first error for this bus, PCPM shall record overcurrent in error for this bus in the Fault History Table (see Fault Recorder)."" There is not enought information in the script to determine where this requirement is being verified. There is a global variable (QLC_BusOvCur) that is tested , but no evidence that the FHT is being analyzed, or what the parameter name is in the FHT.",12/8/06ProjectE - TIM - 1839,Requirement FSW4847 is not verified by test script fpvt-eps.bs-01-34,3,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4847 which states: ""a) PCPM shall record the current state (on, off) of this load."" The current state is verified for 2 loads(Inst4 and DesV1), but not all loads (RcsCb, DesRL).",12/8/06ProjectE - TIM - 1838,Requirement FSW4452 is not verified by test script fpvt-gnc.imu-01-22,3,"Test Case fpvt-gnc.imu-01-22 tests requirement FSW4452 which states: ""4) AKPM shall wait a parameterized number of seconds."" Test script just verifies a power cycle, does not test ""waiting a parameterized number of seconds""",12/8/06ProjectE - TIM - 1837,Requirement FSW4845 is not verified by test script fpvt-eps.bs-01-34,3,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4845 which states: ""c) If the load was previously powered on and it is on the exclusion list, PCPM shall mark it failed."" Test script tests Inst4 and DesV1 loads for their status, but it is not clear that these loads were on the exclusion list. The content of the exclusion list is not provided in the test script.",12/8/06ProjectE - TIM - 1836,Requirement FSW4849 is not verified by test script fpvt-eps.bs-01-34,4,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4849 which states: ""1) PCPM shall record the start of the DLS on this bus in the Fault History Table (see Fault Recorder) and QuickLook bits."" The test script does not provided enough information to determine where this requirement is being verified. Also, it is not clear what the FHT parameter name is.",12/8/06ProjectE - TIM - 1835,Requirement FSW4839 is not verified by test script fpvt-eps.bs-01-34,4,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4839 which states: ""4. PCPM shall record the end of the DLS on this bus in the Fault History Table (see Fault Recorder)."" There is not enough information in this script to determine where this requirement is being verified.",12/8/06ProjectE - TIM - 1833,Requirement FSW4449 is not verified by test script fpvt-gnc.imu-01-22,3,"Test Case fpvt-gnc.imu-01-22 tests requirement FSW4449 which states: ""7) AKPM shall reinitialize the IMU software object."" Test script prints: log ""Verification Method: No command history available to verify this."" followed by: ""Verify that another 0XA200: 0X3 IMU CLFP Detection in Fault Data pointer check is generated."" There is not enough information in the script to determine if this requirement is verified.",12/8/06ProjectE - TIM - 1832,Requirement FSW4846 is not verified by Test Script fpvt-eps.bs-01-34,3,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4846 which states: ""b) PCPM shall power off the load."" The script verifies that the load has been shed for 2 of the 4 devices on the bus when a Diagnostic Load Shed has been requested. The script should verify that all 4 loads have been shed.",12/8/06ProjectE - TIM - 1831,Requirement FSW3614 is not vertified by test case fpvt-gnc.imu-01-22,3,"Test Case fpvt-gnc.imu-01-22 tests requirement FSW3614 which states: ""Upon request, SPM shall set the sequence global variable for each instrument indicating that it has been ""safed"", and initiate the execution of a mission phase specific block in order to safe all science instruments upon initiation of Heartbeat Termination and record that all instruments have been safed in the Fault History Table."" The requirement states that the SPM shall set the sequence global variable for each instrument indicating that it has been safed. The wording implies that there is a global variable for each instrument. The script only verifies the FHT entry 0XA002: 0X1 HBG Milestone Science safed parameter. It is not clear how the script verifies that all instruments are safed.",12/7/06ProjectE - TIM - 1830,Too few initializers for thermostat failed array in the Build 5.3 FSW,3,"File: DBPM.c The below code is missing 3 values in its initialization. The array is of size 18, but is only initialized to 15 values. Lines: 233-248 static bool_t thermostat_failed[THERM_NUM_ENABLE_OBJECTS] = { FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE};",12/7/06ProjectE - TIM - 1829,Unused functions in the Build 5.3 FSW,4,The following functions are unused in the the Build 5.3 FSW. There is no indication of the status of these functions for the ProjectE FSW. clockLib.c Line 2135: void clock_difftime Line 2260: double clock_sc_time_double_resolution Line 1918: void clock_sc_time_resolution Line 2093: void clock_sc_timespec_resolution Line 1777: void clock_set_sc_time Line 2218: void clock_set_sc_time_double Line 2051: void clock_set_sc_timespec Line 2108: void clock_sumtime Line 2643: void clockConditionInit cmd.c Line 511: void cmd_delete_hist_buf Line 546: void cmd_delete_restrict_sem fsw_trace.c Line 124: void cs_trace_enable Line 113: void fsw_trace_disable(void) Line 112: void fsw_trace_enable Line 115: void hpp_trace_enable Line 135: void int12_trace_enable Line 129: void int9_trace_enable LIne 118: void intX_trace_enable Line 121: void meeb_trace_enable exceptionDef.c Line 191: void dumpExceptionData eps_ccu.c Line 2259: FP_Condition_t eps_ccu_pm_get_cond FPU_Commander.c Line 227: void FPUcmd_send_command_file msg.c Line 442: int msg_delete_queues Line 1169: int msg_dump_trace Line 1152: int msg_q_dump_max_depth Line 1484: int msg_reset_queue_hi_h20_data msg_timer.c Line 328: int msg_delete_timer rom_Ref_Mode.c Line 532: bool_t rom_Slew_Complete exceptionDef.c Line 987: STATUS set_chokeRecursion Line 992: STATUS set_CRITICAL_EPISOD sun_sensor.c Line 1023: void ssaGetCondition Line 1044: void ssaSetCondition,12/7/06ProjectE - TIM - 1828,Build 5.0 Tips Table value differs from design,4,"Design document: D-32445_Inst5_FSW_Design_Doc_RevA Binary Inst5 Tip Table file: Inst5_tip.tbl The table initializes tip state as ""DEAD"". The design document indicates the tip state should be initialized as ""NOT TESTED""",12/6/06ProjectE - TIM - 1827,Build 5.0 Tips Table structure differs from design,3,"Design document: D-32445_Inst5_FSW_Design_Doc_RevA Binary Inst5 Tips Table file: Inst5_tip.tbl Table structure for Tips Table entries does not match design. Section 10.4.7 page 90 of design document provides only a table entry description, a complete listing table values are missing. (x offset should be unique for each tip, running from 0 to 225)",12/6/06ProjectE - TIM - 1826,Build 5.0 Coupon Table structure differs from design,3,"Design document: D-32445_Inst5_FSW_Design_Doc_RevA Binary Coupon Table file: Inst5_coupon.tbl Table structure for Coupon Table entries does not match design. Section 10.4.6 page 89 of design document shows that for each substrate, table entries consist of a Rotation Offset followed by a Substrate Height. Implementation of the coupon table appears to have Rotation Offset followed by Coupon Number. Since all Substrate Height values are zero, it is possible they have been intentionally omitted. In that case the design document should be corrected to show Coupon Number in the entries description. Header matches design and has correct values.",12/6/06ProjectE - TIM - 1825,Improper use of bitwise 'and' in Build 5.3 FSW,4,File: iocNodeCmic.c Function: iocCmicAddrRegWrite Line: 1372 Code segment: while ((AddressWriteDone==0) & (AddressTriesRemaining>0)) The code checks that writing is not finished and valid tries remain. A logical 'and' should have been used.,11/29/06ProjectE - TIM - 1824,Improper use of bitwise 'or' in Build 5.3 FSW,4,"Build 5.3 File: ms1553bInterface.c Function: ms1553bRtCmdValidation Line: 532 The code checks that the number of commands is valid, between 0 and a maximum value, a logical 'or' should have been used. Code segment: else if ( (numOfCmds == 0) | (numOfCmds > MS1553B_MAX_NUM_CMDS) )",11/29/06ProjectE - TIM - 1823,Mis-matched parameters in memory copy function in Build 5.3 FSW,3,"Build 5.3 File: vm_opcode_functions.c Function: command_coerce_unknown Line: 2716 Code segment: memcpy(opcode_ptr, &opcode, sizeof(opcode)); Function memcpy - uint16_t copied to uint8_t: Copy destination: opcode_ptr is type uint8_t Copy source: opcode is type vm_cmd_opcode_type which is type uint16_t",11/29/06ProjectE - TIM - 1822,Mis-matched parameters in memory copy function in Build 5.3 FSW,3,"Build 5.3 File: astr.c Function: astrInitParams Line: 470 Code segment: memcpy(&tm_chk_expctd_val[6], &astr_cfg.Align[astr_active].EE_checksum, 4); Function memcpy - uint32_t copied to uint16_t: Copy destination, tm_chk_expctd_val is type uint16_t Copy source, EE_checksum is type uint32_t",11/29/06ProjectE - TIM - 1821,Function parameter not used in Build 5.3 FSW,3,"There is an unused function parameter (seconds) in the function rtos_thread_suspend_self. In the previous build (5.1) of this file the parameter was a delay time, specified in seconds. It was used in implementing the vxWorks taskDelay routine (ensure specified delay time elapses). The overall functionality of rtos_thread_suspend_self has changed in Build 5.3 but rtos_thread_suspend_self continues to be called with the delay time parameter. File: rtos.c Function: rtos_thread_suspend_self Parameter: seconds Line: 469",11/16/06ProjectE - TIM - 1820,Possibly missing a configuration file in Build 5.3 FSW,3,"The configuration file, thm_thermo_def.cfg, is multiply defined in config_file.h. Since IV&V does not have exposure into the Build 5.3 config files, we cannot determine if this is a simple 'copy and paste' error that can be deleted or the FSW is actually missing a configuration file. File: config_file.h Lines: 280, 281 Code Segment: 280 #define THM_THERMOSTAT_DEF_CFG THM_CFG_BASE ""thm_thermo_def.cfg"" 281 #define THM_THERMOSTAT_DEF_CFG THM_CFG_BASE ""thm_thermo_def.cfg""",11/16/06ProjectE - TIM - 1819,Inconsistent byte definition within Inst5 HW/SW ICD,4,"In Section 4.3 (Command Buffer Layout) of the Inst5 HW/SW ICD, Byte 4 is listed as CMD_LED_0 and Byte 5 is listed as CMD_LED_1. This is not consistent with Section 6.9.1 Fields Referenced. In this section, CMD_LED_0 is listed ast Byte 3 and CMD_LED_1 is listed as Byte 4. Inst5 HW/SW ICD (April 21, 2006) 1. Section 4.3 Command Buffer Layout 2. 6.9.1 Fields Referenced",11/2/06ProjectE - TIM - 1818,Inconsistent FPGA command modes,3,"Mode 14 of the Inst5 FPGA command modes is not consistent between implementation (mcCme.h) and the Inst5 Hardware-Software Interface Control Document (April 21, 2006). Implementation shows Mode 14 as being MC_FPGA_MODE_POWER which implements power functionality. The ICD shows this as CMODE_MISC which implements setting “TTL level I/0s and set clock count for Wet Chem conductivity read-outs” It is not clear if the functionality listed in the ICD has been replaced with the current Mode Power implementation. Build 5.1 Code: 1. mcCme.h (line 186) 2. FPGA mode: MC_FPGA_MODE_POWER Inst5 HW/SW ICD (April 21, 2006) 1. Section 4.2 Command Modes 2. Table 1: Command Mode Values. 3. Mode 14: CMODE_MISC 4. Also refer to Section 6.13 Mode 14 - Miscellaneous Operations (CMODE_MISC) for expaneded usage",11/2/06ProjectE - TIM - 1817,Missing Lander (TEFSW) command in Inst4 Flight Software Command Dictionary,4,"The TEFSW Command, CMD_OP_Inst4_SET_LEETAG, is found in the command definition database (cmd_def_db.h), but not in Section 3.1 of the Inst4 Flight Software Command Dictionary. Document: Inst4 Flight Software Command Dictionary Version 2.2 Build 5.1 Code: cmd_def_db.h (line 795)",11/2/06ProjectE - TIM - 1816,Implementation of Inst5 Temperature Control does not match Inst5 design section 6.3.7,3,"Function: mcWchem_TempControl_exe File: mcWchem.c Design Document: D-32445_Inst5_FSW_Design_Doc_RevA.doc Several elements of Design Document Section 6.3.7 are not evident in the source code. From the first flow chart of Section 6.3.7 (p. 49 of design doc.): If 'Null fields in command' = True, Stop the specified heater, then test for all heaters off. Code to test for 'All heaters off?' is not evident. If 'Temp control already active?' = True, Extend timer duration if necessary. Code to extend timer duration is not evident. If 'Temp control already active?' = False, set up timer, set phase to ""setup"", ... Code to set phase to ""setup"" is not evident. Note: It may be that the appropriate tests and settings occur in the functions for each device employing heaters (drawers, etc.) and not in the mcWchem_TempControl_exe function. In that case, this issue would be of lesser severity and would only note implementation differing from design.",10/18/06ProjectE - TIM - 1815,Inst5 implementation of sensor read for MC_TIMER_PHASE_READ_CHRONOCV and MC_TIMER_PHASE_READ_CHRONOAS in section 6.3.6 differ from Inst5 design,3,"Function: mcWchem_ServiceReadTimer File: mcWchem.c Design Document: D-32445_Inst5_FSW_Design_Doc_RevA.doc ***** MC_TIMER_PHASE_READ_CHRONOCV: Design document shows that if the phase is MC_TIMER_PHASE_READ_CHRONOCV, then a test should be performed to see if Read ISEs is needed. If Read ISEs are not needed, then set phase to read PT. The implementation instead tests to see if Read CCV is needed. If Read CCV is not needed, then set phase to read CAS. Code segment: 1882 case MC_TIMER_PHASE_READ_CHRONOCV: 1883 if (!wchemReadCCv) 1884 td->phase = MC_TIMER_PHASE_READ_CHRONOAS; ***** MC_TIMER_PHASE_READ_CHRONOAS: Design document shows that if the phase is MC_TIMER_PHASE_READ_CHRONOAS, then a test should be performed to see if Read ISEs is needed. If Read ISEs are not needed, then set phase to read PT. The implementation instead tests to see if Read CAS is needed. If Read CAS is not needed, then set phase to read ISES2. Code segment: 1898 case MC_TIMER_PHASE_READ_CHRONOAS: 1899 if (!wchemReadCAs) 1900 td->phase = MC_TIMER_PHASE_READ_ISES_2;",10/16/06ProjectE - TIM - 1814,"Inst5 implementation of device phase ""setup"" and ""off"" tests in section 6.3.5 differs from Inst5 design",3,"Function: mcWchem_ServiceStirTimer File: mcWchem.c Line number: 3107 Design Document ""ProjectE Project Inst5 Flight Software Design Document Rev A"" D-32445_Inst5_FSW_Design_Doc_RevA.doc Document Section: 6.3.5 Design shows that if Phase = ""setup"" then Power On Stirrer. If Phase = ""Off"", check for stir suppression and Power On Stirrer only if stir suppression is False. That is, only the ""off"" case should check for stir suppression. As implemented, tests for ""setup"" and ""off"" share the same case block, and both check for stir suppression. If phase = ""setup"" and stir suppression = True, some setup steps may be erroneously omitted.",10/12/06ProjectE - TIM - 1813,Inst5 implementation of device enable test Section 6.3 differs from Inst5 design,3,"Function: mcCmd_VerifyEnable File: mcCmd.c Design Document ""ProjectE Project Inst5 Flight Software Design Document Rev A"" D-32445_Inst5_FSW_Design_Doc_RevA.doc Several design elements from section 6.3 of the design document call function mcCmd_VerifyEnable to test for device enable. In each case, if the test fails, the design indicates that a message should be issued and the function exited. However, the function implementation tests for device enable, issues a message upon enable failure, but then continues executing segments of function code. example code implementation: if (mcCmd_VerifyEnable(MC_DEVICE_WCHEM,&status) == ERROR) EVR_REPORT_EVENT_0(EVR_WARNING, MC_WCHEM_ENABLE_STIR_EVR_ID, EVR_LOC(__LINE__), ""Wet-chem disabled; WCHEM_STIR failed""); File: mcWchem.c Functions calling mcCmd_VerifyEnable without exit after message: mcWchem_DrawerClose_chk, line 331, design section 6.3.2 mcWchem_DrawerOpen_chk, line 631, design section 6.3.1 mcWchem_TempControl_chk, line 1001 design section 6.3.7 mcWchem_Read_chk, line 1582, design section 6.3.6 mcWchem_ReleaseReagent_chk, line 2420 design section 6.3.4 mcWchem_ReleaseH2o_chk, line 2697 design section 6.3.3 mcWchem_Stir_chk, line 2893 design section 6.3.5",10/5/06ProjectE - TIM - 1812,Missing global variable definition in the Build 5.1 FSW (Inst9),4,The following extern global variable is missing its definition in the Build 5.1 FSW. extern Global: PacsimTaskId File: ra_command.c Line: 575,9/21/06ProjectE - TIM - 1811,Unused global variable in the Build 5.1 FSW (Inst6),4,The following global variable is unused in the the Build 5.1 FSW. There is no indication of the status of this variable for the ProjectE FSW. Variable: Inst6_overtime_evr_gate File: Inst6_preheat.c Line: 61,9/21/06ProjectE - TIM - 1810,Macros have multiple definitions in Build 5.1 FSW (Inst6),4,The following have a definition that occurs in two separate places of the code: Inst6_PACI_DEF_TIMOUT File: Inst6_types.h Lines: 400 and 430,9/21/06ProjectE - TIM - 1809,Unused global variable in the Build 5.1 FSW (Inst6),3,"Global variable 'Inst6_inst_if_disc_err_cnt' is declared at line 77 in Inst6_globals.h and defined at line 128 in Inst6_globals.c. However the variable is not used. Because of potential interaction with HLFP system indicated by usage of the variable, this issue is assigned severity level 3 rather than 4.",9/21/06ProjectE - TIM - 1808,Duplicate function declaration in Build 5.1 FSW (I/O),3,"The function, cio_isr_task, is declared twice in the following files: 1. cio_isr.h, Line 44 2. cio_task.h, Line 39",9/21/06ProjectE - TIM - 1807,Variable value never used after assignment,4,"The following variables are assigned a value and then are never used: l_ccu File: eps_ccu.c Line: 891 Function: eps_ccu_calc_volt_temp_soc() IV&V Note: Initialized as a pointer, then never used l_ccu File: eps_ccu.c Line: 3637 Function: eps_ccu_cell_open() IV&V Note: Initialized as a pointer, then never used",9/14/06ProjectE - TIM - 1806,Macros have multiple definitions,4,The following have a definition that occurs in two seperate places of the code: SAM_LV_SEP_DEF_CFG File: config_file.h Lines: 266 and 409 SAM_LM_DEF_CFG File: config_file.h Lines: 265 and 410 SAM_CFG_BASE File: config_file.h Lines: 263 and 405 SAM_CS_SEP_DEF_CFG File: config_file.h Lines: 267 and 408 LANDED_INIT_BLOCK File: hlfp_fpe_cfg.h Line: 83 File: hlfp_sme_cfg.h Line: 173 SANITY_PERSISTENCE File: sam_cfg_file.h Line: 119 File: sam_lsad_cfg.h Line: 93,9/14/06ProjectE - TIM - 1805,Return value of function not used,4,"Some of the functions below never use their return value, while others demonstrate inconsistant usage. The Flexe-Lint messages generated are all either: 144 - Error, non-existant return value for a function, or 534 - Warning, ignoring return value of a function. Function: assign File: vm_opcode.c Line: 1462 Warning Message 534 Function: eps_discrete_sw_cmd File: eps_discrete_sw.c Line: 962 Warning Message 534 Function: vm_engine_process_spawn File: vm_engine.c Line: 5205 Warning Message 534 Function: spawn File: vm.c Line: 1048 Warning Message 534 Function: load File: vm.c Line: 894 Error Message 144 Function: preserve_and_reload_buffer File: vm_parser.c Line: 5434 Warning Message 534 Function: vm_opcode_assign File: vm_expr.c Line: 234 Warning Message 534 Function: gerReadCfgFile File: ger_Guided_Entry_Ref.c Line: 106 Warning Message 534 Function: fsw_readCfgFile File: SME.c Line: 203 Warning Message 534 Function: msg_init_queues File: msg.c Line: 203 Warning Message 534 Function: clockCMICRead File: clockLib.c Line: 2795 Warning Message 534 Function: ioctl File: ac_propulsion.c Line: 1575 Warning Message 534 Function: ioctl File: cmic_drv.c Line: 490 Warning Message 534 Function: ioctl File: pty.c Line: 432, 453, 462, 463, 470, 471, 474, 475, 476 Warning Message 534 Function: ioctl File: FLTREC.c Line: 1368, 1371, 1671, 1674 Warning Message 534 Function: ioctl File: upl_codeblock.c Line: 156, 200 Warning Message 534 Function: cio_read_atom File: teleUHF.c Line: 3072 Error Message 144",9/8/06ProjectE - TIM - 1804,Return value of function not used,3,"Function: eps_sensor_data_read_eu File: eps_ccu.c Line: 3591 Warning Msg 534 The function, eps_ccu_cbu_malfunction, calls eps_ccu_cbu_get_bypass_data, which calls eps_sensor_data_read_eu. However eps_sensor_data_read_eu has the possibility of returning early on invalid id. That could lead to a misinterpreation of the number of battery cells being bypassed in function eps_ccu_cbu_malfunction. The other functions that call eps_sensor_data_read_eu use the return value of the function.",9/8/06ProjectE - TIM - 1803,Return value of function not used,3,Function: vm_external_data_read File: vm_operand.c Line: 358 Warning Msg 534 The function is defined in vm_external_data.c. Lines 280 and 283 of vm_external_data.c (see excerpt) allow early returns without generating and EVR.,9/8/06ProjectE - TIM - 1802,Unused global variable,3,"Global variable 'FPE_uhf_antenna' is declared at line 162 and not used. Because of potential interaction with HLFP system indicated by usage of the variable, this issue is assigned severity level 3 rather than 4. File: phx_fsw.ar\hlfp.mod\FPE.c Line 162 Msg 552 - Warning",9/7/06ProjectE - TIM - 1801,Unused local variable,4,Local variable 'comm_duration' is declared at line 124 of function 'SME_Do_CommAtt' and not used. File: phx_fsw.ar\hlfp.mod\SME_CommAtt_md.c Line 124-812 Msg 550 - Warning,9/7/06ProjectE - TIM - 1800,Switch statement has no default case,3,Switch statement has no default case. File: phx_fsw.ar\telecom.mod\teleUHF.c Line 1822 Msg 744 - Info,9/7/06ProjectE - TIM - 1799,Switch statement has no default case,3,Switch statement has no default case. File: phx_fsw.ar\eps2.mod\eps_Initiator.c Msg 744 - Info The file contains two instances of switch statements with no default case: Function 'eps_Initiator_Load' Switch statement Begins line 158 Ends line 180 Function 'eps_Initiator_SmartLoad' Switch statement Begins line 647 Ends line 669,9/7/06ProjectE - TIM - 1798,Uninitialized variable,4,"Too few initializers for aggregate 'ls_last_time'. One of two values is initialized. File: phx_fsw.ar\eps2.mod\eps_ccu.c Line: 1026 Msg 785 - Info Code: static double ls_last_time[NUM_EPS_CCU_ID] = {0.0}; NUM_EPS_CCU_ID=2, so one more value should have been initialized.",9/7/06ProjectE - TIM - 1797,Unused global variable in the Build 5.1 FSW (I/O),4,The following global variable is unused in the the Build 5.1 FSW. There is no indication of the status of this variable for the ProjectE FSW. iocNodeCmic.c Line: 153 Variable: iocNodeCmicBoundsNoMem,9/7/06ProjectE - TIM - 1796,Unused functions in the Build 5.1 FSW,4,The following functions are unused in the the Build 5.1 FSW. There is no indication of the status of these functions for the ProjectE FSW. ac_act_suite.c Line: 211 Function: ac_asGetStatus eps_pdc_sw.c Line: 2236 Function: eps_pdc_sw_get_alt_pwr FPE.c Line: 3064 Function: FPE_safing_requestor_other_than_landed_wakeup fsw_trace.c Line: 141 Function: int11_trace_enable sam_Cruise_Sep_Monitor.c Line: 612 Function: samCSM_State sam_Sensor.c Line: 488 Function: samSensor_getReadErrCounterId,9/7/06ProjectE - TIM - 1795,Unused functions in the Build 4 FSW (Inst6/Inst6b),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. ice_JpegSetACTable 1. File: ice_tbl.c 2. Line: 1174 ice_JpegSetDCTable 1. File: ice_tbl.c 2. Line: 1122 ice_JpegSetQTable 1. File: ice_tbl.c 2. Line: 1225 ice_LUTSetTable 1. File: ice_tbl.c 2. Line: 1264 img_Init 1. File: magi_image.c 2. Line: 215 Inst8_CCDFreeImgSlot 1. File: Inst8_image.c 2. Line: 190 Inst8_CmdFpEnable 1. File: Inst8_fsw.c 2. Line: 683 Inst8_CmdGetBadCount 1. File: Inst8_cmd.c 2. Line: 149 Inst8_CmdGetCmdCount 1. File: Inst8_cmd.c 2. Line: 131 Inst8_CmdGetFPCond 1. File: Inst8_fsw.c 2. Line: 700 Inst8_CmdGetRejCount 1. File: Inst8_cmd.c 2. Line: 167 Inst8_GetHeaterState 1. File: Inst8_preheat.c 2. Line: 197 Inst8_GetPrevPhase 1. File: Inst8_move.c 2. Line: 542 Inst8_StowMove 1. File: Inst8_move.c 2. Line: 1075 Inst6_CmdCCD 1. File: Inst6_inst_cmds.c 2. Line: 326 Inst6_CmdFILL 1. File: Inst6_inst_cmds.c 2. Line: 569 Inst6_CmdGetFPCond 1. File: Inst6_fsw.c 2. Line: 761 Inst6_GetCurrDirection 1. File: Inst6_move.c 2. Line: 753 Inst6_GetHeaterMaxTime 1. File: Inst6_preheat.c 2. Line: 274 Inst6_GetHeaterTargetTemp 1. File: Inst6_preheat.c 2. Line: 412 Inst6_ReadAllADC 1. File: Inst6_status.c 2. Line: 626 Inst6_SetLastADC 1. File: Inst6_move.c 2. Line: 1067 Inst6_SetPrevPosition 1. File: Inst6_move.c 2. Line: 879,7/23/06ProjectE - TIM - 1794,Unused functions in the Build 4 FSW (Inst9),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. ra_CmdGetFpCond 1. File: ra_fp.c 2. Line: 112 ra_col_get_link_poses 1. File: ra_col.c 2. Line: 3107 ra_col_get_obj 1. File: ra_col.c 2. Line: 3042 ra_col_get_objs 1. File: ra_col.c 2. Line: 3125 ra_compute_object_poses 1. File: ra_col.c 2. Line: 2871 ra_write_mgr_q 1. File: ra_queues.c 2. Line: 1152,7/23/06ProjectE - TIM - 1793,Unused functions in the Build 4 FSW (Inst10),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. metdmGetFpConditionLidar 1. File: metdm.c 2. Line: 357 metdmGetFpConditionPt 1. File: metdm.c 2. Line: 362 metdmPutF32 1. File: metdm.c 2. Line: 324 metdmPutU32 1. File: metdm.c 2. Line: 317,7/23/06ProjectE - TIM - 1792,Unused functions in the Build 4 FSW (Inst4),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. Inst4_fp.c 1. Function: Inst4_Condition1_Get (line 103) 2. Function: Inst4_Condition1_Set (line 159) 3. Function: Inst4_Condition2_Get (line 191) 4. Function: Inst4_Condition2_Set (line 224),7/23/06ProjectE - TIM - 1791,Unused functions in the Build 4 FSW,4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. Downlink_Alloc 1. File: DownlinkExt.c 2. Line: 313 Downlink_AllowedPackets 1. File: DownlinkExt.c 2. Line: 293 Downlink_Free 1. File: DownlinkExt.c 2. Line: 345 FLTREC_Retrieve_Obits 1. File: FLTREC.c 2. Line: 744 FPUcmd_send_immed_command232 1. File: FPU_Commander.c 2. Line: 227 HLFPcmd_Commander_Done 1. File: FPU_Commander.c 2. Line: 381 ac_propGetCumulativeOnTime 1. File: ac_propulsion.c 2. Line: 1617 ac_propGetPrevPulseWidths 1. File: ac_propulsion.c 2. Line: 1509 ac_propGetThrustingFlag 1. File: ac_propulsion.c 2. Line: 1643 ac_propSetMinorFrameOffset 1. File: ac_propulsion.c 2. Line: 893 ac_propSetRtcValuePtr 1. File: ac_propulsion.c 2. Line: 1590 adGc_FswInit 1. File: ad_GyroComp.c 2. Line: 82 adGc_LandedNav_Data_Corrupted 1. File: ad_GyroComp.c 2. Line: 451 ad_ImuGetAccelCondition 1. File: ad_imu.c 2. Line: 1762 ad_ImuSetAccelCondition 1. File: ad_imu.c 2. Line: 1806 ad_ImuSetGyroCondition 1. File: ad_imu.c 2. Line: 1784 ad_MrdQuatGet 1. File: ad_state.c 2. Line: 723 ad_MrdRateGet 1. File: ad_state.c 2. Line: 771 ad_StellarRateGet 1. File: ad_state.c 2. Line: 819 ad_StellarResidualError 1. File: ad_stellar.c 2. Line: 451 ad_TransToAllStellarIsEnabled 1. File: ad_state.c 2. Line: 1121 ahrCalGetBiasCondition 1. File: calib.c 2. Line: 349 ahrCalGetScaleCondition 1. File: calib.c 2. Line: 345 ahrCalSetBiasCondition 1. File: calib.c 2. Line: 357 ahrCalSetScaleCondition 1. File: calib.c 2. Line: 353 asr_Calc_Total_Time 1. File: asr_Abs_Slew_Ref.c 2. Line: 421 asr_FswInit 1. File: asr_Abs_Slew_Ref.c 2. Line: 89 cio_ddt_initialize 1. File: cio_ddt.c 2. Line: 204 cio_error_count 1. File: cio.c 2. Line: 1325 cio_function 1. File: cio.c 2. Line: 1363 cio_last_error 1. File: cio.c 2. Line: 1549 cio_lock 1. File: cio.c 2. Line: 1592 cio_reset_error 1. File: cio.c 2. Line: 2002 cio_set_alert_callback 1. File: cio.c 2. Line: 2048 cio_set_alert_interrupt_callback 1. File: cio.c 2. Line: 2093 cio_unlock 1. File: cio.c 2. Line: 2137 cio_write_atom 1. File: cio.c 2. Line: 2192 cio_write_n_bytes 1. File: cio.c 2. Line: 2297 cmic_getErrorCount 1. File: cmic_drv.c 2. Line: 558 crc16_reset 1. File: crc.c 2. Line: 145 eep_getErrorCount 1. File: eep_drv.c 2. Line: 480 eps_emic_relay_get_relay_from_comp 1. File: eps_emic_relay.c 2. Line: 2190 eps_pdc_sw_get_comp_id 1. File: eps_pdc_sw.c 2. Line: 2287 eps_pdc_sw_get_ctrl_rpc_sw 1. File: eps_pdc_sw.c 2. Line: 1436 eps_pdc_sw_get_pdcshed_enable 1. File: eps_pdc_sw.c 2. Line: 1489 eps_pdc_sw_set_pdcshed_enable 1. File: eps_pdc_sw.c 2. Line: 1545 eps_sensor_data_get_cond 1. File: eps_sensor_data.c 2. Line: 1067 eps_sensor_data_push_raw 1. File: eps_sensor_data.c 2. Line: 695 evrDisableID 1. File: evr.c 2. Line: 2758 evrEnableID 1. File: evr.c 2. Line: 2732 evrShowDisabled 1. File: evr.c 2. Line: 2784 evr_get_dead_tlm 1. File: evr.c 2. Line: 1946 exc_Context 1. File: exceptionDef.c 2. Line: 345 flash_read_error_count_access 1. File: flash_dev.c 2. Line: 1041 flash_read_error_count_clear 1. File: flash_dev.c 2. Line: 1045 flash_write_error_count_access 1. File: flash_dev.c 2. Line: 1049 flash_write_error_count_clear 1. File: flash_dev.c 2. Line: 1053 fpc_dsi_filter_load 1. File: exceptionDef.c 2. Line: 926 fpc_dsi_print_filters 1. File: exceptionDef.c 2. Line: 954 fsw_cmd_send_2_long_parms 1. File: fsw_utils.c 2. Line: 546 heap_get_anchor_size 1. File: heap.c 2. Line: 1996 heap_get_anchors 1. File: heap.c 2. Line: 1214 heap_get_num_of_anchors 1. File: heap.c 2. Line: 2037 heap_join 1. File: heap.c 2. Line: 1891 heap_memcpy 1. File: heap.c 2. Line: 1844 heap_realloc 1. File: heap.c 2. Line: 1679 heap_set_reconstruct 1. File: heap.c 2. Line: 1266 heap_show 1. File: heap.c 2. Line: 1757 hpp_count 1. File: hpp.c 2. Line: 125 hpp_major_frame_rate 1. File: hpp.c 2. Line: 122 hpp_minor_frame_period 1. File: hpp.c 2. Line: 123 hpp_period 1. File: hpp.c 2. Line: 124 hpp_tick_rate 1. File: hpp.c 2. Line: 124 idle_reset_event_reports 1. File: idle.c 2. Line: 190 iocCmicWriteEnable 1. File: iocNodeCmic.c 2. Line: 1438 iocGetErrorCount 1. File: iocNodeAnalog.c 2. Line: 68 iocResetErrorCount 1. File: iocNodeAnalog.c 2. Line: 104 ms1553bCommInFault 1. File: ms1553bInterface.c 2. Line: 797 ms1553bCyclicCmd 1. File: ms1553bInterface.c 2. Line: 289 ms1553bCyclicCmdRemove 1. File: ms1553bInterface.c 2. Line: 397 ms1553bGetRtCondition 1. File: ms1553bInterface.c 2. Line: 715 ms1553bSetRtCondition 1. File: ms1553bInterface.c 2. Line: 758 ms1553bSetSummitCondition 1. File: ms1553bInterface.c 2. Line: 674 nav2_Get_Quat_MRD_to_Descent 1. File: nav2_pub.c 2. Line: 236 nav2_Get_Trans_MRD_to_Descent 1. File: nav2_pub.c 2. Line: 267 paciBoardReset 1. File: paciDrv.c 2. Line: 2776 paciGetErrorCount 1. File: paciDrv.c 2. Line: 548 paciReadParallel 1. File: paciDrv.c 2. Line: 1447 paciReadSASI 1. File: paciDrv.c 2. Line: 1348 paciResetErrorCount 1. File: paciDrv.c 2. Line: 578 paciSimDiscreteIo 1. File: paciDrv.c 2. Line: 1985 paciWriteAnalog 1. File: paciDrv.c 2. Line: 1796 paciWriteSASI 1. File: paciDrv.c 2. Line: 2155 ro_FFwdTrqSet 1. File: ro_Ref_Orientation.c 2. Line: 126 ro_QuatGet 1. File: ro_Ref_Orientation.c 2. Line: 84 ro_QuatSet 1. File: ro_Ref_Orientation.c 2. Line: 71 ro_RateGet 1. File: ro_Ref_Orientation.c 2. Line: 111 ro_RateSet 1. File: ro_Ref_Orientation.c 2. Line: 98 rom_Actuator_Get 1. File: rom_ref_Mode.c 2. Line: 516 rsr_Set_RSR_Parms 1. File: rsr_Rel_Slew_Ref.c 2. Line: 328 rv_Get_Inertial_Vec_Dist2 1. File: rv_Ref_Vector.c 2. Line: 60 saq_Set_Cmd_Info 1. File: saq_Sun_Acq_Ref.c 2. Line: 456 saq_Set_Nom_Rate 1. File: saq_Sun_Acq_Ref.c 2. Line: 478 saq_Set_Rotation_Info 1. File: saq_Sun_Acq_Ref.c 2. Line: 434 sch_read_entry 1. File: sch.c 2. Line: 260 sch_write_entry 1. File: sch.c 2. Line: 234 ssaAlignMatrixGet 1. File: sun_sensor.c 2. Line: 1002 teleSDST_Get_Backup_SDST 1. File: teleSDST.c 2. Line: 605 teleSDST_Get_Tlm_Data_Word 1. File: teleSDST.c 2. Line: 643 teleSDST_PassThru_Cmd 1. File: teleSDST.c 2. Line: 769 thmAccess_Get_Heater_Condition 1. File: thmAccess.c 2. Line: 55 thmAccess_Get_Sensor_Condition 1. File: thmAccess.c 2. Line: 205 thmAccess_Set_Heater_Condition 1. File: thmAccess.c 2. Line: 133 thmAccess_Set_Thermostat_Condition 1. File: thmAccess.c 2. Line: 362 thmAccess_Thermostat_Recovery 1. File: thmAccess.c 2. Line: 417 tlmTrackCounter_getTlmId 1. File: tlmTrackCounter.c 2. Line: 150 tlmTrackCounter_setCurrent 1. File: tlmTrackCounter.c 2. Line: 309 tlm_file_open_write 1. File: telemetry_file.c 2. Line: 91 tlm_file_write 1. File: telemetry_file.c 2. Line: 151 tlm_store_array_int 1. File: telemetry.c 2. Line: 2358 uldlHCRInit 1. File: uldlDrv.c 2. Line: 101 uldlPollTask 1. File: uldlDrv.c 2. Line: 1513 upl_session_get_total_valid_frames 1. File: upl_session.c 2. Line: 93 vm_engine_is_loaded 1. File: vm_engine.c 2. Line: 5741 vm_engine_number_set_abort_evaluation_callback 1. File: vm_engine.c 2. Line: 6167 vm_engine_number_start_count 1. File: vm_engine.c 2. Line: 6334 vm_engine_store_state 1. File: vm_engine.c 2. Line: 7193 vm_gv_read_command 1. File: vm_globals.c 2. Line: 516 vm_gv_read_double 1. File: vm_globals.c 2. Line: 574 vm_gv_read_logical 1. File: vm_globals.c 2. Line: 675 vm_gv_read_string 1. File: vm_globals.c 2. Line: 726 vm_gv_read_time 1. File: vm_globals.c 2. Line: 780 vm_gv_write_command 1. File: vm_globals.c 2. Line: 884 vm_gv_write_logical 1. File: vm_globals.c 2. Line: 1058 vm_load 1. File: vm.c 2. Line: 1853 vm_stack_copy 1. File: vm_stack.c 2. Line: 157 vm_symbol_table_look_up_name_from_offset 1. File: vm_symbol_table.c 2. Line: 427 vm_symbol_table_look_up_offset 1. File: vm_symbol_table.c 2. Line: 467 vm_symbol_table_set_tlm_id 1. File: vm_symbol_table.c 2. Line: 610 vtr_Set_BF_Vec 1. File: vtr_Vector_Track_Ref.c 2. Line: 587,7/23/06ProjectE - TIM - 1790,Unused function parameters in Build 4 FSW,4,"The following function parameters are unused in the the Build 4 FSW. There is no indication of the status of these parameters for the ProjectE FSW. eps_power() 1. File: Inst7.c 2. Line: 787 3. Parameter: cam eps_power_callback() 1. File: Inst7.c 2. Line: 804 3. Parameters: id,volts get_analog() 1. File: Inst7.c 2. Line: 953 3. Parameter: cam Inst7_hpp() 1. File: Inst7.c 2. Line: 1228 3. Parameter: arg",7/23/06ProjectE - TIM - 1789,Unused function parameters in Build 4 FSW,4,"The following function parameters are unused in the the Build 4 FSW. There is no indication of the status of these parameters for the ProjectE FSW. deltavTcmProcess() 1. File: in_deltav_tcm.c 2. Line: 279 3. Parameter: intID enable_disable_scrub() 1. File: idle.c 2. Line: 306 3. Parameter: pCmdLength evr_CallerAddressHistory() 1. File: evr.c 2. Line: 2499 3. Parameter: buf1 evr_init_test() 1. File: evr.c 2. Line: 103 3. Parameter: arg0 fsw_trace_cio_vme_irq_interrupt() 1. File: fsw_trace.c 2. Line: 362 3. Parameters: vector,interrupt_storage_index,interrupt_status_reg rom_Stop() 1. File: rom_Ref_Mode.c 2. Line: 231 3. Parameter: pMsg rom_Start() 1. File: rom_Ref_Mode.c 2. Line: 210 3. Parameter: pMsg rsr_Compute_Reference() 1. File: rsr_Rel_Slew_Ref.c 2. Line: 291 3. Parameter: ref_id ssaRead() 1. File: sun_sensor.c 2. Line: 344 3. Parameter: instId ssaStart() 1. File: sun_sensor.c 2. Line: 255 3. Parameter: pMsg ssaStop() 1. File: sun_sensor.c 2. Line: 288 3. Parameter: pMsg tlm_read_array_uint() 1. File: telemetry_read.c 2. Line: 71 3. Parameters: tlm_id,size,values tlm_read_double() 1. File: telemetry_read.c 2. Line: 57 3. Parameters: tlm_id,value_ptr tlm_read_int() 1. File: telemetry_read.c 2. Line: 43 3. Parameters: tlm_id,value_ptr tlm_read_string() 1. File: telemetry_read.c 2. Line: 64 3. Parameters: tlm_id,size,str tlm_read_uint() 1. File: telemetry_read.c 2. Line: 50 3. Parameters: tlm_id,value_ptr tlm_register_callback_double() 1. File: telemetry_read.c 2. Line: 77 3. Parameters: tlm_id,gv_index tlm_register_callback_int() 1. File: telemetry_read.c 2. Line: 80 3. Parameters: tlm_id,gv_index tlm_register_callback_string() 1. File: telemetry_read.c 2. Line: 86 3. Parameters: tlm_id,gv_index tlm_register_callback_uint() 1. File: telemetry_read.c 2. Line: 83 3. Parameters: tlm_id,gv_index tlm_remove_callback() 1. File: telemetry_read.c 2. Line: 89 3. Parameters: tlm_id,gv_index uldlOpen() 1. File: uldlDrv.c 2. Line: 416 3. Parameters: remainder,mode",7/23/06ProjectE - TIM - 1788,Return value of function not used,3,File fsw_init.c Return value of function 'transmit_init_tlm(int)' is not used Neither of the two calls below use the return value. The return value 'status' is set by a call to function 'Downlink_CreateAndBufferDataM' which returns an int that's set by error checking in the function and returned to 'transmit_init_tlm(int)' to set 'status'. Function References for 'transmit_init_tlm(int)': Call start_application fsw_init.c(429) Define fsw_init.c fsw_init.c(914) Call fsw_init fsw_init.c(1057) Declare fsw_init.h fsw_init.h(489),7/22/06ProjectE - TIM - 1787,Unsigned integer tested for negative value,4,"File lzo1x_c.c Function LZO_PUBLIC(int) The variable 'in_len' is defined as an unsigned integer, but is tested for a negative value at line 428.",7/22/06ProjectE - TIM - 1786,Duplicate function declaration,3,"The following functions are declared twice: File 1: ra_math.c File 2: ra_math.h Functions: ra_magnitude_vector(struct _Vector) File 1 line 82, File 2 line 69 ra_matrix_assign(double, double, etc..., double) File 1 line 86, File 2 line 71 ra_matrix_matrixdotmatrix(struct _Matrix, struct _Matrix) File 1 line 88, File 2 line 75 ra_vector_assign(double, double, double) File 1 line 90 File 2 line 77 ra_vector_matrixdotvector(struct _Matrix, struct _Vector) File 1 line 92, File 2 line 79 ra_vector_vectorcrossvector(struct _Vector, struct _Vector) File 1 line 94, File 2 line 81 ra_vector_vectorminusvector(struct _Vector, struct _Vector) File 1 line 96, File 2 line 83 'ra_vector_vectorplusvector(struct _Vector, struct _Vector) File 1 line 98, File 2 line 85 File 1: ra_monitor.c File 2: ra_monitor.h Functions: ra_accommodate_flag(void) File 1 line 405, File 2 line 136 ra_clear_accommodate_flag(void) File 1 line 406, File 2 line 137 ra_zero_pid_pos_data(void) File 1 line 407, File 2 line 139",7/22/06ProjectE - TIM - 1785,Duplicate function declaration,4,"Function: Inst8_SaveGlobals(void) is declared twice, in file Inst8_fsw.c line 64 and file Inst8.mod/Inst8_fsw.h line 23.",7/22/06ProjectE - TIM - 1784,Switch statement missing default case,3,"File ra_command.c Function 'ra_actuator', line 600 switch (q_msg), line 667, is missing default case at line 818.",7/22/06ProjectE - TIM - 1783,Switch statement missing default case,4,"File Inst6_cmd.c Function: 'Inst6_ProcMulti()' switch (cmd_id), line 646 is missing default case at, line 743",7/22/06ProjectE - TIM - 1782,Loss of sign on assignment of int to unsigned int,3,"File: Inst7.c line Function: Inst7_main() line 1554 if((len = msg_receive(TASK_ID_Inst7, MSG_Q_BLOCK, &msg, sizeof(msg), &prio)) == ERROR), line 1588 len is size_t, which is unsigned int. However, the function msg_receive may return -1 if it encounters an error, an invalid value which could be interpreted as a maximum value unsigned int. Also, note comment by developer: at line 1594: /* what to do here? We used to do a taskSuspend, but LMA didn't like that. */",7/22/06ProjectE - TIM - 1781,Case statement has no break,4,"File Inst6_image.c Function 'Inst6_CCDSetExposure()' case Inst6_CCD_BOTH at line 1613 is missing a break statement. It's the last case statement and is followed by the default break so no damage is done, but it probably should be changed to include a break for clarity, and to prevent errors if future case statements are added.",7/22/06ProjectE - TIM - 1780,Return value of function not used,3,"File ra_manager.c Function 'ra_shut_mgr()' returns the integer Inst9_Q_SHUT_DONE. A comment in the function suggests the return could be used, but the call to the function (line 786) does not use the return value. Code segment containing the function begins at line 1308: int ra_shut_mgr(ra_shutdown_arg* _unused_arg_0_) { /* last 2 arguments are 0 since Inst9_SHUTDOWN has no arguments */ ra_write_act_q(Inst9_SHUTDOWN,0,0); ra_read_mgr_q(TRUE); /* Always turn off power regardless of status returned by actuator task */ ra_switch_power(0); /*always return shutdown done so that current task command stops immediately*/ return Inst9_Q_SHUT_DONE; }",7/22/06ProjectE - TIM - 1779,Too few initializers for a table,3,"File Inst7.c The below code sets the first element of each row of a 3x64 matrix to -1. No issue if that was the inteded result. If the intention was to set values for the entire row the code does not achieve the desired result. code segment lines 323-327: static char slot_sched[N_IMAGE_TYPES][SCHED_SIZE] = { { -1 }, { -1 }, { -1 }, };",7/22/06ProjectE - TIM - 1778,Too few initializers for a table,3,"File ice_tbl.c too few initializers: ice_jpeg_awQuantTable[ICE_JPEG_NUM_QUANT_TBLS][ICE_JPEG_DCTSIZE2D], lines 151-155 (32 of 64 zero values initialized) ice_jpeg_abyDCVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACDC_ENTRIES] lines 175-177 (48 of 51 values initlaiized, 1 value missing from each of the 3 rows, last row is zeros) ice_jpeg_abyACVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACVAL_ENTRIES] lines 197-217 (162 of 256 values initialized) ice_jpeg_abyACVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACVAL_ENTRIES] lines 220-242 (177 of 256 values initialized) ice_jpeg_abyACVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACVAL_ENTRIES] lines 245-267 (177 of 256 zeroes initialized) ice_lut_Table[ICE_LUT3_NUM_TBLS][ICE_LUT3_NUM_ENTRIES] lines 691-1099 (4080 of 4096 zero values initialized - 1 row of 10 zeroes left out)",7/22/06ProjectE - TIM - 1777,Missing default case in the the Build 4 FSW,3,A default case for the switch statement located in the teleUHF_Get_Status function is missing. 1. File: teleUHF.c 2. Lines: 1707-1832,7/21/06ProjectE - TIM - 1776,Error/fault values returned by functions not checked in Build 4 FSW,3,"The following functions can return a type of error/fault value, but functions that call them typically fail to perform any checks on those return values. eps_discrete_sw.c 1. Function: eps_discrete_sw_cmd (line 639) 2. Function: eps_discrete_sw_set_fp_cond (line 1128) eps_emic_relay.c 1. Function: eps_emic_relay_cmd (line 622) 2. Function: eps_emic_relay_set_fp_cond (line 1471) eps_emic_sw.c 1. Function: eps_emic_sw_cmd (line 1070) 2. Function: eps_emic_sw_set_fp_cond (line 1976) 3. Function: eps_emic_enable_sw_get_child_sw (line 3039) eps_pdc_sw.c 1. Function: eps_pdc_sw_cmd (line 737) 2. Function: eps_pdc_sw_set_fp_cond (line 1301)",7/21/06ProjectE - TIM - 1775,Variable (size) assignment results in underflow in Build 4 FSW,3,"In the file vm_globals.c, the local variable ""size"" is defined as a unsigned int. On line 540 in function ""vm_gv_read_command"", the local variable can be assigned a value of -1. This occurrence will happen if the call to the function, cmd_size (line 541), returns the value ERROR (-1) for an invalid opcode. The local variable is further used in calls to the min function (line 541) and memcpy function (line 543). If this -1 assignment were to occur, the most likely scenario is the value will be rolled over to maximum unsigned integer value. It is not clear if this is the desired implementation. The code segments are listed below: 540 size = cmd_size(opd_ptr->storage.command_ptr); 541 size = min(size, max); 543 memcpy(result_ptr, opd_ptr->storage.command_ptr, size);",7/21/06ProjectE - TIM - 1774,"Unreachable code in file Inst6_move.c, function 'Inst6_CalcAZMove' line 310",2,"File Inst6_move.c at line 308: if ((cmd_pos >= Inst6_AZ_FULLCCW) && (cmd_pos <= Inst6_AZ_FULLCCW - Inst6_AZ_DEAD_ZONE)) The statement evaluates to (cmd_pos >= -616) && (cmd_pos <= -634), excluding everything (an unintended result) rather than excluding the dead zone (the intended result).",7/19/06ProjectE - TIM - 1773,Uninitialized variable 'time_of_day' in file PCPM.c,3,"'time_of_day' is used uninitialized in function PCPM_Check_Low_SOC, line 2828 of PCPM.c. Comment at line 2819 says /* TODO time_of_day = RBR_Seconds_Since_Midnight(); */ The function RBR_Seconds_Since_Midnight() exists, and is declared in RBR_md.h, not defined.",7/19/06ProjectE - TIM - 1772,Uninitialized variable 'my_max_sep' in file ra_col_primitives.c,3,"'my_max_sep' is used uninitialized by function ra_collision_BB2(ap, b, B, T, eps, max_sep ? &my_max_sep : 0) at line 956 of file ra_col_primitives.c",7/19/06ProjectE - TIM - 1771,Redundantly defined macro SYS_STATUS in files ra_expansions.c and ra_recovery.c,4,Repeated Macro definition: #define SYS_STATUS (history->pt[history->index]) appears in ra_expansions.c ra_expansions.c(385) and ra_recovery.c(390),7/19/06ProjectE - TIM - 1770,Uninitialized variables 'act_dir' and 'act_steps' in file Inst6_move.c,3,Variables 'act_dir' and 'act_steps' are uninitialized in function 'Inst6_ElMove' lines 1398 and 1399. The variables remain uninitialized if the test at line 1360 'if (new_pos != Inst6_move[Inst6_ACT_EL].curr_position)' evaluates as FALSE.,7/19/06ProjectE - TIM - 1769,Redundant testing for NULL value in file ra_col.c,4,"Macro Inst9_IS_SET at line 4025 tests for obj->parent = NULL. If obj->parent is not NULL, the program calls function 'get_obj' at line 4027 to set the value of 'parent'. The function 'get_obj' also tests obj->parent for NULL. This second test of obj->parent is redundant.",7/18/06ProjectE - TIM - 1768,Multiple declarations for same function in Build 4 FSW (ra.mod),4,"The function, ra_CmdGetFpCond, is declared twice. 1. ra_fp.h, line 103 2. ra_messages.h, line 364 The function, ra_clear_accommodate_flag, is declared twice. 1. ra_monitor.h, line 137 2. ra_monitor.c, line 406 The function, ra_accommodate_flag, is declared twice. 1. ra_monitor.h, line 136 2. ra_monitor.c, line 405 The function, ra_manager, is declared twice. 1. ra_manager.h, line 122 2. ra_messages.c, line 359 The function, ra_vector_vectorplusvector, is declared twice. 1. ra_math.h, line 85 2. ra_math.c, line 98",7/5/06ProjectE - TIM - 1767,Multiple declarations for same function (eps_cmd_ccu_soc_method) in Build 4 FSW,4,"The function, eps_cmd_ccu_soc_method, is declared twice in eps_cmd_handler.h, first in line 70, then in line 72.",7/5/06ProjectE - TIM - 1766,Uninitialized variable (value) in Build 4 FSW (mcCmd.c),3,"The variable, value, can be used before being set in the function mcCmd_IncrementGv. If the call to function, vm_gv_read_uint, on line 1738 returns a value of ERROR, then the variable will not be set prior to be used on 1739. 1. File: mcCmd.c 2. Lines: 1738 and 1739 3. Function: mcCmd_IncrementGv 4. Code Segment: 1736 unsigned int value; 1738 (void)vm_gv_read_uint(gv_index, &value); 1739 value++;",7/5/06ProjectE - TIM - 1765,"Unnecessary if-conditional, eps_rpc_sw.c, line 1019",5,"Unnecessary if-conditional embedded within a case statement of a switch. Variable ""cond"" is the switch variable. The condtion ""cond == Failed"" is inside the case ""Failed"", therefore redundant. phx_fsw.ar\eps2.mod\eps_rpc_sw.c, line 1019 switch (cond) { ... case Failed: FPU_Condit_ToFailed(&eps_rpc_sw[id].cond); /*+++++ * If the switch is being marked failed * mark all the associated downstream PDC switches Failed -----*/ if (cond == Failed) {",5/16/06ProjectE - TIM - 1764,"Redundantly Defined Macros, Files scSim.mod\FlightSimTime.c, SimCardCMIC.c",5,"1) Redundant macro 'ITIMER_VIRTUAL' at phx_fsw.ar\scSim.mod\FlightSimTime.c, line 84 is defined identically at line 144, file /usr/include/sys/time.h. The macro is defined in the system header file. The definitions are the same."" 2) Redundantly declared symbol 'sysPhysMemTop(void)' in phx_fsw.ar\scSim.mod\SimCardCMIC.c, line 135 is previously declared at line 135, file phx_fsw.prj/include/sysLib.h The function declaration exists also in header sysLib.h and is redundantly declared in this file."" 3) Redundant macro 'SIG_BLOCK' in phx_fsw.ar\scSim.mod\SimFlight.c, line 294 is defined identically at line 109, file vxworks/private/signal.h SIG_UNBLOCK AND SET_SETMASK also have redundant declarations.",5/16/06ProjectE - TIM - 1763,"Preprocessor removal of code, file sam_Touchdown_Monitor.c, line 346",4,"The function samTDM_Execute(), responsible for shutting down thrusters when touchdown is recognized, presently includes a #ifdef statement- ""#ifdef NOTDEF"" that removes from the compiled code the setting of the read_status[] values. Code is apparently under construction. This TIM will function as a watch point for this mission critical code. phx_fsw.ar\sam.mod\sam_Touchdown_Monitor.c, line 346 void samTDM_Execute(int unused) { int read_status[3]; ... #ifdef NOTDEF read_status[0] = read(SAMdPACI_fd, (char *)&TD_INDICATOR_LIST[0],1); if (read_status[0] == ERROR) SAMoTDM_paci_read_errors[0]++; ... int samTDM_Get_Vote(void) { ... #ifdef NOTDEF read(SAMdPACI_fd, (char *)&TD_INDICATOR_LIST[0],1); read(SAMoTDM_ioc_fd,(char *)&TD_INDICATOR_LIST[1],1); read(SAMdPACI_fd, (char *)&TD_INDICATOR_LIST[2],1); #endif",5/16/06ProjectE - TIM - 1762,"Bit Shift executes on no upper byte, file SME_CommAtt_md.c, line 161",4,"As an input parameter to the call of FPUcmd_send_immed_command(), FPUcmd_MSByte(CMD_OBJ_AHRAD_KFILTER), where CMD_OBJ_AHRAD_KFILTER is defined as 36, has no upper byte. Therefore, the application of ""FPUcmd_MSByte(a) (((a) & 0xFF00) >> 8)"" is superfluous. Condition may be acceptable for this particular function call but should be reviewed and validated by the developer. SME_CommAtt_md.c, line 161 /*+++++ ** Start the Kalman Filter **-----*/ FPUcmd_send_immed_command(CMD_OP_FSW_OBJ_START, CMD_LEN_FSW_OBJ_START, 161 FPUcmd_MSByte(CMD_OBJ_AHRAD_KFILTER), FPUcmd_LSByte(CMD_OBJ_AHRAD_KFILTER), 0, 0); msg_obj_defs_db.h #define CMD_OBJ_AHRAD_KFILTER (36) FPU_Commander.h #define FPUcmd_MSByte(a) (((a) & 0xFF00) >> 8) #define FPUcmd_LSByte(a) ((a) & 0x00FF)",5/16/06ProjectE - TIM - 1761,Unconventional commenting out code removes initialization of variable,4,"Unconventional marker (placeholder) as part of a comment has removed initialization of variable strs_cond in AKPM_Check_STRS_Condition(). This represents one of several comments used for commenting out code (see list of files with ""/*DSH"" below). TIM will be used as a watch and closed when all instances of the comment are resolved. phx_fsw.ar\hlfp.mod\AKPM.c, line 2651 static void AKPM_Check_STRS_Condition ( void ) /*----- End Prototype -----*/ { FP_Condition_t strs_cond; ... /*DSH strs_cond = scamGet_FP_Condition(); */ if ((strs_cond == Failed) || (AKPM_STRS_IndicFail_Resp_In_Progress && (strs_cond != Good))) { Files with ""/*DSH"" phx_fsw.ar\hlfp.mod\AKPM.c phx_fsw.ar\hlfp.mod\CPM_md.c phx_fsw.ar\hlfp.mod\DBPM.c phx_fsw.ar\hlfp.mod\DBPM_md.c phx_fsw.ar\hlfp.mod\DLLE.c phx_fsw.ar\hlfp.mod\PCPM.c phx_fsw.ar\hlfp.mod\RBR.c phx_fsw.ar\hlfp.mod\RBR_md.c phx_fsw.ar\hlfp.mod\SME.c phx_fsw.ar\hlfp.mod\SME_CommAtt_md.c phx_fsw.ar\hlfp.mod\SME_InitConfig_md.c phx_fsw.ar\hlfp.mod\SME_RateDamp_md.c phx_fsw.ar\hlfp.mod\SME_SunAcquisit_md.c phx_fsw.ar\hlfp.mod\SPM.c phx_fsw.ar\hlfp.mod\SQPM.c phx_fsw.ar\sam.mod\sam_Touchdown_Monitor.c",5/16/06ProjectE - TIM - 1760,"Allocated Memory never freed (likely intentional), file eep_drv.c",4,"pEepDev in function eep_devCreate of file eep_drv.c is allocated memory but it is never freed. This may be as intended with only a reboot freeing and memory and a restart leading to a new device creation. BLK_DEV *eep_devCreate ( char *eepAddr, /* start address of EEPROM block device */ int bytesPerBlk, /* number of bytes per block */ int nBlocks, /* number of blocks on this device */ int blkOffset /* blocks skipped at start of device */ ) { register BLK_DEV*returnValue; /* return value */ EEP_DEV *pEepDev; /* ptr to created EEP_DEV struct */ ... /* Allocate a EEP_DEV structure for device. */ pEepDev = (EEP_DEV *)malloc(sizeof(EEP_DEV));",5/16/06ProjectE - TIM - 1759,"Redundantly Defined Macros, File cmd.c, cmd.h",4,"1) Redundant macro 'CMD_INIT_QUIET' in phx_fsw.ar\cmd.mod\cmd.c, line 68 is defined identically at line 242, file phx_fsw.ar/include/cmd.h Macro is defined exactly with same value. -------------------------------------------- 2) Redundant macro 'CMD_INIT_VERBOSE' in phx_fsw.ar\cmd.mod\cmd.c, line 69 is defined identically at line 243, file phx_fsw.ar/include/cmd.h Macro is defined exactly with same value.",5/16/06ProjectE - TIM - 1758,Possible Array-Out-Of-Bounds in Build 3.1 FSW,2,"The array index of 'vm_time_events' may be outside the bounds in vm_time.c. Array 'vm_time_events' of size 18 defined on line 43 in the aforementioned file may use index value of 18 in function insert_event. This potential error occurs on line 292. If the variable, vm_time_top_event_index, holds a value of 17, then the conditional statement will be evaluated on line 289 and will result in an array out of bounds (by 1) on line 292. A code segment is listed below. if (vm_time_top_event_index < VM_MAX_NUM_EVENTS) { for (i = vm_time_top_event_index; i >= position; i--) copy_event(&(vm_time_events[i]),&(vm_time_events[i+1]));",5/16/06ProjectE - TIM - 1757,Possible Array-Out-Of-Bounds in Build 3.1 FSW,2,"The array index of 'pdc_sw_cmd' may be outside the bounds in eps_pdc_sw.c. Array 'pdc_sw_cmd' of size 2 defined in function, eps_pdc_sw_cmd_hw, may use index value 2 in the aforementioned function. This potential error occurs on lines 399 and 401. The index variable is also the loop counter for the loop that starts on line 392. This loop runs for two iterations and the counter starts at 0. However, the index variable used on lines 399 and 401 is index plus 1. This would cause the index value to be 2 on the final iteration of the loop if the conditional if statement on line 392 is executed. A code segment is listed below: for (par_id = 0; par_id < MAX_NUM_PAR_SW; par_id++) { /*+++++ * If this switch has a parallel switch * set the discretes appropriately. -----*/ if (eps_pdc_sw[id].par_sw[par_id] != UNDEFINED_EPS_PDC_SW_ID_TYPE) { par_sw_id = eps_pdc_sw[id].par_sw[par_id]; eps_pdc_sw[par_sw_id].desired_state = eps_pdc_sw[id].desired_state; pdc_sw_cmd[par_id + 1].id = eps_pdc_sw[par_sw_id].cmd_id; pdc_sw_cmd[par_id + 1].value = pdc_sw_cmd[0].value; num_to_write++; }",5/16/06ProjectE - TIM - 1756,"Variable, cntr, is missing a datatype.",3,"The variable, cntr found in nav2.c within function nav2_GroundRelative (line 724) is missing a datatype. A code segment is below. void nav2_GroundRelative(void) { double velMagnitude; /* Magnitude of the groune */ static cntr=0;",5/16/06ProjectE - TIM - 1755,Uninitialized variable (strs_cond) in Build 3.1 FSW (AKPM.c),3,"The variable, strs_cond, defined in function AKPM_Check_STRS_Condition on line 2616 is used before being set in this function. The variable is used on line 2650-2651. The variable was originally set on line 2647, but that line is now commented-out. 1. File: AKPM.c 2. Function: AKPM_Check_STRS_Condition 3. Lines: 2616, 2650-2651 4. Code Segment: /*DSH strs_cond = scamGet_FP_Condition(); */ if ((strs_cond == Failed) || (AKPM_STRS_IndicFail_Resp_In_Progress && (strs_cond != Good))) {",5/16/06ProjectE - TIM - 1754,Uninitialized variables in Build 3.1 FSW (iocNodeCmic.c),3,"The variables, seconds_lsw_0 and seconds_lsw_1, can be used before being set in the function iocNodeCmicIoctlClockS. If the conditional statement on line 531 is not executed, then seconds_lsw_0 will not be set. If the conditional statement on line 564 is not executed, then seconds_lsw_1 will not be set. Both variables are compared against each other for entry into the conditional statement on line 577. 1. File: iocNodeCmic.c 2. Lines: 577, 564 and 561 3. Function: iocNodeCmicIoctlClockS 4. Code Segment: if ( seconds_lsw_0 != seconds_lsw_1 ) {",5/16/06ProjectE - TIM - 1753,Missing type-casts in eps2.mod diretory may cause loss of data in Build 3.1 FSW.,3,The following type-casts are missing and may cause a loss of data. Unsigned short value assigned an unsigned long value. 1. File: eps_sensor_data.c 2. Function: eps_sensor_data_read_raw 3. Variable: l_sensor->raw 4. Line: 360 Unsigned short value assigned an unsigned long value. 1. File: eps_sensor_data.c 2. Function: eps_sensor_data_read_raw 3. Variable: l_sensor->raw 4. Line: 388 Unsigned short value assigned an unsigned long value. 1. File: eps_sensor_data.c 2. Function: eps_sensor_data_read_raw 3. Variable: l_sensor->raw 4. Line: 401,5/16/06ProjectE - TIM - 1752,Missing type-casts in cmd.mod diretory may cause loss of data in Build 3.1 FSW.,3,The following type-casts are missing and may cause a loss of data. Unsigned char value assigned an int value. 1. File: cmd.c 2. Function: cmd_send 3. Variable: cmdMsg.hdr.from.taskId 4. Line: 1349 Unsigned char value assigned an int value. 1. File: cmd.c 2. Function: cmd_send 3. Variable: CmdHistory.entry[].source 4. Line: 1423 Unsigned char value assigned an int value. 1. File: cmd.c 2. Function: cmd_send 3. Variable: CmdHistory.entry[].status 4. Line: 1424,5/16/06ProjectE - TIM - 1751,Missing type-casts in cio.mod diretory may cause loss of data in Build 3.1 FSW.,3,The following type-casts are missing and may cause a loss of data. Unsigned short value assigned an unsigned long value. 1. File: cio.c 2. Function: read_n_bytes_transfer 3. Variable: dest_ptr 4. Line: 862 Unsigned short value assigned an unsigned long value. 1. File: cio_basic.c 2. Function: cio_basic_write_atomic 3. Variable: d16 4. Line: 587 Unsigned short value assigned an unsigned long value. 1. File: cio_operation.c 2. Function: evaluate_read 3. Variable: id 4. Line: 320 Unsigned short value assigned an unsigned long value. 1. File: cio_operation.c 2. Function: evaluate_write 3. Variable: id 4. Line: 414 Unsigned char value assigned an int value. 1. File: cio_parser.c 2. Function: parse_error_masks 3. Variable: channel_ptr->num_error_masks 4. Line: 1008 Char value assigned an long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: opcode 4. Line: 1647 Char value assigned an long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: reg 4. Line: 1662 Char value assigned an long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: data_kind 4. Line: 1677 Unasigned Char value assigned an unasigned long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: reg_symbol 4. Line: 1681 Unsigned short value assigned an unsigned long value. 1. File: cio_special.c 2. Function: read_telecom_analog 3. Variable: value_ptr 4. Line: 478 Int value assigned a double value. 1. File: cio_utils.c 2. Function: cio_task_delay 3. Variable: remaining_ticks 4. Line: 266,5/16/06ProjectE - TIM - 1750,Missing type-cast in astr.mod directory may cause loss of data in Build 3.1 FSW.,3,"The following type-casts are missing and may cause a loss of data. Unsigned short value assigned an unsigned long value. 1. File: astr.c 2. Function: astrHandler 3. Variable: newCmd.u16[1] 867 newCmd.u16[1] = ((struct cmd_ST_DOWNLOAD *)cmdParms)->st_num_words; unA32.word32 = ((struct cmd_ST_DOWNLOAD *)cmdParms)->st_addr_0; newCmd.u16[3] = unA32.word16[0]; newCmd.u16[4] = unA32.word16[1]; newCmd.u16[2] = 0; if( (0 < newCmd.u16[1]) && (newCmd.u16[1] <= WORDS_PER_TC_DOWNLOAD) && astrAddrIsOK(unA32.word32,(uint32_t)newCmd.u16[1],PART_UNKNOWN) ) { newCmd.u16[0] = ASTR_TC_DOWNLOAD; } else ret = ERROR; break;",5/16/06ProjectE - TIM - 1749,Module scope global variables not static (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): a. Software will define data variables that have module scope as static where possible to minimize the use of global symbols. Data should have scope relative only to its execution environment. File: Inst6_image.c 1. Variables: Inst6_histogram, Inst6_CCD, Inst6a_proc_msg 2. Lines: 145, 160, 166",5/16/06ProjectE - TIM - 1748,Use of 'goto' statement (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.3 General Code Conventions): b. Software functions will not use ""goto"" constructs. File: ra_expansions.c 1. Function: ra_calibrate File: ra_recover.c 1. Functions: recover_acquire_sample, recover_chop, ra_recover_ace_reset, ra_recover_paci, ra_recover_power_30v",5/16/06ProjectE - TIM - 1747,Use of float as datatype (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.5.1 Flight Software Data Declaration and Data Storage): d. Flight software will use ""double"" as the preferred floating-point type, where ""float"" should only be used when explicitly required. The RAD6000/RAD750 performs floating point operations with native type ""double"", and demotion to float requires additional operations. File: metdm.c 1. Function: metdmPutF32 2. Line: 324",5/16/06ProjectE - TIM - 1746,Use of float as datatype (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.5.1 Flight Software Data Declaration and Data Storage): d. Flight software will use ""double"" as the preferred floating-point type, where ""float"" should only be used when explicitly required. The RAD6000/RAD750 performs floating point operations with native type ""double"", and demotion to float requires additional operations. File: ra_expansions.c 1. Function: ra_dig_trench 2. Line: 381, 399, 402-404 File: ra_expansions.c 1. Function: ra_move_ready 2. Line: 1271 File: ra_external.c 1. Function: ra_get_tlm_data_hdr 2. Line: 160, 180 File: ra_fault.c 1. Function: ra_check_deflection 2. Line: 1588 File: ra_kinematic.c 1. Function: ra_check_deflection 2. Line: 1193 File: ra_manager.c 1. Function: ra_mj_arg, ra_mj_time_arg, ra_mc_arg, ra_send_motion 2. Line: 582, 608, 633, 911, 969, 1027 File: ra_monitor.c 1. Function: ra_monitor_sensors 2. Line: 457 File: ra_parameters.c 1. Function: ra_set_one_param 2. Line: 218, 378, 919",5/16/06ProjectE - TIM - 1745,No function headers (Contractor3 Software Coding Convention Violation),4,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention: Software functions within files will contain a standard function header that includes function name and a description of the function. The following function header uses the “design tool” format. File: vm_opcode_functions.c 1. Functions: all functions in the file are missing a header.,5/16/06ProjectE - TIM - 1744,No function headers (Contractor3 Software Coding Convention Violation),4,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.2 Function Header): a. Software functions within files will contain a standard function header that includes function name and a description of the function. The following function header uses the “design tool” format. File: metdm.c 1. Functions: all functions in the file are missing a header.,5/16/06ProjectE - TIM - 1743,Comma separated data declaration lists (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): c. Software data declarations will contain only one data declaration per line (e.g. comma separated data declaration lists are not compliant). File: ra_col.c 1. Lines: 375-376 2. Variables: *l1, *l2, *obj1, *obj2 3. Function: check_link_collisions File: ra_col.c 1. Lines: 1265 2. Variables: ct, st, cq, sq 3. Function: compute_link_poses File: ra_col.c 1. Lines: 1522 2. Variables: i, j 3. Function: copy_frame File: ra_col.c 1. Lines: 4325 2. Variables: qq41,qq42,qq43,qq44,qq12,qq13,qq23,qq11,qq22,qq33,sc 3. Function: udq2t_ File: ra_col.c 1. Lines: 2023-2024 2. Variables: *obj, *parent, i, level 3. Function: ra_bld_hier File: ra_col.c 1. Lines: 2341, 2343 2. Variables: i, j, *l1, *l2 3. Function: ra_check_collisions File: ra_col.c 1. Lines: 2631 2. Variables: i, j 3. Function: ra_compress_objects File: ra_col.c 1. Lines: 2897, 2899 2. Variables: i, prev_write, this_write, status, status2 3. Function: ra_expand_objects File: ra_col.c 1. Lines: 3847-3848 2. Variables: *obj, *parent, *child, i, j, child_id 3. Function: ra_verify_hier File: ra_fault.c 1. Lines: 1325 2. Variables: i, current, num_motors_on, num_heaters_on 3. Function: ra_power_30v File: ra_fault.c 1. Lines: 1120 2. Variables: delta_pos, delta_ori 3. Function: ra_joint_runaway File: ra_math.c 1. Line: 126 2. Variables: i,j,k 3. Function: ra_matrix_matrixdotmatrix File: ra_paci_com.c 1. Line: 416 2. Variables: joint, i 3. Function: receive_status File: ra_kinematic.c (throughout entire file) 1. Functions: ra_compute_arm_cfg, ra_compute_fwd_kin, ra_compute_inv_kin, ra_gen_joint_seq, ra_gen_cart_traj, ra_gen_joint_traj, ra_lander_to_robot, ra_robot_to_lander, ra_tool_to_world, ra_rot_tool_to_lander, ra_rot_to_quat File: ra_monitor.c (throughout entire file) 1. Functions: ra_compute_volt, ra_monitor_sensors, ra_compute_delta_via, ra_compute_energy, ra_compute_torque, ra_reached_via",5/16/06ProjectE - TIM - 1742,Comma separated data declaration lists (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): c. Software data declarations will contain only one data declaration per line (e.g. comma separated data declaration lists are not compliant). File: Inst7.c 1. Line: 414 2. Variables: i, j, off, size 3. Function: directory_init",5/16/06ProjectE - TIM - 1741,Comma separated data declaration lists (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): c. Software data declarations will contain only one data declaration per line (e.g. comma separated data declaration lists are not compliant). File: Inst6a_image.c 1. Lines: 1280-1281 2. Variables: crc, polynom, i, j 3. Function: Inst6a_GenCRC",5/16/06ProjectE - TIM - 1740,"Use of strcat(), strcmp(), or strcpy() (Contractor3 Software Coding Convention Violation)",3,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.3 General Code Conventions): l. Software will always use explicit length string library functions when performing string manipulations, such as strncat(), strncmp(), and strncpy(), rather than strcat(), strcmp(), and strcpy(). File: Inst8_image.c 1. strcpy, lines 1294-1297 in function Inst8_SetPixTables",5/16/06ProjectE - TIM - 1739,"Use of strcat(), strcmp(), or strcpy() (Contractor3 Software Coding Convention Violation)",4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.3 General Code Conventions): l. Software will always use explicit length string library functions when performing string manipulations, such as strncat(), strncmp(), and strncpy(), rather than strcat(), strcmp(), and strcpy(). File: cmd.c 1. strcmp, line 284 in function cmd_init 2. strcpy, line 664 in function cmd_load_restricted File: file_system.c 1. strcmp, line 771 in function file_sysBlkDevInfoMatch File: vm.c 1. strcmp, line 1280 in function look_up_function_vm_index File: vm_opcode_functions.c 1. strcmp, lines 2537, 2539, 3188, 3424, 3673, 3877, 4081, 4285 in functions: logical_coerce_string, equal_string_string, not_equal_string_string, less_string_string, less_or_equal_string_string, greater_string_string, greater_or_equal_string_string 2. strcpy, lines 2658, 2660 in function string_coerce_logical",5/16/06ProjectE - TIM - 1738,Variable initialized on the same line it is declared (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): d. Software data declarations of “automatic (stack) data” within functions will not contain data initialization on the same line as the data declaration (e.g. ""int x=1;"" is not compliant). This applies to automatic data (declarations within functions), and does not apply to data with module scope. File: Inst7.c 1. Variable: off 2. Function: directory_init 3. 414",5/16/06ProjectE - TIM - 1737,Variable initialized on the same line it is declared (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): d. Software data declarations of “automatic (stack) data” within functions will not contain data initialization on the same line as the data declaration (e.g. ""int x=1;"" is not compliant). This applies to automatic data (declarations within functions), and does not apply to data with module scope. File: ra_col.c 1. Variable: flags 2. Function: ra_verify_hier 3. Line: 3849 File: ra_fault.c 1. Variables: delta_pos, delta_ori 2. Function: ra_joint_runaway 3. Line: 1120 File: ra_fault.c 1. Variables: current, num_motors_on, num_heaters_on 2. Function: ra_power_30v 3. Line: 1325 File: ra_fault.c 1. Variables: mask 2. Function: ra_fault_check_enabled 3. Line: 578 File: ra_fault.c 1. Variables: mask 2. Function: ra_set_fault_check_mask 3. Line: 724 File: ra_fault.c 1. Variables: mask 2. Function: ra_set_fault_status 3. Line: 779 File: ra_monitor.c 1. Variable: scale_factor 2. Function: ra_compute_volt 3. Line: 372 File: ra_monitor.c 1. Variables: motors_off, htrs_off, enable 2. Function: ra_monitor_sensors 3. Line: 453-454, 456 File: ra_monitor.c 1. Variables: last_via, motors_off 2. Function: ra_reached_via 3. Line: 1137 File: ra_monitor.c 1. Variables: out_of_range 2. Function: ra_temp_out 3. Line: 1224",5/16/06ProjectE - TIM - 1736,Variable initialized on the same line it is declared (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): d. Software data declarations of “automatic (stack) data” within functions will not contain data initialization on the same line as the data declaration (e.g. ""int x=1;"" is not compliant). This applies to automatic data (declarations within functions), and does not apply to data with module scope. File: clockLib.c 1. Variable: one_second 2. Function: process_cmic_clock_sample 3. Line: 1250 File: cmd.c 1. Variable: returnCode 2. Function: cmd_load_restricted 3. Line: 647 File: fastPartSalv.c 1. Variable: status 2. Function: fastPartSalvageInitialize 3. Line: 278 File: msg.c 1. Variable: returnCode 2. Function: msg_init_queues 3. Line: 243 File: sam_Touchdown_Monitor.c 1. variable: i 2. Function: samTDM_Event_Enable 3. Line: 245",5/16/06ProjectE - TIM - 1735,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst6_paci.c 1. variables: Inst6_serial_fd, Inst6_disc_fd, Inst6_sem_fault_gate, Inst6_read_fault_evr_gate, Inst6_write_fault_evr_gate, Inst6_disc_cmd_evr_gate, Inst6_disc_fault_gate, Inst6_disc_chan_evr_gate, Inst6_cmd_pwr_evr_gate, Inst6_cmd_fd_evr_gate, Inst6_paci_retry_evr_gate 2. Lines: 49-50, 54, 56-57, 59-61, 63-64, 66 File: Inst6_image.c 1. variable: CCD_params_set 2. Line: 142",5/16/06ProjectE - TIM - 1734,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst6a_cmd.c 1. Variable: Inst6a_cmd_reject_gate 2. Line: 63 File: Inst6a_globals.c 1. Variables: Inst6a_curr_time, Inst6a_init_time, Inst6a_main_time_delta, Inst6a_slots_ok, Inst6a_mem_size, Inst6a_telem_attempts, Inst6a_crc_table_set, Inst6a_images_processed, Inst6a_images_requested, Inst6a_last_dl_time, Inst6a_last_img_id, Inst6a_last_error, icsCpdu 2. Lines: 28-30, 32-33, 35, 37, 39-40, 42-43, 45, 47 File: Inst6a_slots.c 1. Variables: Inst6a_lg_slot_cnt, Inst6a_sm_slot_cnt, Inst6a_image_slot_status, Inst6a_max_slots, Inst6a_slot_memory 2. Lines: 58-59, 61, 64-65",5/16/06ProjectE - TIM - 1733,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: mcCmd.c 1. Variables: cmdCurrAllocatedMsgObjects, cmdPeakAllocatedMsgObjects, rdpowerDataBuf, rdpowerCurrSampleNum 2. Lines: 107-108, 110, 112 File: mcCme.c 1. Variables: cmeScratch, cmeSerialFd, cmeDiscreteFd, cmeCurrentMotor, cmeEnabledComponents, cmeCurrentPowerBits, cmeCurrentComm 2 Lines: 121, 123-124, 131, 138-139, 141 File: mcMain.c 1. Variables: mcHwCmdsFlushed, mcHwFlushQueue, mcTelemCmdsFlushed, mcTelemFlushQueue, mcMain_CmdsDequeued, mcMain_CmdsStarted, mcMain_CmdsCompleted, mcMain_CmdsRejected, mcMain_SafePending, mcmainInitOk, mcmainTablesRead,mcmainCurrentOp, mcmainCurrentHwCmdNum, mcmainCurrentTelemCmdNum, mcmainCurrentTelemCmdOp, mcmainBadHwMessageCtr, mcmainBadNannyMessageCtr, mcmainBadTelemMessageCtr 2. Lines: 97-98, 100-101, 110-113, 115, 119-120, 122, 124-125, 127-128, 130-133 File: mcTecp.c 1. Variables: tecpReadMask, tecpDataBuf, tecpCurrSampleNum 2. Lines: 88-89, 91 File: mcTelem.c 1. Variables: telemTotalPacketCount, telemDataProductCount, telemScratch 2. Lines: 75-76, 78 File: mcWchem.c 1. Variables: wchemDrawerLsMask, wchemDrawerHoldTime, wchemDrawerRetries, wchemHeaterSet, wchemHeatersOn, wchemReadIses, wchemReadCond, wchemReadDox, wchemReadCv, wchemReadCCv, wchemReadAs, wchemReadCAs, wchemReadPt, wchemReadInterval, wchemCurrentReagentActuation, wchemStirStirSet, wchemStirDutyTime, wchemStirRestTime, wchemStirOn, wchemStirSuppress 2. Lines: 115-117, 121, 125, 129-137, 141, 145-149",5/16/06ProjectE - TIM - 1732,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: ra_command.c 1. Variable: heap_size 2. Line: 528 File: ra_kinematic.c 1. Variable: recursion_depth 2. Line: 199 File: ra_manager.c 1. Variable: Inst9_cpdu 2. Line: 564",5/16/06ProjectE - TIM - 1731,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst8_move.c 1. Variable: Inst8_phase_evr_gate 2. Line: 112 File: Inst8_paci.c 1. Variables: Inst8_serial_fd, Inst8_disc_fd, Inst8_sem_fault_gate, Inst8_read_fault_evr_gate, Inst8_write_fault_evr_gate, Inst8_disc_cmd_evr_gate, Inst8_disc_fault_gate, Inst8_disc_chan_evr_gate, Inst8_cmd_pwr_evr_gate, Inst8_cmd_fd_evr_gate, Inst8_paci_retry_evr_gate 2. Lines: 49-50, 54, 56-57. 59-61, 63-64, 66 File: Inst8_status.c 1. Variable: curr_log_entry 2. Line: 78",5/16/06ProjectE - TIM - 1730,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst4_power.c 1. Variables: Inst4_iPowerState, Inst4_iPwrNoteCount 2. Lines: 69-70 File: Inst4_support.c 1. Variables: Inst4_fdDiscrete, Inst4_fdSerial, Inst4_iReset2Ready_sec, Inst4_iSyncUpdateFirst_sec, Inst4_iSyncUpdateInterval_sec, Inst4_iHBCheckFirst_sec, Inst4_iHBCheckInterval_sec, Inst4_iFilePartSend_sec, Inst4_iBootSelActive_sec, Inst4_maxPaciRetry, Inst4_dWriteDelayOffsetSec, Inst4_iInitOk_bits, Inst4_iInitRetry_sec, Inst4_iApidSelect, Inst4_iBootSelect, Inst4_dwBadCmdMessages, Inst4_dwBadTlmMessages 2. Lines: 86-87, 98-108, 114-115, 136-137 File: Inst4_heart.c 1. Variables: Inst4_iCurrNumHeartbeats, Inst4_iMissedHeartbeats, Inst4_dwInternalTime_ms, Inst4_bHeartJustBeat, Inst4_bHeartBeatReset 2. Lines: 63-65, 67-68 File: Inst4_discrete.c 1. Variables: Inst4_iResetCounter, Inst4_iSyncCounter, Inst4_iSyncErrCntr 2. Lines: 92-94 File: Inst4_command.c 1. Variable: Inst4_fdFileToLoad 2. Line: 60",5/16/06ProjectE - TIM - 1729,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: ACPM.c 1. variable: ACPM_ACS_Mode 2. Line: 84 File: AKPM.c 1. Variable: AKPM_Dual_State_Entry_Time 2. Line: 159 File: clockLib.c 1. Variables: configFd, cmicClockFd, clockSynchCpdu, clockUpdateIntervalCount 2. Lines: 87, 88, 93, 100 File: SME_CommAtt_md.c 1. Variables: temp_seconds, firstSun, firstEarth, doubleTime, wakeupTime, time_uint 2. Lines: 55, 57-58, 61-63 File: vm_engine.c 1. Variables: gv_base_num_strings, vm_engine_issue_tags, vm_engine_runtime_errors_report_threshold, vm_engine_send_current_file_loaded, vm_engine_suppress_commands 2. Lines: 80, 88, 90, 92, 94 File: vm_expr.c 1. Variable: vm_expr_allow_compound_exprs 2. Line: 32 File: vm_external_data.c 1. Variable: top_index 2. Line: 31 File: vm_external_data_mission.c 1. variable: lock_takes 2. Line: 34 File: vm_opcode.c 1. Variable: vm_opcode_use_tan_check 2. Line: 44 File: vm_time.c 1. Variables: vm_time_top_event_index, vm_time_top_overdue_event_index, vm_time_limit_clock_change_in_block, vm_emergency_shutdown, vm_time_clock_jump_evr_threshold, vm_time_suppress_screen 2. Lines: 41-42, 45-46, 48-49 File: vm_utils.c 1. Variables: vm_utils_access_timeout, vm_utils_access_num_timeouts 2. Lines: 41-42 File: rtsimif.c 1. Variables: paciDiscFd, paciSerialFd, rtSimIfCpdu 2. Lines: 86-87, 91 File: SME_InitConfig_md.c 1. Variables: command_size, err, looper, SME_offpoint_slot, SME_time 2. Lines: 61-62, 65-67",5/16/06ProjectE - TIM - 1728,Function exceeds 300 lines (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.3 File Format): c. Software functions will be less than 300 source lines of code. For the purposes of this convention a source line of code is a count of newline characters, so it includes such things as blank lines and comments. Function: ra_actuator 1. File: ra_command.c 2. Line #: 503-897",5/16/06ProjectE - TIM - 1727,Function exceeds 300 lines (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.3 File Format): c. Software functions will be less than 300 source lines of code. For the purposes of this convention a source line of code is a count of newline characters, so it includes such things as blank lines and comments. Function: check_control_errors 1. File: ACPM.c 2. Line #: 710-1098 Function: clock_init 1. File: clockLib.c 2. Line #: 203-1019 Function: msg_send 1. File: msg.c 2. Line #: 503-897 Function: SME_Do_InitConfig 1. File: SME_InitConfig_md.c 2. Line #: 97-543 Function: SME_Do_SunAcquisit 1. File: SME_SunAcquisit_md.c 2. Line #: 77-843 Function: SME_Do_CommAtt 1. File: SME_CommAtt_md.c 2. Line #: 92-979",5/16/06ProjectE - TIM - 1726,Unused command message prototype in Build 3.1 FSW (cmd.c),4,"The command message prototype defined in cmd.c on line 81 is not used in the Build 3.1 FSW. There is no indication of its status for the the ProjectE FSW. Code Segment: typedef void (*cmdMsgMethod_t)(size_t size, int msgPrio, const cmdMsg_p msg);",5/16/06ProjectE - TIM - 1725,Unnecessary type-cast in hlfp.mod diretory in Build 3.1 FSW.,4,"The variable, fpu_tlm_id, is of type unsigned short and is being casted as an unsigned long when being set to telemerty_id (unsigned short). Unnecessary type-cast. 1. File: FPU_Count.c 2. Function: FPU_Counter_Initialize_L 3. Variable: counter->telemetry_id 4. Line: 107",5/16/06ProjectE - TIM - 1724,Unused macros in Build 3.1 FSW,4,The following macrosare unused in the the Build 3.1 FSW. There is no indication of the status of these variables for the ProjectE FSW. Macro: CIO_MAX_CHANNEL 1. file: cio.c 2. line: 67 Macro: TASK_ID_MISC 1. file: cmd.c 2. line: 65 Macro: CMD_INIT_QUIET 1. file: cmd.c 2. line: 68 Macro: CMD_INIT_VERBOSE 1. file: cmd.c 2. line: 69 Macro: CMD_IS_NOT_RESTRICTED 1. file: cmd.c 2. line: 197 Macro: CMD_IS_RESTRICTED 1. file: cmd.c 2. line: 198 Macro: CCU_CYCLIC_RATE 1. file: eps_ccu.c 2. line: 54 Macro: UNDEFINED_EPS_PM_ENABLE_CMD_ID 1. file: eps_ccu.c 2. line: 55 Macro: UNDEFINED_EPS_PM_DISABLE_CMD_ID 1. file: eps_ccu.c 2. line: 56 Macro: UNDEFINED_EPS_PM_VT_CURVE_CMD_ID 1. file: eps_ccu.c 2. line: 57 Macro: MIN_NUM_ENABLED_CCU_PM 1. file: eps_ccu.c 2. line: 58 Macro: CCU_MGR_10_SEC_RATE 1. file: eps_ccu.c 2. line: 60 Macro: SECONDS_TO_10HZ_CYCLES 1. file: eps_ccu.c 2. line: 76 Macro: WORD_1 1. file: eps_emic_sw.c 2. line: 59 Macro: UNDEFINED_EPS_RPC_CIO_ID 1. file: eps_rpc_sw.c 2. line: 54 Macro: EVR_RTIS_UNTIL_RESET 1. file: evr.c 2. line: 470 Macro: EVR_MSGQ_TIMEOUT 1. file: evr.c 2. line: 2220 Macro: FPE_NUM_SEP_INDICATORS 1. file: FPE.c 2. line: 597 Macro: FPE_AAC_SEP_VOTE 1. file: FPE.c 2. line: 604 Macro: FPE_NUM_LAUNCH_INDICATORS 1. file: FPE.c 2. line: 607 Macro: FPE_DISCRETE_NO_LAUNCH 1. file: FPE.c 2. line: 608 Macro: FPE_DISCRETE_LAUNCH 1. file: FPE.c 2. line: 609 Macro: FPE_NUM_Inst6_READS 1. file: FPE.c 2. line: 589 Macro: FPE_SC_NUM 1. file: FPE.c 2. line: 593 Macro: FPE_NUM_AV_SIDE_INDICATORS 1. file: FPE.c 2. line: 595 Macro: EPS_SENSOR_DATA_ID_EMIC_CURRENT 1. file: PCPM.c 2. line: 89 Macro: CURRENT_COMMAND_BLOCK_ADDR 1. file: iocNode1553.c 2. line: 64 Macro: MINOR_FRAME_TIMER_ADDR 1. file: iocNode1553.c 2. line: 69 Macro: BC_CMD_BLK_INIT_COUNT_ADDR 1. file: iocNode1553.c 2. line: 71 Macro: CTRL_REG_DEFAULT_INIT_VALUE 1. file: iocNode1553.c 2. line: 87 Macro: NUM_OF_CMD_WORDS 1. file: iocNodeDualSlave.c 2. line: 50 Macro: SLAVE_IO_READ_MASK_REG_ADDR 1. file: iocNodeDualSlave.c 2. line: 92 Macro: NUM_OF_CMD_WORDS 1. file: iocNodeMaster.c 2. line: 89 Macro: IOC_SLAVE_ENABLE_ANALOG_COLLECTION 1. file: iocNodeMaster.c 2. line: 104 Macro: IOC_SLAVE_DISABLE_ANALOG_COLLECTION 1. file: iocNodeMaster.c 2. line: 105 Macro: IOC_SLAVE_DISABLE_1553_INTERRUPTS 1. file: iocNodeMaster.c 2. line: 109 Macro: MS1553B_INIT_BIT_DELAY 1. file: ms1553bTask.c 2. line: 79 Macro: ERROR_IN_TIMER 1. file: telemetry.c 2. line: 69 Macro: DEFAULT_UPDATE_MULTIPLIER 1. file: telemetry.c 2. line: 76 Macro: VM_SECONDS_PER_SUBTICK 1. file: vm.c 2. line: 52,5/16/06ProjectE - TIM - 1723,Unused functions in the Build 3.1 FSW,4,The following functions are unused in the the Build 3.1 FSW. There is no indication of the status of these functions for the ProjectE FSW. Function: cio_raw_read_n_bytes 1. file: cio_raw.c 2. line: 300 Function: cio_raw_write_n_bytes 1. file: cio_raw.c 2. line: 380 Function: removePty 1. file: removePty.c 2. line: 41 Function: heap_mgr_task 1. file: heap_mgr_task.c 2. line: 76 Function: FPE_get_cmd_safing 1. file: FPE.c 2. line: 2601 Function: FPE_get_cmd_deadend 1. file: FPE.c 2. line: 2659 Function: SPM_execute 1. file: SPM.c 2. line: 837 Function: SQPM_command 1. file: SQPM.c 2. line: 172 Function: SQPM_execute 1. file: SQPM.c 2. line: 347 Function: fsw_util_mq_dump_all_to_file 1. file: fsw_msg_q_utils.c 2. line: 71 Function: vm_cmd_method_vm_abort_mode 1. file: vm_cmd_method.c 2. line: 100 Function: vm_cmd_method_vm_gv_rename 1. file: vm_cmd_method.c 2. line: 120 Function: vm_cmd_method_vm_gv_save 1. file: vm_cmd_method.c 2. line: 140 Function: vm_cmd_method_vm_gv_set_dbl 1. file: vm_cmd_method.c 2. line: 160 Function: vm_cmd_method_vm_gv_set_int 1. file: vm_cmd_method.c 2. line: 180 Function: vm_cmd_method_vm_gv_set_str 1. file: vm_cmd_method.c 2. line: 200 Function: vm_cmd_method_vm_gv_set_time 1. file: vm_cmd_method.c 2. line: 220 Function: vm_cmd_method_vm_gv_set_uint 1. file: vm_cmd_method.c 2. line: 240 Function: vm_cmd_method_vm_halt 1. file: vm_cmd_method.c 2. line: 260 Function: vm_cmd_method_vm_halt_name 1. file: vm_cmd_method.c 2. line: 280 Function: vm_cmd_method_vm_load 1. file: vm_cmd_method.c 2. line: 300 Function: vm_cmd_method_vm_load_spawn 1. file: vm_cmd_method.c 2. line: 320 Function: vm_cmd_method_vm_pause 1. file: vm_cmd_method.c 2. line: 340 Function: vm_cmd_method_vm_protect 1. file: vm_cmd_method.c 2. line: 360 Function: vm_cmd_method_vm_reserve 1. file: vm_cmd_method.c 2. line: 380 Function: vm_cmd_method_vm_resume 1. file: vm_cmd_method.c 2. line: 400 Function: vm_cmd_method_vm_spawn 1. file: vm_cmd_method.c 2. line: 420 Function: vm_cmd_method_vm_start 1. file: vm_cmd_method.c 2. line: 440 Function: vm_cmd_method_vm_unload 1. file: vm_cmd_method.c 2. line: 460 Function: vm_cmd_method_vm_unload_file 1. file: vm_cmd_method.c 2. line: 480 Function: vm_cmd_method_vm_unprotect 1. file: vm_cmd_method.c 2. line: 500 Function: vm_cmd_method_vm_unreserve 1. file: vm_cmd_method.c 2. line: 520,5/16/06ProjectE - TIM - 1722,Unused function parameters in Build 3.1 FSW,4,The following function parameters are unused in the the Build 3.1 FSW. There is no indication of the status of these parameters for the ProjectE FSW. Parameter: busVoltage 1. function: ac_propPrsXdcrPwr 2. file: ac_propulsion.c 3. line #: 582 Parameter: pMsg 1. function: ac_smfStart 2. file: ac_small_frcs.c 3. line #: 163 Parameter: pMsg 1. function: ac_smfStop 2. file: ac_small_frcs.c 3. line #: 198 Parameter: pMsg 1. function: adGc_Start 2. file: ad_GyroComp.c 3. line #: 190 Parameter: pMsg 1. function: adGc_Stop 2. file: ad_GyroComp.c 3. line #: 241 Parameter: pMsg 1. function: adImuStart 2. file: ad_imu.c 3. line #: 400 Parameter: pMsg 1. function: adImuStop 2. file: ad_imu.c 3. line #: 431 Parameter: id 1. function: ad_imu_power 2. file: ad_imu.c 3. line #: 1831 Parameter: volts 1. function: ad_imu_power 2. file: ad_imu.c 3. line #: 1832 Parameter: pMsg 1. function: adInitGc_Start 2. file: ad_Init_GyroComp.c 3. line #: 166 Parameter: pMsg 1. function: adInitGc_Stop 2. file: ad_Init_GyroComp.c 3. line #: 251 Parameter: pMsg 1. function: adStateStart 2. file: ad_state.c 3. line #: 1114 Parameter: pMsg 1. function: adStateStop 2. file: ad_state.c 3. line #: 1144 Parameter: pMsg 1. function: ad_StellarStart 2. file: ad_stellar.c 3. line #: 166 Parameter: pMsg 1. function: ad_StellarStop 2. file: ad_stellar.c 3. line #: 204 Parameter: pMsg 1. function: ahrStart 2. file: ahr_task.c 3. line #: 209 Parameter: pMsg 1. function: ahrStop 2. file: ahr_task.c 3. line #: 226 Parameter: iId 1. function: ahr_tlmPush 2. file: ahr_task.c 3. line #: 303 Parameter: pMsg 1. function: ahrCalStart 2. file: calib.c 3. line #: 114 Parameter: pMsg 1. function: ahrCalStop 2. file: calib.c 3. line #: 140 Parameter: iId 1. function: ahrCalUpdate 2. file: calib.c 3. line #: 208 Parameter: local_registers 1. function: read_telecom_analog 2. file: cio_special.c 3. line #: 470 Parameter: pEepDev 1. function: eep_statusChk 2. file: eep_drv.c 3. line #: 568 Parameter: arg0 1. function: evr_init_test 2. file: evr.c 3. line #: 103 Parameter: actual_pos 1. function: CPM_Failed_RF_Switch_Notification 2. file: CPD_md.c 3. line #: 401 Parameter: commanded_pos 1. function: CPM_Failed_RF_Switch_Notification 2. file: CPD_md.c 3. line #: 402 Parameter: emic_latch_shed 1. function: PCPM_Request_Full_Spacecraft_Shed 2. file: PCPM.c 3. line #: 2255 Parameter: pCmdLength 1. function: set_limits 2. file: idle.c 3. line #: 235 Parameter: pCmdLength 1. function: enable_scrub 2. file: idle.c 3. line #: 306 Parameter: msg 1. function: nav2Start 2. file: nav2_sys.c 3. line #: 118 Parameter: msg 1. function: nav2Stop 2. file: nav2_sys.c 3. line #: 159 Parameter: ref_id 1. function: asr_Compute_Reference 2. file: asr_Abs_Slew_Ref.c 3. line #: 348,5/16/06ProjectE - TIM - 1721,Unused global variables in Build 3.1 FSW,4,The following global variables are unused in the the Build 3.1 FSW. There is no indication of the status of these variables for the ProjectE FSW. Variable: tuCpduTlm 1. file: cpdu.c 2. line#: 141 Variable: eps_rpc_sw_status_discrete_io_device_id 1. file: eps_rpc_sw.c 2. line#: 70 Variable: eps_rpc_sw_cmd_discrete_io_device_id 1. file: eps_rpc_sw.c 2. line#: 71 Variable: FLTREC_acyclic_nighttime_data 1. file: FLTREC_md.c 2. line#: 84 Variable: FPE_sep_dtci_evr_gate 1. file: FPE.c 2. line#: 168 Variable: FPE_sep_gif_evr_gate 1. file: FPE.c 2. line#: 169 Variable: FPE_sep_aac_evr_gate 1. file: FPE.c 2. line#: 170 Variable: FPE_sep_declared_evr_gate 1. file: FPE.c 2. line#: 173 Variable: FPE_sep_declared_sme_cmd_gate 1. file: FPE.c 2. line#: 174 Variable: FPE_sep_tlm_push_cycle_count 1. file: FPE.c 2. line#: 176 Variable: FPE_sep_max_tlm_push_cycles 1. file: FPE.c 2. line#: 183 Variable: FPE_sep_filter_cycle_count 1. file: FPE.c 2. line#: 185 Variable: FPE_sep_num_filter_cycles 1. file: FPE.c 2. line#: 191 Variable: FPE_lau_state 1. file: FPE.c 2. line#: 194 Variable: FPE_lau_dtci_evr_gate 1. file: FPE.c 2. line#: 197 Variable: FPE_lau_gif_evr_gate 1. file: FPE.c 2. line#: 198 Variable: our_command 1. file: SME_InitConfig_md.c 2. line#: 60 Variable: command_size 1. file: SME_InitConfig_md.c 2. line#: 61 Variable: err 1. file: SME_InitConfig_md.c 2. line#: 62 Variable: iocNodeAnalogFunct 1. file: iocNodeAnalog.c 2. line#: 53 Variable: time_tag_value 1. file: vml_storage.c 2. line#: 39,5/16/06ProjectE - TIM - 1720,Unused local variables in Build 3.1 FSW,4,The following local variables are unused in the the Build 3.1 FSW. There is no indication of the status of these variables for the ProjectE FSW. Variable: astrMeas 1. function: ad_StellarCyclic 2. file: ad_stellar.c 3. line #: 247 Variable: old_HBT_reason 1. function: RBR_Early_Logic 2. file: RBR.c 3. line #: 161,5/16/06ProjectE - TIM - 1719,Function is missing void in argument list (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.2 Function Declarations): e. Software functions that do not contain function arguments will be explicitly declared with a ""void"" argument list. File: ra_parameters.c Function: ra_save_parameters Line: 816",5/16/06ProjectE - TIM - 1718,No function headers (Contractor3 Software Coding Convention Violation),5,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.2 Function Header): a. Software functions within files will contain a standard function header that includes function name and a description of the function. The following function header uses the “design tool” format. File: ra_expansions.c 1. Function: ra_move_guarded 2. Line: 1208,5/16/06ProjectE - TIM - 1717,Code filename is longer than 20 characters (Contractor3 Software Coding Convention Violation),5,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.3 Naming Conventions): f. Software source code filenames (for compiled C code) will be no more than 20 characters in length. sam_Backshell_Sep_Monitor.c sam_Cruise_Sep_Monitor.c sam_Heatshield_Sep_Monitor.c sam_Touchdown_Monitor.c SME_AttKnowlReinit_md.c SME_PostDampConfig_md.c vm_external_data_mission.c vm_if_external_data_mission.c,5/16/06ProjectE - TIM - 1716,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files Inst6_ccd.c Inst6_cfg_data.c Inst6_cmd.c Inst6_fsw.c Inst6_globals.c Inst6_image.c Inst6_inst_cmds.c Inst6_main.c Inst6_move.c Inst6_paci.c Inst6_preheat.c Inst6_status.c Inst6_tlm.c",5/16/06ProjectE - TIM - 1715,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files ra_cfg.c ra_col.c ra_col_primitives.c ra_command.c ra_compress.c ra_deflection.c ra_expansions.c ra_external.c ra_fault.c ra_fp.c ra_kinematic.c ra_manager.c ra_math.c ra_monitor.c ra_paci_com.c ra_parameters.c ra_queues.c ra_recovery.c ra_state.c",5/16/06ProjectE - TIM - 1714,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files Inst8_cfg_data.c Inst8_cmd.c Inst8_fsw.c Inst8_globals.c Inst8_image.c Inst8_inst_cmds.c Inst8_main.c Inst8_move.c Inst8_paci.c Inst8_preheat.c Inst8_status.c Inst8_tlm.c",5/16/06ProjectE - TIM - 1713,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files ice_lut_main.c Inst6a_cfg_data.c Inst6a_cmd.c Inst6a_fsw.c Inst6a_globals.c Inst6a_image.c Inst6a_main.c Inst6a_slots.c Inst6a_status.c Inst6a_tlm.c magi_image.c",5/16/06ProjectE - TIM - 1712,Missing type-cast in Build 3.1 FSW (no data loss),4,"The following type-casts are missing. However, the current implementation does not cause a loss of data. Unsigned short value assigned an int value. 1. File: ACPM.c 2. Function: ACPM_Set_IdleTimeout 3. Variable: ACPM_IdleMode_Persistence 4. Line: 247 Unsigned short value assigned an int value. 1. File: ACPM.c 2. Function: ACPM_Set_DampTimeout 3. Variable: ACPM_DampMode_Persistence 4. Line: 292 Unsigned char value assigned an int value. 1. File: ACPM.c 2. Function: ACPM_Execute 3. Variable: ACPM_ACS_Mode 4. Line: 638 Unsigned char value assigned an int value. 1. File: AKPM.c 2. Function: AKPM_Check_Gyro_Condition 3. Variable: msg.hdr.to.instanceId 4. Line: 891 Unsigned short value assigned an int value. 1. File: DBPM.c 2. Function: DBPM_Telemeter_Side_Swap_Values 3. Variable: bytesRead 4. Line: 1233 Unsigned short value assigned an unsigned int value. 1. File: DBPM.c 2. Function: DBPM_Check_Processor_Speed 3. Variable: current_speed 4. Line: 1282 Unsigned short value assigned an unsigned int value. 1. File: DBPM.c 2. Function: DBPM_Check_Processor_Speed 3. Variable: last_cmded_speed 4. Line: 1288 Unsigned short value assigned an int value. 1. File: FLTREC.c 2. Function: FLTREC_Record_FHT_Entry 3. Variable: FLTREC_dram_table.record[][] 4. Line: 396 Unsigned short value assigned an int value. 1. File: FLTREC.c 2. Function: FLTREC_Record_FHT_Entry 3. Variable: FLTREC_dram_table.record[][] 4. Line: 397 Unsigned short value assigned an int value. 1. File: FLTREC.c 2. Function: FLTREC_Reset_Boot_Counts 3. Variable: FLTREC_boot_counts.last_side_booted 4. Line: 968 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Store_Cyclic_Nighttime_Data 3. Variable: crc 4. Line: 1222 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Retrieve_Cyclic_Nighttime_Data 3. Variable: crc 4. Line: 1276 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Store_Acyclic_Nighttime_Data 3. Variable: crc 4. Line: 1416 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Retrieve_Acyclic_Nighttime_Data 3. Variable: crc 4. Line: 1470 Unsigned short value assigned an int value. 1. File: FPE.c 2. Function: FPE_reboot_recovery 3. Variable: FPE_boot_counts.last_side_booted 4. Line: 1038 Unsigned char value assigned an unsigned short value. 1. File: FPE.c 2. Function: FPE_startup 3. Variable: mission_phase 4. Line: 1197 Unsigned short value assigned an int value. 1. File: FPE.c 2. Function: FPE_reset_boot_counts 3. Variable: FPE_boot_counts.last_side_booted 4. Line: 2488 Unsigned short value assigned an unsigned long value. 1. File: MPD.c 2. Function: MPD_Set_Mission_Phase 3. Variable: Phase_Bits_FPGA 4. Line: 602 Unsigned short value assigned an unsigned long value. 1. File: MPD.c 2. Function: MPD_Derive_Mission_Phase 3. Variable: Phase_Bits_FPGA 4. Line: 768 Unsigned short value assigned an int value. 1. File: RBR.c 2. Function: RBR_Early_Logic 3. Variable: boot_counts.last_side_booted 4. Line: 216 Long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: temp_seconds 4. Line: 527 5. Doubles to Integers Unsigned long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: time_uint 4. Line: 817 Unsigned long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: time_uint 4. Line: 853 Unsigned long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: time_uint 4. Line: 916 Unsigned char value assigned an unsigned short value. 1. File: SPM.c 2. Function: SPM_safe_instrument 3. Variable: phase 4. Line: 1490 Unsigned short value assigned an unsigned long value. 1. File: iocNode1553.c 2. Function: iocNode1553IoctlCmdLoad 3. Variable: tmp_arg 4. Line: 516 Unsigned short value assigned an unsigned long value. 1. File: iocNodeCmic.c 2. Function: iocNodeCmicRead 3. Variable: idx 4. Line: 249 Unsigned short value assigned an unsigned long value. 1. File: iocNodeCmic.c 2. Function: iocNodeCmicWrite 3. Variable: idx 4. Line: 324 Unsigned short value assigned an unsigned long value. 1. File: iocNodeDualSlave.c 2. Function: iocNodeDualSlaveRead 3. Variable: idx 4. Line: 430 Unsigned short value assigned an unsigned long value. 1. File: iocNodeDualSlave.c 2. Function: iocNodeDualSlaveWrite 3. Variable: idx 4. Line: 526 Unsigned short value assigned an unsigned long value. 1. File: iocNodeEmic.c 2. Function: iocNodeEmicRead 3. Variable: idx 4. Line: 306 Unsigned short value assigned an unsigned long value. 1. File: iocNodeEmic.c 2. Function: iocNodeEmicWrite 3. Variable: idx 4. Line: 413 Unsigned short value assigned an unsigned long value. 1. File: iocNodePdc.c 2. Function: iocNodePdcRead 3. Variable: idx 4. Line: 553 Unsigned short value assigned an unsigned long value. 1. File: iocNodePdc.c 2. Function: iocNodePdcWrite 3. Variable: idx 4. Line: 662 Unsigned short value assigned an unsigned long value. 1. File: iocNodeProp.c 2. Function: iocNodePropRead 3. Variable: idx 4. Line: 280 Unsigned short value assigned an unsigned long value. 1. File: iocNodeProp.c 2. Function: iocNodePropWrite 3. Variable: idx 4. Line: 348 Unsigned short value assigned an unsigned long value. 1. File: iocNodeProp.c 2. Function: iocNodePropWrite 3. Variable: tmp_arg 4. Line: 351 Unsigned short value assigned an unsigned long value. 1. File: iocNodePyro.c 2. Function: iocNodePyroRead 3. Variable: idx 4. Line: 518 Unsigned short value assigned an unsigned long value. 1. File: iocNodePyro.c 2. Function: iocNodePyroWrite 3. Variable: idx 4. Line: 589 Unsigned short value assigned anunsigned long value. 1. File: iocNodePyro.c 2. Function: iocNodePyroWrite 3. Variable: tmp_arg 4. Line: 594 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysFpEna 3. Variable: fpEnabMsg.header.from.taskId 4. Line: 128 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysInit 3. Variable: initMsg.header.from.taskId 4. Line: 202 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysSave 3. Variable: saveMsg.header.from.taskId 4. Line: 276 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysStart 3. Variable: startMsg.header.from.taskId 4. Line: 344 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysStop 3. Variable: stopMsg.header.from.taskId 4. Line: 406 Unsigned char value assigned an unsigned long value. 1. File: evr.c 2. Function: evr_report_event 3. Variable: packet_body[] 4. Line: 755 Unsigned short value assigned an int value. 1. File: PacketBuffer.c 2. Function: PacketBuffer_SaveSequenceNumbers 3. Variable: packetSeqSlot.apid 4. Line: 1779 Short value assigned an int value. 1. File: PacketBuffer.c 2. Function: PacketBuffer_InsertIfValid 3. Variable: packetBuffer[].lastCreated 4. Line: 2161 Short value assigned an int value. 1. File: PacketBuffer.c 2. Function: PacketBuffer_LoadSequenceNumbers 3. Variable: packetBuffer[].lastCreated 4. Line: 2231 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Initialize 3. Variable: pryorTable->end[] 4. Line: 110 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Initialize 3. Variable: pryorTable->start[] 4. Line: 112 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Initialize 3. Variable: pryorTable->end[] 4. Line: 115 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->end[] 4. Line: 459 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->start[] 4. Line: 461 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->level[] 4. Line: 497 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->end[] 4. Line: 526 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: cmic_ramset 3. Variable: fm_echo.success_flag 4. Line: 108 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_append 3. Variable: fm_echo.success_flag 4. Line: 478 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_copy 3. Variable: fm_echo.success_flag 4. Line: 580 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_copy_all 3. Variable: fm_echo.success_flag 4. Line: 702 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_copy_to_EEPROM 3. Variable: fm_echo.success_flag 4. Line: 828 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_delete 3. Variable: fm_echo.success_flag 4. Line: 870 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_dir_create 3. Variable: fm_echo.success_flag 4. Line: 911 Unsigned char value assigned an unsigned long value. 1. File: file_cmds.c 2. Function: file_dir_delete 3. Variable: fm_echo.success_flag 4. Line: 952 Unsigned char value assigned an int value. 1. File: file_memory_access.c 2. Function: memory_load 3. Variable: fm_echo.success_flag 4. Line: 566 Unsigned short value assigned a short value. 1. File: flash_dev.c 2. Function: load_page_buffer 3. Variable: value 4. Line: 499 Unsigned short value assigned a short value. 1. File: flash_dev.c 2. Function: send_page_buffer 3. Variable: value 4. Line: 583 Unsigned short value assigned a long value. 1. File: flash_dev.c 2. Function: flash_cmp_blk 3. Variable: i 4. Line: 641 Unsigned short value assigned an unsigned long value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: allocEntry.allocData.bytes 4. Line: 693 Unsigned short value assigned an unsigned long value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: allocEntry.allocData.startBlock 4. Line: 694 Unsigned short value assigned an unsigned long value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: allocEntry.allocData.endBlock 4. Line: 695 Unsigned char value assigned an unsigned short value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: saveOneMsg.ackList 4. Line: 726 Unsigned short value assigned an int value. 1. File: cio.c 2. Function: handle_cio_trace_tlm 3. Variable: cio_channels[][].trace_tlm_id 4. Line: 762",5/12/06ProjectE - TIM - 1710,"msg.mod/msg.c, line 251, constatnt value boolean and unnecessary use of EVR_FATAL",3,"The following if-elseif conditional was flagged by the code analyzer utility because of a constant value boolean. The macro NUM_ELEMENTS() returns the number of elements in the array structure which is constant and makes the boolean logic a constant (always FALSE). If the data area of the operating system was corrupted- just the value for TASK_ID_NUM_ENTRIES, then the if-elseif conditional would suddently be always TRUE, an EVR_FATAL would be reported and potentially, the flight computer could fall into a series of repeating reset/reboots until the OS is reloaded into memory. Other corruption would lead to reboots but not necessarily a repeating loop. msg.mod/msg.c, line 251 STATIC int msg_init_queues(void) { /* Local variables. */ register int i; /* Boring loop index. */ register int logicalTaskId; /* Logical task Id. */ struct mq_attr mqAttr; /* Message queue attributes. */ int returnCode = OK; /* Return value. */ /* Verify data structure consistency. Ideally, this would not be a runtime * check, but rather a preprocessor or compiler check. However, this check * ultimately requires use of sizeof(), which doesn't exist until compile * time. These checks are necessary, as TASK_ID_NUM_ENTRIES are defined * separately from MsgQCreateParms[] and MsgQData[]. */ 251 if (NUM_ELEMENTS(MsgQCreateParms) != TASK_ID_NUM_ENTRIES) { EVR_REPORT_EVENT_2 ( EVR_FATAL, EVR_ID_MSG_Q_PARMS_VERIFY, EVR_LOC(__LINE__), ""consistency check of message queue parms failed, "" ""was %d should be %d"", NUM_ELEMENTS(MsgQCreateParms), TASK_ID_NUM_ENTRIES); returnCode = ERROR; return(returnCode); } else if (NUM_ELEMENTS(MsgQData) != TASK_ID_NUM_ENTRIES) { EVR_REPORT_EVENT_2 ( EVR_FATAL, EVR_ID_MSG_Q_DATA_VERIFY, EVR_LOC(__LINE__), ""consistency check of message queue data failed, "" ""was %d should be %d"", NUM_ELEMENTS(MsgQData), TASK_ID_NUM_ENTRIES); returnCode = ERROR; return(returnCode); } phx_fsw.prj/fsw_task.h /********************************************************************** ** Mission-specific task ID definition macros: **********************************************************************/ #define START_TASK_ID_LIST \ typedef enum _fswTaskId { #define END_TASK_ID_LIST \ TASK_ID_NUM_ENTRIES \ } fswTaskId_t, *fswTaskId_p, **fswTaskId_h;",5/12/06ProjectE - TIM - 1709,"hlfp.mod/SME_InitConfig_md.c, line 669, if-condition excludes a set of lines of code",3,"An if-conditional is always false (SME_InitConfig_md.c, line 669) and a set of statements is excluded from the code execution. There is no documentation in the file, for the function or inline comments that state the rationale for excluding the code. ""TODO"" placemarkers appear related but are not a safe means to manage the code. hlfp.mod/SME_InitConfig_md.c, line 669 659 else 660 { 661 662 /*+++++ 663 ** If Heartbeat Termination is allowed for Safe Mode Deadend. 664 **-----*/ 665 666 /*TODO FPE interface 667 if (HBG_Can_Term(HBG_Term_Reason_SME_Deadend)) 668 */ 669 if (FALSE) 670 { 671 672 /* No thrusters seem to work on this avionics string; swap */ 673 SME_acs_set = acsSet_none; 674 675 /*+++++ 676 ** Record Att Ctrl. Deadend in FHT and request HB Term 677 **-----*/ 678 679 FLTREC_Record_FHT_Entry(SME_EntID_Milestone, SME_MS_AttCtlDeadend); 680 681 /*TODO FPE interface 682 HBG_Request_Term(HBG_Term_Reason_SME_Deadend); 683 */ 684 685 }",5/12/06ProjectE - TIM - 1708,"CPM_md.c, line 411, enumerator type mis-match",3,"There is a type mismatch with the switch expression on line 411 of file CPM_md.c. The case values are presently set within the C source file CPM_md.c (see below) and the switch variable ""sw_id"" is a declared enumerator eps_emic_relay_id_t in header EPS_msg.h (at bottom). Note that the Function comment statement includes a TBD tied to ""switch id""; however, no date is included and it is not clear whether this is from heritage or from present ProjectE development. CPM_md.c, line 411 /*DSH*/ #define INST_ID_TELE_SSPA_1 0 #define INST_ID_TELE_SSPA_2 0 #define EPS_EMIC_RELAY_ID_UHF_COAX_SW_6 0 #define EPS_EMIC_RELAY_ID_UHF_COAX_SW_5 1 #define EPS_EMIC_RELAY_ID_WVGD_SW_4 2 ... /* Function: CPM_Failed_RF_Switch_Notification ... ** Arguments: switch id (defined in EPS TBD), ** actual position (the position the switch is ""stuck"" in) ** commanded or desired position ... */ void CPM_Failed_RF_Switch_Notification ( eps_emic_relay_id_t sw_id, eps_emic_relay_pos_t actual_pos, eps_emic_relay_pos_t commanded_pos ) ... ... /*+++++ ** Switch on the passed-in switch id **-----*/ 411 switch (sw_id) { /*+++++ ** Case: UHF_COAX_SW_3 **-----*/ case (EPS_EMIC_RELAY_ID_UHF_COAX_SW_6): { /*+++++ ** TBD **-----*/ } --------------------------------------- EPS_msg.h typedef enum { EPS_EMIC_RELAY_ID_U_COAX_SW_6, EPS_EMIC_RELAY_ID_X_COAX_SW_5, EPS_EMIC_RELAY_ID_U_COAX_SW_7, EPS_EMIC_RELAY_ID_WVGD_SW_4, UNDEFINED_EPS_EMIC_RELAY_ID_TYPE } eps_emic_relay_id_t;",5/12/06ProjectE - TIM - 1707,"File heap.c, line 549, ambiguous assignment of pre-processor data.",3,"It is not clear whether the case ""case HEAP_END_OF_HEAPS"" on line 549 of heap.c, where ""#define HEAP_END_OF_HEAPS 0x4ea99ae4"" in heap_cfg.h, can ever be TRUE or whether the hex value 0x4ea99ae4 represents the end of the heap in memory. heap.c, line 549 /* ** Check the rest of the heap file for errors */ if (!useDefaultCfg){ done = 0; while (!done && (useDefaultCfg == FALSE)) { heapType = get_allocation(heapCfgFile, &allocBuffer); switch (heapType){ case HEAP_VARIABLE_SYSTEM: case HEAP_FIXED_SYSTEM: case HEAP_VARIABLE_EXTENT: break; case HEAP_VARIABLE_EXTENT_FAST: free(allocBuffer.heapVarAttr.varExtHeapFast.subListTbl); break; 549 case HEAP_END_OF_HEAPS: done = -1; break; default: useDefaultCfg = TRUE; break; } } if (lseek(heapCfgFile,0,SEEK_SET) != 0){ useDefaultCfg = TRUE; } } return heapCfgFile; --------------------------------------------------- heap_cfg.h #define HEAP_END_OF_HEAPS 0x4ea99ae4",5/12/06ProjectE - TIM - 1704,"File eps_schedule.c, line 46, string array assignments are not NULL terminated",3,"Each of the strings stored in the array strucuture as the second element will use all eight chars of tag_t (see header fsw_types.h, below) and leave no character for a terminating NULL. Review of the usage of the array and its elements shows use of strncpy() and faulty use of the string array is not apparent. Lack of documentation of the array usage and its use throughout the FSW (31 calls to the routine createCPDU()) raises the risk of mis-use. eps_schedule.c, line 46 eps_cpdu_t eps_schedule_cpdu[NUM_EPS_CPDU] = { {EPS_SWITCH_VERIFY_CPDU, ""SW_VERIF"", 0.1, 10.0, 0}, {EPS_SWITCH_CMD_HW_CPDU, ""SW_CMDHW"", 0.1, 10.0, 0}, {EPS_SWITCH_VALIDATE_CPDU, ""SW_VALID"", 0.1, 10.0, 0}, {EPS_CHARGE_CONTROL_CPDU, ""EPS_CC"", 0.1, 10.0, 0}, {EPS_ANALOG_READ_CPDU, ""EPS_A_RD"", 0.1, 10.0, 0} }; fsw_types.h /* Context switch, task utiliztion, cyclical period duration and utilization */ typedef char tag_t[8];",5/12/06ProjectE - TIM - 1703,"File eps_initiator.c, global epsPyroBadWriteCntr, uninitialized and leading to faulty engineering telemetry",2,"Global variable epsPyroBadWriteCntr (file eps_initiator.c) is not explicitly initialized and functions as a counter and is accessed and its data passed to telemetry through execution of function tlm_store_uint(BUS_BAD_WRITE_CNTR_PIU_TLM_ID, epsPyroBadWriteCntr) in numerous statements in the file eps_initiator.c. uint32_t epsPyroBadWriteCntr;",5/12/06ProjectE - TIM - 1702,"File eps_emic_sw.c, line 2374, out-of-bounds array access",4,"Due to the use of the "">="" comparison in the conditional on line 2374, the array eps_emic_sw_fp_enable_word[fp_enable_word_idx] on line 2393 can be accessed 1 index beyond array boundaries. File eps_emic_sw.c, line 2374 /* Define the number of fp enable word(s) for the EMIC switches MSP01 has one EMIC card, one fp enable word is needed. Genesis has two EMIC cards, two fp enable words are needed. */ #ifdef EPS_GENESIS #define NUM_EPS_EMIC_SW_FP_ENABLE_WORDS 2 #else #define NUM_EPS_EMIC_SW_FP_ENABLE_WORDS 1 #endif ... ... static FP_Enables_t eps_emic_sw_fp_enable_word[NUM_EPS_EMIC_SW_FP_ENABLE_WORDS]; ... ... void eps_emic_sw_set_fp_enable(eps_emic_sw_id_t id, bool_t enable) /*----- End Prototype -----*/ { uint32_t command; uint32_t mask; int fp_enable_word_idx; /*+++++ * Get fault protection enable word for switch -----*/ fp_enable_word_idx = eps_emic_sw[id].fp_enable_word; /*+++++ * If the specified fault protection enable word is valid -----*/ if ((0 <= fp_enable_word_idx) && 2374 (NUM_EPS_EMIC_SW_FP_ENABLE_WORDS >= fp_enable_word_idx)) { /*+++++ * If the specified fault protection enable state is FALSE -----*/ if (FALSE == enable) { /*+++++ * set command word to ENABLE_NONE -----*/ command = ENABLE_NONE; } /*+++++ * Set fault protection enable word for EMIC switches -----*/ FPU_Enable_Set(command, mask, 2393 eps_emic_sw_fp_enable_word[fp_enable_word_idx]);",5/12/06ProjectE - TIM - 1701,"eps_ccu.c, line 3633, mismatched enumerators, concern with use of #ifdef EPS_GENESIS",3,"The statement on line 3633 of eps_ccu.c is a comparison of mismatched enumerator types. While they are mismatched, review of all applications of the enumrators verifies that they are being handled and used consistently; but not documented. This review raises a concern with the use of ""#ifdef EPS_GENESIS"" (also #ifndef) embedded throughout the code. IV&V recommends that the developer review the use of the pre-processor statement. Possibly incorrectly excluding or including code. enumerator value EPS_ERROR_SENSOR_FAILED is defined in typedef ""eps_error_t"" of header file eps.h Function FP_Condition_t() is of enumerator typedef eps_sensor_data_id_t defined in the header file EPS_msg.h File eps_ccu.c, line 3633 /*+++++ * for all successive battery voltage tap sensors -----*/ for ( l_sensor = 1; l_sensor < NUM_EPS_CCU_BAT_CELL_ID; l_sensor++ ) { /*+++++ * If the read of the current battery tap voltage is successful * If the sensor for the previous battery tap voltage is not FAILED * augment total voltage with the difference between current and previous readings * increment the number of good sensors * set previous battery cell voltage to current battery cell voltage -----*/ 3633 if (eps_sensor_data_read_eu(l_batt->voltage_sensor_id[l_sensor], &l_voltage) != EPS_ERROR_SENSOR_FAILED) { if (eps_sensor_data_get_cond(l_batt->voltage_sensor_id[l_sensor-1]) != EPS_ERROR_SENSOR_FAILED) { l_total_voltage += l_voltage - l_prev_voltage; l_number_of_sensors++; } l_prev_voltage = l_voltage; } }",5/12/06ProjectE - TIM - 1700,"eps_ccu.c, line 3396, Enumerator type mismatch",4,"There is a type mismatch between ""l_ccu->pm[l_pm_id].state"" and EPS_CCU_PM_CMD_ENABLE on line 3396 of eps_ccu.c. The structure element ""state"" is of type eps_ccu_pm_state_t and the enuerator value is of type eps_ccu_pm_cmd_t (state vs. cmd). The code executes as intended although only because the enumerator value of cmd-enable and state-enable are the same enumerator value (1) in their respective typedefs. eps_ccu.c, line 336 for (l_pm_id = 0; l_pm_id < NUM_EPS_CCU_PM_ID; l_pm_id++) { 3396 if (l_ccu->pm[l_pm_id].state == EPS_CCU_PM_CMD_ENABLE) { eps_ccu_pm_set_cond(ccu_id, l_pm_id, Good); } } eps_ccu.h /* define cmd values for CCU PM */ typedef enum { EPS_CCU_PM_CMD_DISABLE, EPS_CCU_PM_CMD_ENABLE, NUM_EPS_CCU_PM_CMD } eps_ccu_pm_cmd_t; /* define state values for CCU PM */ typedef enum { EPS_CCU_PM_STATE_DISABLE, EPS_CCU_PM_STATE_ENABLE, NUM_EPS_CCU_PM_STATE } eps_ccu_pm_state_t;",5/12/06ProjectE - TIM - 1699,"eps_ccu.c, function eps_ccu_calc_amp_hour_soc(), line 690, array address compared instead of its data value.",2,"An if-conditional is always FALSE due to the referencing of the ""ls_first_time"" array address rather than the first data value of the array. The array is defined local static, is initialized, used in the conditional with corresponding inline documentation and leads to further faulty assignments. eps_ccu.c, function eps_ccu_calc_amp_hour_soc(), line 690 670 static bool_t ls_first_time[NUM_EPS_CCU_ID] = {FALSE}; 671 ... 684 685 /*+++++ 686 * If this is the first time through this function 687 * set the last time to the current time and 688 * set the ""first time through"" flag to true. 689 -----*/ 690 if (ls_first_time == FALSE) { 691 692 ls_last_time[ccu_id] = l_current_time; 693 ls_first_time[ccu_id] = TRUE; 694 695 } 696 l_delta_time = l_current_time - ls_last_time[ccu_id];",5/12/06ProjectE - TIM - 1698,"File cio_operation.c, line 248, uninitialized variable, boolean at left of && in if-condition is faulty",3,"The local variable ""cont"" (file cio.mod/cio_operation.c) is used as a status variable and is not initialized. As a consequence, the boolean to the left of the && in the if-conditional on line 248 can be ambiguous/faulty. cio.mod/cio_operation.c, line 248 static boolean evaluate_expression( { cio_data_type temp; boolean cont; ... switch (opcode) { case CIO_OPCODE_NOOP: cont = TRUE; break; ... case CIO_OPCODE_RETURN: if (*source_ptr == 0) result = FALSE; else result = TRUE; *instruction_index_ptr = CIO_NO_INSTRUCTION_INDEX; return result; break; ... } 248 if (cont && *instruction_index_ptr < instruction_index_max_limit) (*instruction_index_ptr)++; else *instruction_index_ptr = CIO_NO_INSTRUCTION_INDEX; return TRUE; }",5/12/06ProjectE - TIM - 1697,"Inst6_GetDeviceTemp, line 712, return value (temperature) not assigned a value.",3,"Variable 'temp' (meaning temperature) (line 676) is not initialized. The variable ""mode"" is never given the value Inst6_TEMP_LAST, therefore the if-condition is always false, the else is executed (and its switch statement) and consequently, variable temp (the function return value) is left unassigned. None of the functions that call Inst6_GetDeviceTemp() check the function's return value (i.e. ""temp""). f1_sci_obj.mod\Inst6.mod\Inst6_preheat.c, line 712 int16_t Inst6_GetDeviceTemp(uint16_t htr_select, uint16_t mode) { 676 int16_t temp; if (Inst6_TEMP_LAST == mode) { /* get last ADC value from a move and use that */ temp = Inst6_heaters[htr_select].cur_temp; } else { /* assume that we're in Inst6_TEMP_NOW mode--get fresh reading */ switch (htr_select) { case Inst6_HTR_AZ: ... } } 712 return temp; The function Inst6_GetDeviceTemp while passing value Inst6_TEMP_NOW. The function does not have a switch case (above) for this value (except for default case [do nothing]). Inst6_GetDeviceTemp(i, Inst6_TEMP_NOW);",5/12/06ProjectE - TIM - 1696,"File Inst6_image.c, return value of Inst6_CCDProcHotPix() not assigned, not tested.",3,"The function Inst6_CCDProcHotPix()(Inst6_image.c) does no receive and check the return status from the call to img_FixPixels(). The return value from img_FixPixels() should determine the value returned by Inst6_CCDProcHotPix(). Consequently, return status of Inst6_CCDProcHotPix() is always true. uint16_t Inst6_CCDProcHotPix(uint16_t ccd_sel) { uint16_t rc; rc = MAGI_OK; if (MAGI_OK == rc) { if (Inst6_CCD.img[ccd_sel].hotpix) { /* load the left hot pixel table */ img_LoadTable(Inst6_CCD.img[ccd_sel].hotpix_tbl,IMG_TBL_HP,IMG_TBL_Inst6); /* call the pixel correction utility */ img_FixPixels (Inst6_CCD.exp[ccd_sel].caller_id, Inst6_CCD.exp[ccd_sel].slot_id, Inst6a_BLOCK, IMG_TBL_HP, IMG_TBL_Inst6, Inst6_CCD.img_width, Inst6_CCD.img_height, IMG_DO_HISTOGRAM, &Inst6_histogram[0]); } } return rc; }",5/12/06ProjectE - TIM - 1695,"Inst6_image.c, line 440, potential out-of-bounds assignment of an array",3,"If Inst6 is commanded such that the variable ccd_sel (i.e. CCD selected) is equal to Inst6_CCD_BOTH, then in switch ""switch(ccd_sel)"" and ""case Inst6_CCD_BOTH"" in functions Inst6_CCDShutterExpose() and Inst6_Expose(), the function Inst6_CCDPowerSet() is called and within this function, the processor will write out of bounds of the array Inst6_CCD.pwr[ccd_sel].state. The out-of-bounds error will occur on line 440 in file Inst6_image.c The following code excerpts show the location where the error will occur and the conditions and definitions that lead to it. f1_sci_obj.mod\Inst6.mod\Inst6_image.c, line 440 160 Inst6_CCDParams_t Inst6_CCD; /**< Current CCD control parameters */ ... 394 uint16_t Inst6_CCDPowerSet(uint16_t ccd_sel, uint16_t power_state) 395 { ... 438 else { 439 /* record power set failure for selected camera */ 440 Inst6_CCD.pwr[ccd_sel].state = Inst6_CCD_PWR_FAULT; The following code excerpts identify calls to Inst6_CCDPowerSet for which ccd_sel could have the value Inst6_CCD_BOTH and consequently lead to an overflow of the array by 1. Inst6_image.c ----------------------------------- and in function Inst6_Expose(), the same statement construction exists uint16_t Inst6_CCDShutterExpose(uint16_t ccd_sel) { uint16_t rc; /* check to see if we need to power-up the camera(s) */ switch (ccd_sel) { /* FALLTHROUGH IS INTENTIONAL */ case Inst6_CCD_LEFT: case Inst6_CCD_RIGHT: if (Inst6_CCD_OFF == Inst6_CCD.pwr[ccd_sel].state) { Inst6_CCDPowerSet(ccd_sel, Inst6_CCD_ON); /* send a reset to the CCD's */ Inst6_CCDReset(ccd_sel); } break; case Inst6_CCD_BOTH: if (Inst6_CCD_OFF == Inst6_CCD.pwr_state) { Inst6_CCDPowerSet(ccd_sel, Inst6_CCD_ON); /* send a reset to the CCD's */ Inst6_CCDReset(ccd_sel); } break; ... also in function Inst6_Expose(), the following call to the function Inst6_CCDPowerSet could send the value Inst6_CCD_BOTH. /* see if we need to power-down the CCD's */ if ((TRUE == Inst6_CCD.pwr[Inst6_CCD_LEFT].autopwr) || (TRUE == Inst6_CCD.pwr[Inst6_CCD_RIGHT].autopwr)) { /* send power-down command */ Inst6_CCDPowerSet(ccd_sel, Inst6_CCD_OFF); } Inst6_types.h ----------------------------------- enum { Inst6_CCD_LEFT = 0, Inst6_CCD_RIGHT, Inst6_CCD_BOTH, Inst6_CCD_DEVICES = Inst6_CCD_BOTH } Inst6_ccd_sel_t; typedef struct { uint16_t source; /* Current img src: Left, Right or Both */ int16_t pwr_state; /* Current overall CCD power state */ time_t pwr_ontime; /* Time CCD's were enabled */ /* CCD Power control parameters */ Inst6_ccd_pwr_t pwr[Inst6_CCD_DEVICES]; /* Power states of both CCD's */ /* CCD Exposure control parameters */ Inst6_ccd_exp_t exp[Inst6_CCD_DEVICES]; /* Exposure parameters for each CCD */ ... } Inst6_CCDParams_t;",5/12/06ProjectE - TIM - 1694,"Inst6_image.c, uninitialized return status value",3,"Local variable ""power"" is unintialized and can return with a random value. The return value depends on variable ccd_sel which presently appears to be receiving only values of Inst6_CCD_LEFT and Inst6_CCD_RIGHT; however, a third value exists Inst6_CCD_BOTH and the default case would permit an ambiguous/corrupt value for ccd_sel and return a false function status. f1_sci_obj.mod\Inst6.mod\Inst6_image.c, line 209 uint16_t Inst6_CCDGetPowerState(uint16_t ccd_sel) { uint16_t power; switch (ccd_sel) { case Inst6_CCD_LEFT: case Inst6_CCD_RIGHT: power = Inst6_CCD.pwr[ccd_sel].state; break; default: break; } 209 return power; }",5/12/06ProjectE - TIM - 1693,"Inst8_paci.c, uninitialized structure, ambiguous return value",3,"The parameter disc.value is not initialized and can potentially reach line 747 or 763 with an ambiguous value and assign the value to the return variable ""rc"". The return value (rc) of the function Inst8_PACIDiscrete is evaluated in the calling routines. f1_sci_obj.mod\Inst8.mod\Inst8_paci.c, Function Inst8_PACIDiscrete(), line 747, 763 665 int16_t Inst8_PACIDiscrete(uint16_t disc_line, uint16_t function) 666 { 667 int nDiscretes; 668 int16_t rc; 669 discrete_t disc; ... ... 738 else { 739 /* No error */ 740 /* Resets the persistence count for this interface. Not the total count! */ 741 FPU_Counter_NoError(&Inst8_inst_if_cmd_err_cnt); 742 /* If responses are enabled make the condition Good again */ 743 if (0!=(Inst8_Cfg.fp_enable & Inst8_INST_IF_CMD_RESP)) { 744 FPU_Condit_ToGood(&Inst8_system_fp_cond); 745 } 746 Inst8_disc_fault_gate = FALSE; /* reset the EVR gate */ 747 rc = (int16_t) disc.value; 748 } 749 } 750 else if (ERROR == nDiscretes) { 751 if (!Inst8_disc_fault_gate) { 752 EVR_REPORT_EVENT_2(EVR_WARNING, 753 Inst8_PACI_DISC_FAIL_EVR_ID, 754 EVR_LOC(__LINE__), 755 ""Inst8: Discrete I/O error, function: %d discrete: %d"", 756 (int)function, 757 (int)disc_line); 758 rc = ERROR; 759 } 760 } 761 else { 762 Inst8_disc_fault_gate = FALSE; /* reset the EVR gate */ 763 rc = (int16_t) disc.value;",5/12/06ProjectE - TIM - 1692,"Inst8_paci_com.c, bit shift is unparenthesized, intention is not clear",4,"On line 336 of ra_paci_com.c of module ra.mod, the bit shift argument is unparentesized. It is not clear whether the left bit shift should be ""4"" or (4*(3-joint)). joint ranges from 0 to a value of 3, and ""*"" takes precedence over ""<<"" and most likely the intention is the latter. if (command->cmd_type == Inst9_CMD_WRITE_DATA) { buf[0] = 0xE800; buf[1] = 0; for (joint = 0; joint < Inst9_DOF; joint++) { 335 buf[1] += ((command->cmd.write[joint].type & 0x0007) << 336 4 * (3 - joint)); if (command->cmd.write[joint].type == Inst9_VOLT) { buf[joint + 2] = command->cmd.write[joint].data.mtr_volt << 3; } else if (command->cmd.write[joint].type == Inst9_OC_COUNT) { buf[joint + 2] = command->cmd.write[joint].data.oc_count.start + (command->cmd.write[joint].data.oc_count.nonstart << 8); } else { buf[joint + 2] = command->cmd.write[joint].data.dn; } } } ------------ ra_common.h: #define Inst9_DOF 4",5/12/06ProjectE - TIM - 1691,"Inst7_main_init(), counter variable (problems) not counting all errors",3,"In the function Inst7_main_init(), an error is not counted by local variable ""problems"" because a check of the return value from heap_get_hdr() is not checked. heap_get_hdr and heap_alloc checks the status of heap. It appears that problems should count an error by including a check of heap_get_hdr(). This would also explain the intention of using operator ""+="" in the statement that follows on line 1173. f1_sci_obj.mod\Inst7.mod\Inst7.c, line 1168 static int Inst7_main_init(void) { int problems = 0; /* Default, no problems */ /* Get the memory heap */ 1168 if (!problems) { heap = heap_get_hdr(HEAP_Inst7); } /* Open devices */ 1173 problems += open_devices(); /* Establish EPS power callback and msg queue */ if(eps_comp_pwr_callback(EPS_COMP_ID_Inst7, eps_power_callback) != EPS_OK) problems += 1; if(eps_comp_msg_q(EPS_COMP_ID_Inst7, TASK_ID_Inst7, OBJ_ID_NO_OBJECTS, INST_ID_NO_INSTANCES, EPS_MSG_PRIORITY) != EPS_OK) problems += 1; return(problems); }",5/12/06ProjectE - TIM - 1690,"ice_tbl.c, Global ice_wNoSegV, potential erroneous use of global variable",3,"Potential erroneous use of one global variable in place of another in file ice_tbl.c of Inst6a.mod. Two globals are defined- ice_wNoSegV and ice_wNoSegH. They are treated the same way but when applied, ice_wNoSegH appears to have been placed in an equation (line 935) where ice_wNoSegV should be. There is no inline documentation to backup usage. /* Globals */ /*! number of segments in height of image */ uint16_t ice_wNoSegV; /*! number of segments in width of image */ uint16_t ice_wNoSegH; ERROR_CODE ice_CalcSegments(uint16_t num, uint16_t pkt_size, iceCommand_t *psICEComp) { ... if (num >= wNumSegs) { /* end of loop check (pkt_count overrun)*/ wError = ICE_ERR_SEG_NUM; } else { /* do segments after the first */ psICEComp->wSegmentRow = (uint16_t)(num / ice_wNoSegH) * wSegH; /* seg(num) row position */ 935 psICEComp->wSegmentCol = (uint16_t)(num % ice_wNoSegH) * wSegW; /* seg(num) column position */ }",5/12/06ProjectE - TIM - 1689,Inst9 Level 5 Requirement 56 Is Not Met in Inst9 SDD,3,"RAFSW does not always “shutdown power to the Inst9 and RAE if the RAFSW is in a fault state and the Inst9 is powered.” Inst9 Level 5 Requirement 56 states “The RAFSW shall shutdown power to the Inst9 and RAE if the RAFSW is in a fault state and the Inst9 is powered.” Section 3.4 Fault and Event Protection (under Software Architecture) states “It is possible for a fault expansion to be interrupted by another fault/event and cause the execution of another fault expansion. The number of interruptions is limited in three ways: 1. If the total recursion depth exceeds a hard-coded limit (to prevent stack overflow), power is shut down to the arm and no further action is permitted; 2. The number of interruptions by each type of fault/event is limited (e.g., while executing ra_dig_trench, only n motion-impeded events are permitted); 3. If interrupted while moving the arm to a safe place after the limit is reached, power is shut down to the arm and no further action is permitted.”",4/27/06ProjectE - TIM - 1688,Inst9 SDD Contradicts Inst9 Level 5 Requirement 55,3,"Inst9 Level 5 Requirement 55 states “The RAFSW shall reject subsequent move/heat commands (or any command that communicates with the RAE) if the RAFSW is in a fault state.” Section 2.2 Command Sequencing states the “RAFSW will create a sequence of actuator commands to be executed in the event of a fault or event.” Section 2.4 Fault and Event Protection (under Requirements) states “Depending on the fault/event detected, the RAFSW will attempt to recover from the condition.” Section 3.1 Behavior Model states “If an event/fault occurs during the execution of a command, the system will attempt to recover from the event/fault, if appropriate, by moving to the generating recovery expansion. Failing recovery, a safing expansion will be executed and power removed from the arm.” Section 3.4 Fault and Event Protection (under Software Architecture) states “If a fault/event is detected, any arm motion will be stopped and the fault/event reported to the Inst9 Manager task. Receipt of a fault/event message by the Inst9_Manager task will interrupt the current task expansion and cause the execution of a fault expansion.” In Table 7. Robotic Arm Fault Protection, the action described of the “premature motion termination” or “stalled” fault for the “all motion cmds” Task is “return continue” for the Fault Expansion.",4/27/06ProjectE - TIM - 1685,Inst9 Level 5 Requirement 45 does not trace to the Inst9 SDD,3,Inst9 SDD does not show or describe “pausing Inst9 operations when a joint temperature exceeds a specified threshold and resuming when the motor cools down below a specified threshold.” Inst9 Level 5 Requirement 45 states “The RAFSW shall protect the Inst9 from motor over-heating by monitoring the joint temperatures and pausing Inst9 operations when a joint temperature exceeds a specified threshold and resuming when the motor cools down below a specified threshold.”,4/27/06ProjectE - TIM - 1683,Inst9 Level 5 Requirement 29 does not trace to the Inst9 SDD,3,"No hard-coded limits, consistent with Inst9 Level 5 Requirement 29, are specified or identified in Inst9 SDD. Inst9 Level 5 Requirement 29 states “The RAFSW shall implement hard-coded lower limits on path generation parameters under which the parameters cannot be set.”",4/27/06ProjectE - TIM - 1682,Inst9 Level 5 Requirement 28 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 28 states “The RAFSW shall implement PID control of the Inst9 joints.”,4/27/06ProjectE - TIM - 1681,Inst9 Level 5 Requirement 23 does not trace to the Inst9 SDD,3,"Inst9 Level 5 Requirement 23 states “The RAFSW shall derive and implement the inverse kinematics of the Inst9 using closed-form solutions based on Denavit-Hartenberg conventions. “ Appendix D. Data Structures of Inst9 SDD has change comments/notes regarding forward/inverse kinematics, but has no record of descriptions consistent with the requirement 23.",4/27/06ProjectE - TIM - 1680,Inst9 Level 5 Requirement 22 does not trace to the Inst9 SDD,3,"Inst9 Level 5 Requirement 22 is not addressed by the Inst9 SDD. Requirement 22 states “The RAFSW shall derive and implement the forward kinematics of the Inst9 using homogeneous coordinates and homogeneous transformations from the Inst9 base frame to the tool frame based on Denavit-Hartenberg conventions.” Appendix D. Data Structures of Inst9 SDD has change comments/notes regarding forward/inverse kinematics, but has no record of descriptions consistent with the requirement 22.",4/27/06ProjectE - TIM - 1679,Inst9 Level 5 Requirement 20 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 20 is not addressed in the Inst9 SDD. Requirement 20 states “The RAFSW shall support the capability of positioning the end-effector tools with a repeatability of 1.5 cm in the surface workspace and 0.5 cm in the deck workspace.”,4/27/06ProjectE - TIM - 1678,Inst9 Level 5 Requirement 19 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 19 is not addressed in the Inst9 SDD. Requirement 19 states “The RAFSW shall support the capability to position the end-effector tools to an absolute accuracy of 3 cm in free space within the dexterous workspace of the Inst9.”,4/27/06ProjectE - TIM - 1677,Inst9 Level 5 Requirement 15 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 15 is not addressed in the Inst9 SDD. Requirement 15 states “The RAFSW shall support the ability to retain position knowledge across planned power cycles.”,4/27/06ProjectE - TIM - 1675,Inst9 Level 5 Requirement 13 does not trace to the Inst9 SDD,3,The command overrun state is not explicitly or specifically addressed in Inst9 SDD. Inst9 Level 5 Requirement 13 states “The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command. This is defined as a command overrun state. If this occurs the RAE will be shutdown if it is powered.” Section 2.3 Motion Control of RD SDD states “Collision-free command sequences will be verified on the ground prior to uploading to the Lander.”,4/27/06ProjectE - TIM - 1674,Inst9 Level 5 Requirement 9 does not trace to the Inst9 SDD,3,No design descriptions in the Inst9 SDD specify verifying “the size of the message received from the low-speed PACI serial interface.” Inst9 Level 5 Requirement 9 states “The RAFSW shall verify the size of the message received from the low-speed PACI serial interface.”,4/27/06ProjectE - TIM - 1673,Inst9 Level 5 Requirement 7 is not fully traceable in Inst9 SDD,3,"Inst9 Level 5 Requirement 7 specifies “The RAFSW shall produce EVRs in response to the following anomalous conditions: a) Errors in opening, reading and writing Inst9 files (status, history, parameter) b) EPS power-errors c) Initialization errors d) Unrecognized messages e) Command queue overrun.” No EVR handling for the “b) EPS power-errors,” “d) Unrecognized messages,” or “e) Command queue overrun” is included in the Inst9 SDD. Also, it is not clear if the RAFSW handles/processes “EPS power-errors” in accordance with Section 3.2.1.4 Fault Protection (FP) of Artifact 11) Inst9/Inst8 S/C ICD. Section 3.2.1.4 Fault Protection (FP) of Artifact 11) Inst9/Inst8 S/C ICD states “The Inst9 will receive no warning before losing power if either the spacecraft power bus or any of Inst9 load switches fails open or the spacecraft health is in jeopardy. Inst9 electronics shall be designed such that Spacecraft faults, which produce unplanned, unexpected interruptions in Inst9 power, will produce no damage to Inst9 components.”",4/27/06ProjectE - TIM - 1672,Inst9 SDD Robotic Arm Fault Protection Table Contains Redundant “Power Off” Steps,3,"Inst9 SDD Table 7 Robotic Arm Fault Protection for Fault “file I/O” of Task ra_initialize specifies “power off” in both “Fault Expansion” and “After n Interruptions” steps. It is not clear what effects, if any, the second “power off” will have, especially in the fault recovery and status.",4/27/06ProjectE - TIM - 1671,Inst9 SDD Figure 2. ProjectE Inst9 Level 0 Data Flow (Context) Diagram is Incorrect.,4,"In Section 3.2 Data and Control Flow, it is stated for RAFSW that “Successful completion of the task or fault information is communicated to external entities by setting the Inst9 global sequence or fault variables and sending engineering data to channelized telemetry.” Figure 2 ProjectE Inst9 Level 0 Data Flow (Context) Diagram, however, shows no external entity of Inst9 global sequence variable.",4/27/06ProjectE - TIM - 1670,Inst9 SDD Figure 1. ProjectE Robotic Arm State Transition Diagram is Incomplete/Unclear.,4,"Inst9 SDD Figure 1 ProjectE Robotic Arm State Transition Diagram denotes “TaskSpawn (Inst9_Manger), InvokeInitializeManager” for the Initializing state, but Inst9_Actuator task initializing is missing or not reflected in the Diagram. Inst9 SDD Section 4.0 Program Structure states that “All tasks are spawned by the Lander software.”",4/27/06ProjectE - TIM - 1669,Inst9 SDD on Non-Move is Unclear,4,"Inst9 Actuator Task, on receipt of a non-move command, in Inst9 SDD Section 4.2 Actuator Task, is to “Set data in history and/or send command to the PACI.” This is inconsistent with the data flow of Figure 4 Control Arm Data Flow Diagram. Figure 4 Control Arm Data Flow Diagram does not reflect the “Set data in history” for the non-move command.",4/27/06ProjectE - TIM - 1668,Inst9 SDD on Shutdown is Unclear,4,"Inst9 Actuator Task (Section 4.2 Actuator Task), on receipt of a shutdown command, does not “write arm status to file.” This is inconsistent with other specifications of the Inst9 SDD. Figure 4 Control Arm Data Flow Diagram does not properly reflect the Shutdown flow, either. In addition, “Send shutdown command to Inst9_Actuator” in the Process of Section 4.2 Actuator Task is a documentation error. • Section 3.1 Behavioral Model states “If a shutdown command is received from the VM, the shutdown process will be initiated which stops the arm and writes arm status to the RAM file system for storage in Nonvolatile Memory.” • The Process of Section 4.1 Manager Task specifies “On receipt of a shutdown command Send shutdown command to Inst9_Actuator Request power off from EPS.” • The Process of Section 4.2 Actuator Task specifies “On receipt of a shutdown command Stop arm Send shutdown command to Inst9_Actuator.” • In Table 3. ProjectE Robotic Arm Non-move Commands, the Description of Ra_shutdown is to “Stop current command. Write arm status to file.”",4/27/06ProjectE - TIM - 1667,Inst9 Actuator Task Loop Time Is Unclear,4,"The Process of (Section 4.2 of Inst9 SDD) Actuator Task, under Initialize, specifies “Set loop time to nominal.” No description of “nominal” is provided in the rest of the Inst9 SDD.",4/27/06ProjectE - TIM - 1666,Inst9 SDD Actuator Task is Unclear,4,The Process of Section 4.2 Actuator Task specifies the following: “Read actuator queue On receipt of a task done message Write data to arm status file…” This is inconsistent with the data flow of Figure 4 Control Arm Data Flow Diagram. The arm status file writing is shown triggered from process “Monitor Sensors.”,4/27/06ProjectE - TIM - 1665,Inst9 SDD is not Clear about Inst9_ManagerQueue,4,"Inst9 _ManagerQueue is depicted in Figure 3 ProjectE Inst9 Level 1 Data Flow Diagram as part of RAFSW and not as an external entity. This is consistent with Figure 2 ProjectE Inst9 Level 0 Data Flow Diagram. Inst9 SDD Figure 4 Control Arm Data Flow Diagram deviates from Figures 2 and 3. The Inst9_ManagerQueue is not displayed in Figure 4, thus implied or denoted as an external entity to RAFSW.",4/27/06ProjectE - TIM - 1664,Inst9 SDD Section 3.5 Model-based Collision Checking is Missing or Empty,3,"No contents or descriptions, other than Section header/name, are given for this Section.",4/27/06ProjectE - TIM - 1663,Inst9 SDD Section 2.1.3 is Inconsistent in Stating Three Non-Channelized Telemetry Items.,4,"Inst9 SDD Section 2.1.3 Telemetry states, for RAFSW, “Three items will be sent via non-channelized telemetry.” This section, however, lists the following five items. 1. Science data which consists of detailed arm state information which can be used for engineering analysis of arm performance and scientific analysis of soil properties. The frequency of data collection is specified by the operator. 2. Arm status which contains the current arm state data. 3. Arm history (the last 300 arm status data points) in the event of a fault. 4. The parameter file which contains the current parameter data. 5. The collision avoidance data base.",4/27/06ProjectE - TIM - 1662,Inconsistent/extra Pyro 2 Discrete Output (FSW Build 3),3,The file iocPyroDiscrete.h provides the definitions for the Pyro 2 Discrete Outputs (lines 129-162). The #define Inst9_BB_OPEN_S (line 157) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.8 Pyro Discrete Outputs TABLE 1. 5.4.7-2 Pyro 2 Discrete Outputs,4/3/06ProjectE - TIM - 1661,Inconsistent/extra Pyro 1 Discrete Output (FSW Build 3),3,The file iocPyroDiscrete.h provides the definitions for the Pyro 1 Discrete Outputs (lines 71-86). The #define Inst9_BB_OPEN_P (line 63) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.8 Pyro Discrete Outputs TABLE 1. 5.4.8-1 Pyro 1 Discrete Outputs,4/3/06ProjectE - TIM - 1660,Inconsistent/extra Power Distribution Card Discrete Outputs (FSW Build 3),3,The file iocPdcDiscrete.h provides the definitions for the Power Distribution Card Discrete Outputs (lines 54-119). There are three #defines not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. The #defines are listed below: IMPLEMENTATION 1. #define PIA_PLATE_HTRS_SEC (line 83) 2. #define SDST_HTRS (line 87) 3. #define SSPA_HTRS (line 101) ICD Section 1. 5.4.6 Power Distribution Card Discrete Outputs TABLE 1. 5.4.6-1 Power Distribution Card Discrete Outputs,4/3/06ProjectE - TIM - 1659,Missing/Inconsistent Dual Slave Discrete Outputs (FSW Build 3),3,The file iocDualSlaveDiscrete.h provides the definitions for the Dual Slave Node Discrete Outputs (lines 57-92). There are six definitions found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005) but not found in the implementation. It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.4 Dual Slave Node Discrete Outputs TABLE 1. 5.4.4-1 MFB Dual Slave Node Discrete Outputs DEFINITIONS: Missing in Implementation 1. CCU2A Disable 2. CCU1B Enable 3. CCU2A Enable 4. CCU1A Disable 5. CCU2B Enable 6. CCU1B Disable,4/3/06ProjectE - TIM - 1658,Inconsistent/extra PACI 2 Discrete Outputs (FSW Build 3),3,The file paciAllDiscreteMap.h provides the definitions for the PACI 2 Discrete Outputs (lines 124-139). There are two #defines not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. These #defines are listed below: IMPLEMENTATION 1. #define CCU2B_ENABLE (line 124) 2. #define CCU1A_DISABLE (line 125) ICD Section 1. 5.4.1 PACI Discrete Outputs TABLE 1. 5.4.1-2 PACI 2 Discrete Outputs,4/3/06ProjectE - TIM - 1657,Missing/Inconsistent PACI 1 Discrete Outputs (FSW Build 3),3,The file paciAllDiscreteMap.h provides the definitions for the PACI 1 Discrete Outputs (lines 104-119). The definitions are not consistent with those found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.1 PACI Discrete Outputs TABLE 1. 5.4.1-1 PACI 1 Discrete Outputs The following outputs are found in the implementation and not the ICD: 1. SIM_TIME_SYNC (line 114) 2. CCU1B_ENABLE (line 117 3. CCU2A_DISABLE (line 118) The following outputs is found in the ICD and not the implementation: 1. Inst10_PT_PWR_Toggle,4/3/06ProjectE - TIM - 1656,Inconsistent/extra Pyro 2 Discrete Input (FSW Build 3),3,"The file iocPyroDiscrete.h provides the definitions for the Pyro 2 Discrete Inputs (lines 166-198). The #define Inst9_BB_OPEN_S_STATUS (line 193) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.3.7 Pyro Discrete Inputs TABLE 1. 5.3.7-2 Pyro 2 Discrete Inputs, Drive Indicates",4/3/06ProjectE - TIM - 1655,Inconsistent/extra Pyro 1 Discrete Inputs (FSW Build 3),3,"The file iocPyroDiscrete.h provides the definitions for the Pyro 1 Discrete Inputs (lines 90-122). There are two #defines not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). These #defines are listed below and it is not clear if the code needs to be updated or the ICD needs to be updated: IMPLEMENTATION 1. #define Inst9_BB_OPEN_P_STATUS (line 100) 2. #define BS_LANDER_SEP_2S_1S_STATUS (line 112) ICD Section 1. 5.3.7 Pyro Discrete Inputs TABLE 1. 5.3.7-1 Pyro 1 Discrete Inputs, Drive Indicates (PIM #1)",4/3/06ProjectE - TIM - 1654,Inconsistent/extra Power Distribution Card Discrete Input (FSW Build 3),3,The file iocPdcDiscrete.h provides the definitions for the Power Distribution Card Discrete Inputs (lines 135-180). The #define SSPA_HTRS_STATUS (line 166) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). ICD Section 1. 5.3.5 Power Distribution Discrete Inputs Table 1. 5.3.5-1 Power Distribution Discrete Inputs It is not clear if the code needs to be updated or the ICD needs to be updated. IV&V does note that the 45 discrete inputs found in the aforementioned table do map to the #defines listed on lines 135-180.,4/3/06ProjectE - TIM - 1653,Missing/Inconsistent Dual Slave Analog Input (FSW Build 3),3,"The file cio_special.c implements a variable, virtual_ioc_analog_ids, that is initialized to 80 I/O Analog Ids (line 62). One Id is not consistent with the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). The tables for the I/O Analog Inputs are found in the following sections of the ICD: 1. 5.1.2 Master I/O Slave Node Analog Inputs 2. 5.1.3 Dual Slave Node Analog Inputs The table names and numbers are listed below: 1. Table 5.1.2-1 Master I/O Slave Node Analog Inputs 2. Table 5.1.3-1 Dual Slave Node Analog Inputs The following Id is found in Table 5.1.3-1 (Dual Slave Node Analog Inputs) and not in the implementation. It is not clear if the code needs to be updated or the ICD needs to be updated. 1. PDDU_DC_DC_CONVERTER_TEMP",4/3/06ProjectE - TIM - 1652,Missing/Inconsistent PACI Analog Inputs (FSW Build 3),3,"The file cio_special.c, implements a variable, virtual_paci_analog_ids, that is initialized to 99 PACI Analog Ids (line 147). These Ids are not consistent with the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). The table for the PACI Analog Inputs is found in the following section of the ICD: 5.1.1 PACI Analog Inputs. The table names and numbers are listed below: 1. Table 5.1.1-1 PACI 1 Analog Inputs 2. Table 5.1.1-2 PACI 2 Analog Inputs The following Ids are found in the implementation and not the ICD: 1. SUN_SENSORS_CIO_ID, 2. STAR_TRACKER_A_TEMP_1_CIO_ID, 3. STAR_TRACKER_B_TEMP_2_CIO_ID, 4. RADAR_MUX_2_TEMP_2_CIO_ID, 5. RADAR_MUX_1_TEMP_2_CIO_ID, 6. STAR_TRACKER_A_TEMP_2_CIO_ID, 7. STAR_TRACKER_B_TEMP_1_CIO_ID The following Ids are found in the ICD and not the implementation: 1. STAR_TRACKER_BRACKET_TEMP_1 2. STAR_TRACKER_BRACKET_TEMP_2 3. CDH_DC_DC_CONVERTER_TEMP 4. LVA_Temp_1 5. LVA_Temp_2 It is not clear if the code needs to be updated or the ICD needs to be updated. It is also not clear if the ordering of the Ids in the array need to be consistent with the ICD.",4/3/06ProjectE - TIM - 1651,Inconsistent Dual Slave Discrete Address Mapping (FSW Build 3),3,"In file, iocNodeDualSlave.c, the Dual Slave Node MFB Discrete Address Map is defined starting on line 61 and ending on line 75. The definition of this address mapping is not consistent with the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). The inconsistencies are in the table that is presented in Section: 4.4.1 Dual Slave Discretes and is titled, Table 4.4.1-1 Dual Slave Node MFB Discrete Address Map. The specific address mapping that appears to be missing from the code is listed below: 11 (local address) Clear discrete outputs16[lsb] - 31[msb] 13 (local address) Clear discrete outputs32[lsb] - 47[msb] 30 (local address) Set discrete outputs 0[lsb] - 15[msb] 31 (local address) Set discrete outputs 16[lsb] - 31[msb] 33 (local address) Set discrete outputs 32[lsb] - 47[msb] It is not clear if the code needs to be updated or the ICD needs to be updated.",4/3/06ProjectE - TIM - 1650,Global variable uninitialized in Build 3 FSW,4,"The global variable, 'prop_bad_read_count', declared at line 31 in propTask.c is used and never set in this file. It is not clear if the desired implementation is to allow the compiler to set the initial value. The variable is used (incremented) on line 396.",3/25/06ProjectE - TIM - 1649,Extern global struct declared twice in Build 3 FSW,4,Structure is declared twice in the file: eps_emic_relay.c Line 78 extern eps_emic_sw_t eps_emic_sw[]; Line 213 extern eps_emic_sw_t eps_emic_sw[];,3/25/06ProjectE - TIM - 1648,Incorrect function return in Build 3 FSW,3,"The function iocGetErrorCount in file iocNodeAnalog.c has a return type of unsigned long. On line 80, the function returns ERROR and ERROR is defined as -1. The code segment is listed below. 1. Lines 68 - 81 uint32_t iocGetErrorCount (iocError_t errorId) /*---------- End Prototype -----------*/ { errno = 0; /*++++++++++ ** if invalid error ID code ** return error **----------*/ if ( (unsigned int)errorId >= IOC_NUM_ERROR_COUNTS ) { errno = EIOC_ANALOG_INVAL2; return (ERROR); }",3/25/06ProjectE - TIM - 1647,Variable (l_id) assignment results in underflow in Build 3 FSW,4,"In the file thmThermostat.c, the variable, l_id, is defined on line 1140 as an unsigned char (thrm_fsw_obj_id_t). On line 1146 in the function thmThermostat_Select_Set_Point, this variable is set to ERROR and ERROR is defined as -1. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segment is listed below. 1. Lines 1140 - 1146 thrm_fsw_obj_id_t l_id; uint8_t *l_cmdParms; bool_t l_cmd_inst_was_valid; l_cmdParms = ((thmMsgUnion_p)setMsg)->cmdMsg.cmdParms; l_cmd_inst_was_valid = FALSE; l_id = ERROR;",3/25/06ProjectE - TIM - 1646,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_memory_access.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 566 in function memory_load, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 445, 524, or 541 evaluate to true. The execution of either of these conditional statements allows status to be set to ERROR and ERROR is defined as -1. The variable, status, can then be assigned to fm_echo.success_flag on line 566. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 445 if (sourceFileFd == ERROR) { ... status = ERROR; } 2. Starting at Line 524 default: { ... status = ERROR; 3. Starting at Line 541 if (blkSize == ERROR) { ... status = ERROR; } 4. Line 566 fm_echo.success_flag = status;",3/25/06ProjectE - TIM - 1645,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 828 in function file_copy_to_EEPROM, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 744, 759 or 802 evaluate to true. The execution of either of these conditional statements allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 828 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 744 if (sourceFileFd == ERROR) { ... returnStatus = ERROR; } 2. Starting at Line 759 if ((eepStartAddress & FOUR_BYTE_ALIGNED) != 0) { ... returnStatus = ERROR; } 3. Starting at Line 802 if (blkSize == ERROR) { ... returnStatus = ERROR; } 4. Line 828 fm_echo.success_flag = returnStatus;",3/25/06ProjectE - TIM - 1644,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 702 in function file_copy_all, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 674 or 685 evaluate to true. The execution of either of these conditional statements allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 702 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 674 else { ... returnStatus = ERROR; 2. Starting at Line 685 else { ... returnStatus = ERROR; } 3. Line 702 fm_echo.success_flag = returnStatus;",3/25/06ProjectE - TIM - 1643,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 580 in function file_copy, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 544 or 562 evaluate to true. The execution of either of these conditional statements allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 580 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 544 if ((stat(name2, &dFileStat) == OK) && (S_ISDIR(dFileStat.st_mode))) { ... returnStatus = ERROR; } 2. Starting at Line 562 else { ... returnStatus = ERROR; } 3. Line 580 fm_echo.success_flag = returnStatus;",3/25/06ProjectE - TIM - 1642,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 478 in function file_append, the variable can be assigned a value of -1. This occurrence will happen when the conditional statement on line 400 evaluates to true. The execution of this conditional statement allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 478 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 400 if (sourceFd == ERROR) { ... returnStatus = ERROR; } 2. Line 478 fm_echo.success_flag = returnStatus;",3/25/06ProjectE - TIM - 1641,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 108 in function cmic_ramset the variable can be assigned a value of -1. This occurrence will happen when the conditional statement on line 75 evaluates to true. The execution of this conditional statement allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 108. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 75 if (start_address > end_address) { ... returnStatus = ERROR; } 2. Line 108 fm_echo.success_flag = returnStatus;",3/25/06ProjectE - TIM - 1640,Variable (UplFileStat.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file upl_package.c, the variable, UplFileStat.success_flag, is defined as an unsigned char. On line 949 in function upl_package_dwnlink_file_upload_status the variable is assigned a value of -1. This occurrence will happen when this function is called from upl_package_var_add on line 528 of this file. In this particular call, the parameter being passed is ERROR and ERROR is defined as -1. This value is then assigned to the unsigned char, UplFileStat.success_flag, on line 949. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Calling function: upl_package_var_add (line 528) upl_package_dwnlink_file_upload_status(ERROR); 2. Function upl_package_dwnlink_file_upload_status (line 941 an 949) void upl_package_dwnlink_file_upload_status(int8_t success_flag) { ... UplFileStat.success_flag = success_flag;",3/25/06ProjectE - TIM - 1639,Variable (ParallelIsBusy) assignment results in underflow in Build 3 FSW,3,"In the file paciDrv.c, the variable, ParallelIsBusy, is defined on line 172 as an unsigned short. There are two instances where this variable is assigned a value of -1. The most likely scenario is the compiler will roll this value over to 65535. It is not clear if this is the desired implementation. The code segment along with function and line number are listed below. 1. Function paciReadParallel, line 1557: paciBoardData[SerInfo->Board].ParallelIsBusy = -1; 2. Function paciIoctlEnableRcv, line 3930: paciBoardData[SerInfo->Board].ParallelIsBusy = -1;",3/25/06ProjectE - TIM - 1638,Accessing array outside of its allocated memory in Build 3 FSW,3,"In function cmd_is_restricted, found in cmd.c there is an array that is accessed one over its bounds in order to terminate a while loop. The code segment is listed below. Implementation (starting on line 895): while (CmdRestrictedBuffer[i].Opcode != 0 && i <= MAX_NUMBER_OF_RESTRICTIONS) In the above segment, CmdRestrictedBuffer is of size 400 and MAX_NUMBER_OF_RESTRICTIONS is of size 400. The variable, i, is incremented each time through the while loop.",3/25/06ProjectE - TIM - 1637,Possible incorrect implementation of logical statement in Build 3 FSW,4,"In function eps_rpc_sw_validate, found in file eps_rpc_sw.c there is a conditional statement that is not consistent with the associated comment. The comment suggest that the conditional statement be evaluated when two variables are equal. However, the implementation shows that the conditional statement is evaluated when the variables are not equal. The implementation is shown below. Implementation (starting on line 733): /*+++++ * If the state read from the status discrete is the same as the desired -----*/ if (l_rpc_sw_state != l_rpc->desired_state) {",3/25/06ProjectE - TIM - 1636,Possible incorrect implementation of logical statement in Build 3 FSW,4,"In function eps_rpc_sw_validate, found in file eps_rpc_sw.c there is a conditional statement that is not consistent with the associated comment. The comment suggest that the conditional statement be evaluated when the variable has been marked Failed. However, the implementation shows that the conditional statement is evaluated when the variable has not been marked Failed. The implementation is shown below. Implementation (starting on line 724): * IF RPC switch has been marked Failed. -----*/ if (l_rpc->cond != Failed) {",3/25/06ProjectE - TIM - 1635,Possible incorrect variable assignment in Build 3 FSW,3,"In function ssaValidate, found in file sun_sensor.c there is a variable assignment that is not consistent with the associated comment. On line 569, the comment in the code states: ** If error's present, call FPU_Counter_Error. ** If response is enabled, set *InError FALSE. However, the implementation does not set *InError to FALSE but assigns a value of TRUE. It is not clear if the current implementation is correct or the comment is incorrect. The implementation is shown below. Implementation (starting on line 576): FPU_Counter_Error(&ssaFpSaneCnt[ii]); /* Record error */ if (mask) { *InError = TRUE; /* no data valid */",3/25/06ProjectE - TIM - 1634,Possible missing bit shift in Build 3 FSW,3,"In function edl_radar_cmd_dop_ant, found in file edl_radar.c there appears to be a missing bit shift. On line 883, the comment in the code states: ** If the input is between 0 and 4, clear ** the cmd bits, shift the input, OR it in, and return OK. ** If the input is bad, return ERROR. However, the implementation does not have the shift but does include the clear, OR and return. It is not clear if the current implementation is correct or the comment is incorrect. The implementation is shown below. Implementation: if(parm < EDL_RADAR_ANTENNAS) { edl_radar_next_sa16_dw0 &= ~EDL_RADAR_DOP_ANT_MASK; /*clear bits*/ edl_radar_next_sa16_dw0 |= parm; ret = OK; }",3/25/06ProjectE - TIM - 1633,"Inst4 Test Cases 1.41.4, 1.41.5, and 1.41.6 Contain Possible Errors",3,"There is an error in the specifications of test case 1.41.4 with the Purpose “…eps_id being EPC_COMP_ID_Inst4_MAIN sets the pdModel value to max,” Description “…Inst4_iPowerState being invalid,” and Verification “…sets pdModel with the appropriate value.” It is not obvious or clear from the Inst4 Subsystem Unit Test Descriptions and Inst4 SDD that the test case, setting the pdModel value to max with an invalid Inst4_iPowerState is appropriate or normal. The same applies to 1.41.5 for eps_id being EPC_COMP_ID_Inst4_EGA, and 1.41.6 for eps_id being EPC_COMP_ID_Inst4_REPLACEMENT_HTR. Back-up information for this issue is as follows: Inst4 SDD states “The Inst4_SetPowerState function is used to set the power state bits in Inst4_iPowerState for the individual EPS components. These states represent different power usage modes of the Inst4 instrument, and thus are critical for the Inst4_ReportModelCallback function (Section 5.4.7). The inputs to this function are the EPS_ID and power state to set. The return from this function is either an OK or an ERROR.” Section 5.4.7 of Inst4 SDD states “The Inst4_ReportModelCallback function is used by the EPS to report power usages for the Inst4 switches. The inputs to this function is the EPS id of the switch desired, the actual voltage of the switches bus in volts, and a pointer to the power usage model output, in Watts, for the given switch. The Inst4_ReportModelCallback function obtains the state for the EPS_ID and returns the power usage model from the table read from the configuration file based on the ID and state. If the state value exceeds the maximum value for the ID, the maximum value is used. In the case of the EPS_COMP_ID_Inst4_MAIN, the Inst4_powerCfg.dMain_Watts model table is used. In the case of the EPS_COMP_ID_Inst4_EGA, the Inst4_powerCfg.dEga_Watts model table is used. In the case of the EPS_COMP_ID_Inst4_REPLACMENT_HTR, the the Inst4_powerCfg.dHtr_Watts model table is used. If the EPS_ID is not recognized, then an error is reported.”",3/21/06ProjectE - TIM - 1632,Inst4 Requirement 5061 is Inconsistent in Inst4 FSW Requirements Verification Matrix,3,"In Inst4 FSW Requirements Verification Matrix, Inst4 SRS 5061 is listed as ""The TEFSW shall provide a callback to the Contractor3 for power consumption data.” In Inst4 SRS, requirement 5061, however, is specified as ""The TEFSW shall provide a callback to the C&DH for power consumption data.” It is not clear if the callback is to “Contractor3” or “C&DH.""",3/21/06ProjectE - TIM - 1631,Inst4 SRS Requirement 5081-1 is Not Being Verified by Inst4 Test Case 2.12.5,3,"Inst4 Test Case 2.12.5 is stated to cover requirements 5068e and 5081 in the Inst4 Subsystem Unit Test Descriptions, but traced to requirements 5081 and 5081-1 in the Inst4 FSW Requirements Verification Matrix. No test cases in the Inst4 Subsystem Unit Test Descriptions are defined to cover Inst4 SRS requirement 5081-1 verification. Inst4 requirement 5081-1: “TEFSW shall notify 386 of impending power down.”",3/21/06ProjectE - TIM - 1630,Inst4 Test Case 1.1.7 Contains Possible Error,3,"Inst4 Test Case 1.1.7 is specified with “Purpose: Verify that the Inst4_Init function takes the appropriate action when PACIWRITE returns with an error,” but with “Description: Have PACIWRITE return 0.” It is not clear if “PACIWRITE returns with an error” equates with “PACIWRITE return 0.”",3/21/06ProjectE - TIM - 1629,"Data Name “svg” is Inconsistently Defined in Inst4 test cases 1.16.1, 1.16.2, 1.16.3 , 1.16.4, and 1.16.5",4,"Inst4 test cases 1.16.1, 1.16.2, 1.16.3 , 1.16.4, and 1.16.5 are specified with “Purpose: Verify that the function Inst4_HandleSetGlobal handles receiving a sgv data set...,” but with “Description: While the Inst4_Tlm_Task is running send an svg data set to set…global variable.” It is not clear if the “svg” may have been mistyped, or that both “sgv” and “sgv” data sets exist for different uses.",3/21/06ProjectE - TIM - 1628,Inst4 Requirement 5068 is not Being Verified by Tests,3,"The following Inst4 test cases are traced to requirement 5068 but the do not verify it: Inst4 1.31.1 Test Case: [TC_READ_RESULT001], Inst4 1.31.2 Test Case: [TC_READ_RESULT002], Inst4 1.31.3 Test Case: [TC_READ_RESULT003], Inst4 1.31.4 Test Case: [TC_READ_RESULT004], Inst4 1.31.5 Test Case: [TC_READ_RESULT005], Inst4 1.31.6 Test Case: [TC_READ_RESULT006], Inst4 1.34.3 Test Case: [TC_WRITE_SERIAL003], Inst4 1.34.4 Test Case: [TC_WRITE_SERIAL004], Inst4 1.34.5 Test Case: [TC_WRITE_SERIAL005], Inst4 1.34.6 Test Case: [TC_WRITE_SERIAL006], Inst4 1.35.1 Test Case: [TC_DO_PWR_FP001], Inst4 1.60.1 Test Case: [TC_COND_GET001], Inst4 1.61.1 Test Case: [TC_COND_SET001], and Inst4 1.63.1 Test Case: [TC_ON_SET_FP001] Inst4 SRS 5068 states “The TEFSW shall handle the following sequence level messages: a) Inst4_PASS_THRU b) Inst4_FILE_LOAD c) Inst4_MAIN1_POWER d) Inst4_MAIN2_POWER e) Inst4_REPLACEMENT_HEATER_POWER (may be going away) f) Inst4_BOOT_SELECT g) Inst4_APID_SELECT (currently listed as APID_SWITCH).”",3/21/06ProjectE - TIM - 1627,Verification of Inst4 SRS Requirement 5067 by Inst4 test cases 1.58.2 and 1.59.2 is Unclear,4,"1.58.2 tests if Inst4_DelayCommand correctly reports an EVR for delayed command list full, and 1.59.2 for if Inst4_OnSendDelayedCommands handles an error from Inst4_WriteSerial. It is not clear if they verify Inst4 SRS 5067, as documented in both Inst4 Subsystem Unit Test Descriptions and Inst4 FSW Requirements Verification Matrix. Inst4 SRS 5067 states “System Message handling The TEFSW shall handle the following system level messages: a) SYS_INIT b) SYS_PING c) SYS_FP_ENAB d) EPSO_COMP_STATE e) Inst4_RESET f) Inst4_SAFING g) Inst4_POWER_DOWN.”",3/21/06ProjectE - TIM - 1626,Inst4 FSW Requirements Verification Matrix contains errors,4,"The following errors exist in the Inst4 FSW verification matrix: Inst4 1.13.1 Test Case: [TC_DATA_READY001] is stated to cover SRS requirement 5002-1 in Inst4 Subsystem Unit Test Descriptions, but incorrectly listed as tracing to SRS requirement 5001-2 Inst4 2.3.2 Test Case: [TC_SR5003.2] is stated to cover only SRS requirement 5003-1.1 in Inst4 Subsystem Unit Test Descriptions. Inst4 2.3.2 Test Case: [TC_SR5003.2], however, is also listed as one of the Inst4 test cases tracing to SRS requirement 5003-1 Inst4 1.20.1 Test Case: [TC_INIT_HEART001] is stated to cover requirement 5050-1 in Inst4 Subsystem Unit Test Descriptions, but not included for SRS requirement 5050-1 Inst4 1.20.2 Test Case: [TC_INIT_HEART002] is stated to cover SRS requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions. Inst4 FSW Requirements Verification Matrix, however, also lists Inst4 1.20.2 Test Case: [TC_INIT_HEART002] as one of the Inst4 test cases tracing to SRS requirement 5050-1 Inst4 1.21.3 Test Case: [TC_ON_HEART003] is stated to cover requirement 5050-1 in Inst4 Subsystem Unit Test Descriptions, but not included for SRS requirement 5050-1 Inst4 1.22.1 Test Case: [TC_ON_HEART_START001] and 1.23.1 Test Case: [TC_ON_HEART_STOP001] are stated to cover requirement 5050-1 in Inst4 Subsystem Unit Test Descriptions, but listed for SRS requirement 5050-1.1 Inst4 1.8.4 Test Case: [TC_ON_FILE_PIECE004] is stated to cover requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions, but listed only for the requirement 5060 Inst4 1.44.2 Test Case: [TC_INIT_DISCRETE002] is stated to cover requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirements 5061 and 5062 Inst4 1.60.2 Test Case: [TC_COND_GET002] is stated to cover requirement 5060 in Inst4 Subsystem Unit Test Descriptions, but listed for requirement 5062 Inst4 1.8.2 Test Case: [TC_ON_FILE_PIECE002] is stated to cover requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions, but listed only for SRS requirement 5060 Inst4 1.6.10 Test Case: [TC_HANDLE_CMD010] is stated to cover requirement 5066-1 in Inst4 Subsystem Unit Test Descriptions, but listed for SRS requirement 5066 Inst4 2.12.5 Test Case: [TC_SR5068e] is stated to cover requirements 5068e and 5081 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirement 5081 and 5081-1 Inst4 2.14.1 Test Case: [TC_SR5082] is stated to cover requirement 5082 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirement 5082 and 5082-1 Inst4 2.15.1 Test Case: [TC_SR5083.1], 2.15.2 Test Case: [TC_SR5083.2], and 2.15.3 Test Case: [TC_SR5083.3] are stated to cover requirements 5083.1, 5083.2, and 5083.3 respectively in Inst4 Subsystem Unit Test Descriptions, but listed as tracing to requirements 5083, 5083-1, 5083-2, and 5083-3 Inst4 test case 2.12.5 [TC_SR5068e] is redundantly listed for the Inst4 SRS 5068 trace in Inst4 FSW Requirements Verification Matrix Inst4 2.13.1 Test Case: [TC_SR5081.2] is stated to cover requirement 5081.2 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirement 5081 and 5081-2 traces in Inst4 FSW Requirements Verification Matrix.",3/20/06ProjectE - TIM - 1625,Inst4 Requirement 5060 is Not Fully Verified by test,3,"Many Inst4 test cases collectively, as listed below, are specified to verify requirement 5060. It is unclear if all specific, representative cases of EVRs handled by TEFSW are covered for the 5060 verification. Additional artifact or documentation is needed for the verification. TC_HANDLE_CMD009, TC_ON_FILE_PIECE002, TC_ON_FILE_PIECE003, TC_HNDL_TLM006, TC_ON_PROC_DATA011, TC_SET_GLOBAL005, TC_TYPE_APID002, TC_DOWNLINK002, TC_INIT_HEART002, TC_ON_HEART_START002, TC_ON_HEART_STOP002, TC_CALC_CHECK002, TC_COPY_CFG002, TC_READ_CFG004, TC_READ_SERIAL002, TC_READ_SERIAL003, TC_ON_HANDSHAKE002, TC_WRITE_SERIAL002, TC_WRITE_SERIAL007, TC_HANDLE_PWR_MSGS006, TC_INIT_PWR002, TC_ON_EPS_COMP004, TC_ON_EPS_COMP011, TC_ON_EPS_COMP012, TC_ON_PWR_NOTE002, TC_RPRT_MDL_CALL007, TC_HANDLE_DISCRETE008, TC_SET_BOOT_SEL002, TC_ON_RESET003, TC_ON_RESET004, TC_ON_SYNC_TIME002, TC_ON_START_SYNC002, TC_ON_START_BOOT_SEL002, TC_ON_STOP_RESET002, TC_ON_STOP_SYNC002, TC_INIT_DELAY_CMDS002, TC_RESET_DELAY_CMDS002, TC_DELAY_CMDS_SEC002, TC_DELAY_CMD002, TC_DELAY_CMD003",3/20/06ProjectE - TIM - 1624,"Inst4 Requirements 5050-1.3, 5050-1.4, 5050-2, and 5050-3 are not being verified by tests",3,"Inst4 Requirements 5050-1.3, 5050-1.4, 5050-2, and 5050-3 are not being verified by tests. These requirements are not traced to any tests. The requirements are as follows: 5050-1: “The TEFSW shall monitor the Inst4 heartbeat.” 5050-1.3: “TEFSW shall reset the Inst4 heartbeat counter after a power cycle, instrument reset, or Inst4 heartbeat recovery sequence.” 5050-1.4: “In the case of a failed state, TEFSW shall run a Inst4 heartbeat-failure command sequence no more that 10 commands in length.” 5050-2: “The TEFSW shall be able to reset Inst4 electronics board in case that it has not seen a heartbeat from the Inst4 electronics in a configurable period of time.“ 5050-3: “If the Inst4 heartbeat recovery sequence fails, as measured by a second failed state, the flight software shall downlink a notice the Inst4 was powered off, the time of the last Inst4 heartbeat, the current time, and the Inst4 heartbeat count.“",3/20/06ProjectE - TIM - 1623,Inst4 requirement 5050-1.2 is not being fully verified by Inst4 Test Cases 2.8.2 or 1.21.3,3,"The purpose of Inst4 test case 2.8.2 is to “Verify that the TEFSW declares a failed state when it fails to receive a Inst4 heartbeat,” but this test case does not verify “…when commanded to perform an instrument reset” of the Inst4 requirement 5050-1.2. Neither does Inst4 test case 1.21.3. The purpose of 1.21.3 is to “Verify that the function Inst4_OnHeartCheck handles the case where fault protection is enabled and a heartbeat has not been received properly.” The requirement is as follows: 5050-1.2: “The TEFSW shall define a failed state as when the flight software has failed to receive a Inst4 heartbeat or when commanded to perform an instrument reset.”",3/20/06ProjectE - TIM - 1622,Inst4 Test Case 1.49.1 Contains Possible Error,3,"The “no error on call to msg_ set_timer” in the test case description will not trigger the intended call to Inst4_DelayComamndsForSeconds as specified in the test case purpose. Inst4 test case 1.49.1 Specifies the following: “Purpose: Verify that the function Inst4_OnStartSyncTimer calls msg_set_timer and Inst4_DelayComamndsForSeconds. Description: While the Inst4_Cmd_Task is running call the Inst4_OnStartSyncTimer function, no error on call to msg_ set_timer. Verification: Verify that the function calls to msg_set_timer and Inst4_DelayCommandsForSeconds are made.” According to Inst4 SDD, an error on the timer not correctly started will result in a call to Inst4_DelayCommandsForSeconds. Inst4 SDD, in Section 5.5.9 Inst4_OnStartSyncTimer, states that “Once the time sync is set, the msg_set_timer function is used to start the timer. If the timer is not correctly started, the function generates an error. Passthrough commands are then delayed for a configurable period to allow for instrument recovery with a call to Inst4_DelayCommandsForSeconds.”",3/20/06ProjectE - TIM - 1621,Inst4 test case 1.30.1 does not verify Inst4 requirement 5002-1,3,The purpose of Inst4 test case 1.30.1 is to “Verify that the function reads the PACI (with a positive return) and generates the message.” It is not clear that the test case verifies Inst4 SRS 5002-1. Inst4 requirement 5002-1 states “TEFSW shall calculate and add checksums to certain instrument command.”,3/20/06ProjectE - TIM - 1620,Inst4 test case 1.3.1 contains conflicting instructions,4,"The purpose of Inst4 test case 1.3.1 is to ""Verify that the function Inst4_OpenDevices makes the two calls to PACIOPEN correctly."" The Verification of the test case, however, is to verify that ""the three PACIOPEN calls are properly made.""",3/20/06ProjectE - TIM - 1619,Unused macros in Build 3 FSW,4,"The following macros are unused in the the Build 3 FSW. There is no indication of the status of these variables for the ProjectE FSW. File sam_Backshell_Sep_Monitor.c 1. Macro I_AM_SAM_SAM_I_AM, line 37 2. Macro SAM_BACKSHELL_SEP_MONITOR_I_AM, line 38 File sam_Heatshield_Sep_Monitor.c 1. Macro I_AM_SAM_SAM_I_AM, line 36 2. Macro SAM_HEATSHIED_SEP_MONITOR_I_AM, line 37 File sam_paci.c 1. Macro ACI_I_AM, line 44 File UldlSim.c 1. Macro SIM_SDST_1_STATUS, line 174 2. Macro IM_SDST_2_STATUS, line 175 3. Macro SIM_SDST_SELECT, line 176 File vml_create.c 1. Macro VML_EXCLUSION, line 36 File vml_messages.c 1. Macro DEFAULT_EXIT_ON_FATAL, line 36 File vml_utils.c 1. Macro REMOVE_FILE_SYSTEM_CALL, line 36 2. Macro SUBTICKS_PER_SECOND, line 59",2/23/06ProjectE - TIM - 1618,Unused functions in the Build 3 FSW,4,"The following functions are unused in the the Build 3 FSW. There is no indication of the status of these functions for the ProjectE FSW. File SPM.c Function SPM_registerCheckConditionFunc, line 1549 File IocSim.c Function M1553_Int_Status, line 3606 File vml_constant_table.c Function vml_constant_table_initialize, line 228 File vml_create.c Function vml_create_assignment, line 1451 Function vml_create_branch, line 1494 Function vml_create_call_parameter, line 1539 Function vml_create_check_labels_declared, line 1571 Function vml_create_comparison_variable, line 1605 Function vml_create_declare_variable, line 1645 Function vml_create_delay, line 1745 Function vml_create_else, line 1773 Function vml_create_else_if, line 1808 Function vml_create_end_body, line 1854 Function vml_create_end_if, line 1889 Function vml_create_end_of_line, line 1931 Function vml_create_end_while, line 1960 Function vml_create_file_id, line 1996 Function vml_create_if, line 2037 Function vml_create_if_condition, line 2081 Function vml_create_initialize, line 2123 Function vml_create_issue, line 2164 Function vml_create_issue_hex, line 2225 Function vml_create_issue_var, line 2272 Function vml_create_label, line 2316 Function vml_create_noop, line 2343 Function vml_create_parameter, line 2369 Function vml_create_return, line 2411 Function vml_create_simple_expr, line 2435 Function vml_create_spawn, line 2460 Function vml_create_string, line 2488 Function vml_create_string_const, line 2513 Function vml_create_test_and_set, line 2599 Function vml_create_transfer_buffer_to_file, line 2710 Function vml_create_variable, line 2747 Function vml_create_version, line 2774 Function vml_create_wait, line 2811 Function vml_create_wait_compare, line 2863 Function vml_create_while, line 2917 Function vml_create_while_condition, line 2961 Function add_while_branch_to_buffer, line 781 File vml_messages.c Function vml_messages_error_or_fatal_present, line 597 Function vml_messages_initialize, line 631 Function vml_messages_num_warnings, line 651 Function vml_messages_set_exit_on_fatal, line 786 File vml_storage.c Function vml_storage_append_hex_value, line 253 Function vml_storage_increment_instructions, line 431 Function vml_storage_initialize, line 482 File vml_symbol_table.c Function vml_symbol_table_print, line 222 File vml_utils.c Function vml_utils_check_for_keyword, line 725 Fucntion vml_utils_close_outputs, line 833 Function vml_utils_interpret_command_line, line 995",2/23/06ProjectE - TIM - 1617,Unused functions in the Build 3 FSW,4,"The following functions are unused in the the Build 3 FSW. There is no indication of the status of these functions for the ProjectE FSW. File mcCme.c Function mcCme_ReadDiscrete, line 456 File mcMain.c Function mc_init, line 143 Function mcMain_GetFpCond, line 1980 Function mc_main, line 314 Function mc_hw, line 501 Function mc_telem, line 624 Function mc_nanny, line 775",2/23/06ProjectE - TIM - 1616,Unused function parameters in Build 3 FSW,4,"The following function parameters are unused in the the Build 3 FSW. There is no indication of the status of these parameters for the ProjectE FSW. File mcAfm.c 1. Parameter 'this', line 1304 in function mcAfm_TestTips_chk 2. Parameter 'this', line 1406 in function mcAfm_TestTips_exe 3. Parameter 'this', line 1792 in function mcAfm_SetDynamic_chk 4. Parameter 'this', line 1833 in function mcAfm_SetDynamic_exe 5. Parameter 'this', line 1917 in function mcAfm_SetStatic_chk 6. Parameter 'this', line 1917 in function mcAfm_SetStatic_exe 7. Parameter 'this', line 2210 in function mcAfm_Raw_chk 8. Parameter 'this', line 2357 in function mcAfm_Boot_chk 9. Parameter 'this', line 2648 in function mcAfm_InitBridge_chk 10. Parameter 'this', line 2851 in function mcAfm_InitPlane_chk 11. Parameter 'this', line 3054 in function mcAfm_InitPll_chk 12. Parameter 'this', line 3395 in function mcAfm_DoLine_chk 13. Parameter 'this', line 4385 in function mcAfm_Enable_exe 14. Parameter 'this', line 4412 in function mcAfm_Disable_exe 15. Parameter 'this', line 4566 in function mcAfm_AutoImage_exe 16. Parameter 'this', line 4586 in function mcAfm_AutoImage_tlm 17. Parameter 'this', line 4606 in function mcAfm_HealthCheck_chk 18. Parameter 'this', line 4647 in function mcAfm_HealthCheck_exe 19. Parameter 'this', line 699 in function mcAfm_FrqTest_chk File mcOm.c 1. Parameter 'this', line 220 in function mcOm_Enable_exe 2. Parameter 'this', line 247 in function mcOm_Disable_exe File mcTable.c 1. Parameter 'this', line 891 in function mcTable_Download_exe 2. Parameter 'this', line 956 in function mcTable_Save_chk 3. Parameter 'this', line 989 in function mcTable_Save_exe File mcTecp.c 1. Parameter 'this', line 491 in function mcTecp_Disable_exe File mcWchem.c 1. Parameter 'this', line 2591 in function mcWchem_Disable_exe",2/23/06ProjectE - TIM - 1615,Unused local variables in Build 3 FSW,4,"The following local variables are unused in the the Build 3 FSW. There is no indication of the status of these variables for the ProjectE FSW. 1. Variable 'num_args', line 503 in file vml_messages.c 2. Variable 'i', line 599 in file vml_messages.c 3. Variable 'i', line 653 in file vml_messages.c 4. Variable 'result', line 376 in file vml_utils.c 5. Variable 'num_bytes', line 884 in file vml_utils.c 6. Variable 'value_chars', line 247 in file vml_constant_parser.c 7. Variable 'len', line 538 in file vml_constant_parser.c 8. Variable 'i', line 78 in file vml_constant_table.c 9. Variable 'index', line 1998 in vml_create.c 10. Variable 'i', line 2125 in file vml_create.c. 11. Variable 'i', line 2274 in file vml_create.c 12. Variable 'kind', line 599 in file vml_create.c 13. Variable 'max', line 200 in file vml_storage.c 14. Variable 'i', line 484 in file vml_storage.c 15. Variable 'str', line 690 in file vml_storage.c 16. Variable 'len', line 691 in file vml_storage.c 17. Variable 'i', line 72 in file vml_symbol_table.c",2/23/06ProjectE - TIM - 1614,Unused global variables in Build 3 FSW,4,"The following global variables are unused in the the Build 3 FSW. There is no indication of the status of these variables for the ProjectE FSW. 1. Variable 'assignment_dest', line 53 in file vml_storage.c 2. Variable 'pipe_to_tool', line 201 in file vml_utils.c 3. Variable 'pipe_to_tool', line 202 in file vml_utils.c",2/23/06ProjectE - TIM - 1613,Uninitialized variable in Build 3 FSW,3,"The variable, 'scTime', declared at line 397 is always used before being set in sam_Separation_Monitor.c function. ‘scTime’ is used on lines: 469, 491 and 514",2/23/06ProjectE - TIM - 1612,Possible uninitialized variable in Build 3 FSW,3,"The variable, 'num_bytes', declared at line 1536 in vml_utils.c is used before being set in the vml_utils_start_tool function. This is the case when the call to fopen is unsuccessful on line 1554. If unsuccessful, then 'num_bytes' is returned on line 1567 without being initialized. It is not clear if the desired implementation is to allow the compiler to set the initial value.",2/23/06ProjectE - TIM - 1610,"Inst4 SRS Requirements 5504-7, 5504-8, and 5504-9 Are Inconsistent with Previous SRS Versions",3,"Previous numbering of these L5 Requirements is as follows: 5504-6 The software shall be able to halt Inst4 operation at any time. 5504-7 The software shall be able to resume Inst4 operation from the last halted state. 5504-8 The software shall be able to abort Inst4 operation at any time. 5504-9 The software shall provide a mechanism to correlate the time of a gas-release event detected in the EGA to the time of a phase transition in the TA to within less than 5 seconds. The current number of these L5 Requirements is as listed here: 5504-6 The software shall be able to halt Inst4 operation at any time. 5504-7 The software shall be able to abort Inst4 operation at any time. 5504-8 The software shall provide a mechanism to correlate the time of a gas-release event detected in the EGA to the time of a phase transition in the TA to within less than 5 seconds. Issue: With the current requirements, the software will have the ability to halt without the ability to resume. The precedent for deleting requirements has been to leave a gap in the numbering of the requirements opposed to renumbering the requirements. Artifacts: 1. Inst4 SRS, Ver 2.2, 2-4-05 2. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",2/9/06ProjectE - TIM - 1608,Communication Packets Requirements Remain Untested,3,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial version, PHX-427-327, JPL D-31315 The following requirements remain untested: 3030115 - All PACI serial communication packets shall be a non-zero and even number of bytes, because the PACI transfers 16-bit words (2 bytes) at a time. 3030120 - METDM-to-Inst10 (command) packets shall be 1022 bytes maximum. 3030130 - Inst10-to-METDM (response) packets shall be 4094 bytes maximum.",1/27/06ProjectE - TIM - 1607,Fault Detection Requirement Remain Untested,3,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial Version, PHX-427-327, JPL D-31315 Requirement 3020410 ""METDM shall monitor and detect faults, and report them using the FSW-standard fault reporting facility as defined in ProjectE Payload FSW API Guide (PHX-04-0057)."" remains untested.",1/27/06ProjectE - TIM - 1604,Requirement 3.3.2.1 Traces to Parent Requirement That Is TBD,3,"Requirement 3.3.2.1 traces to parent HSICD requirement that is TBD. 3.3.2.1: The Inst5 FSW shall hold the Inst5 Reset discrete line in ""reset for a minimum of 10ms to force the Inst5 hardware to reset.""",1/24/06ProjectE - TIM - 1603,Requirement 3.1.2.2 Traces to Parent Requirement That Is TBD,3,"Artifact: Inst5 Flight Software Requirements Document - Rev. Priliminary, Preliminary Release, JPL D-32810, PHX-425-003, 13 September 2005 Requirement 3.1.2.2 traces to a parent requirement in the LMAPI that is TBD. ""3.1.2.2: The Inst5 FSW shall be capable of accepting commands from the command queue of lengths from 2 to 248 bytes.""",1/24/06ProjectE - TIM - 1602,Inst10 Test Case T7 Traces to Non-Existent Requirements,4,"Artifacts: 1. Inst10 Device Manager Software Test Plan (METDM-STP), 15 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Software Requirements Document (METDM-SRD), 22 August 2005, Initial Version, PHX-425-327, JPL D-32315 The RTVM provided traces for test case T7 with requirements 3020411, 3020412, 3020413, and 3020414. These requirements do not exist in the SRD.",1/15/06ProjectE - TIM - 1601,Inst10 Requirements are Not Fully Covered and are Not Traced to Test Cases,4,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial Version, PHX-427-327, JPL D-31315 The RTVM provides the only traces for requirements; however, there are traces that appear to be missing. The following requirements should be included in the RTVM 3020100, 3020200, 3020210, 3020250, 3020260, 3020270, 3020280, 3020310, 3020320, 3050200, 3060300, 3060410, 3060700 and 3060720. Although the requirements can be added to the RTVM and traced to test cases, the test cases do not fully cover the requirements.",1/15/06ProjectE - TIM - 1600,"Inst10 Test Cases Are Inconsistently Documented, Broad in Scope, and Vague Regarding Results",2,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, PHX-425-327, JPL D-32315 All the test cases are inconsistently documented, broad in scope, and vague regarding expected results. There is no standard format that indicates the purpose, the description, and the expected results of each test case. In most cases, there is one general test to be performed; however, there are cases where the tests can be broken down into multiple tests. (i.e., ""5.2. Test Case T2: Power On/Off, Enbl/Dsbl LIDAR, Model Estimation"" and ""5.6: Test Case: T6: S1C""). This description applies to all test cases traced to these requirements: 3020330, 3020420, 3030100, 3030135, 3030150, 3040100, 3040110, 3040120, 3040130, 3040140, 3040142, 3040160, 3050110, 3050360, 3050370, 3050390, 3050410, 3050440, 3050450, 3050510, 3050520, 3060100, 3060600, 3060710, 3071000, 3080110, 3080130, 3080140, 3120030, 3120200, 3130210, 3130150, 3130250, 3130350, 3130450, 3140150, 3140350, 3150150, 3150350",1/15/06ProjectE - TIM - 1599,"Inst10 Test Cases T2, T3, T4, T5, T6, and T7 Trace Requirement 3070100 Which Contains Specifications That Are TBD",3,"Artifacts: 1. Inst10 Device Manager Software Test Plan (METDM-STP), 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial Version, PHX-425-327, JPL D-32315 3. Inst10 to ProjectE Lander Software ICD, 26 July 2005, Revision 1.8, MDR-PHX-ICD-7781 Test cases ""T2: Power On/Off, Enbl/Dsbl LIDAR, Model Estimation"", ""T3: Recording and DLSD"", ""T4: ULSW"", ""T5: CCD"", ""T6: S1C"", and ""T7: Fault Protection and Miscellaneous"" trace to requirement 3071000 which contains specifications that are TBD. Requirement 3071000 states that ""For composing commands and parsing responses, METDM shall adhere to MDR-PHX-ICD-7781 for formats, field positions, constants, checksum computation, etc."" Data elements used to describe the overall status of the Inst10 in section ""3.5.3 Inst10 Status"" in the ICD contain Specified Range values that are ""TBD"". Test ranges and expected results are unspecified. Also, ""etc."" does not clarify other types of values that require testing.",1/15/06ProjectE - TIM - 1597,Inst6 - Test Case TC_Inst6a_INIT011 Does Not Fully Cover SRS 5.1.5,2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6a_INIT011 does not fully cover SRS 5.1.5 The Verification text says to ""Verify that the expected amount of heap memory is allocated...” It does not verify that the ""...memory allocation shall not change until the software is restarted or reinitialized."" The Description and Verification text are inconsistent with other test cases that cover configuration files and default values. The traced requirement ""6.7.2 Dynamic Memory Allocation Parameter"" states ""The MIS software shall request dynamic memory at initialization from the S/C FSW on the basis of a configuration parameter. If no valid configuration file is available the MIS SW shall allocate a default amount of memory utilizing a default parameter value."" There may be some confusion during testing regarding the testing with and without a configuration parameter.",1/13/06ProjectE - TIM - 1596,Inst6 - Unable to Determine Correct Power Procedures for TC_Inst8_OPS115,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS115 covers more than the scope of the requirement SRS 7.3.7. The test is to verify power on and power off procedures. The requirement only describes the Shutdown State. It is not possible to determine the correct power procedures for this test.",1/13/06ProjectE - TIM - 1595,"Inst6 SRS 6.4.1, 7.2.11.6, 7.2.11.7, and 7.2.11.8 Remain Untested and SRS 7.2.11.12 Is Missing A Trace",2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 According to section ""1.6 Test Coverage"", ""...all functional requirements in the SRS document must be addressed by at least one test case."" There will remain untested with the current test plan: ""6.4.1 Operational Parameters"", ""7.2.11.6 Inst6 Azimuth Park Position"", ""7.2.11.7 Inst6 Shutdown Procedure"", and ""7.2.11.8 Inst6 Shutdown Position"". When the component is parked or shut down there is safing that needs to be done to protect the component. Currently there is no test case to cover the safing involved for the Inst6 Azimuth Park Position, the Inst6 Shutdown Procedure or its Shutdown Position. Requirement ""7.2.11.12 Inst6 Shutdown State Verification"" is missing a trace to test case TC_Inst6_OPS128.",1/13/06ProjectE - TIM - 1594,Inst6 Test Case TC_Inst8_OPS110 Is Missing A Trace,4,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS110 is missing a traces in the Requirements text. SRS 8.5.2 is cross-references with TC_Inst8_OPS110 in Appendix A and is covered by the test case.",1/13/06ProjectE - TIM - 1593,Inst6 Test Case TC_Inst8_OPS107 Is Inconsistently Documented,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS107 is inconsistently documented with other requirements regarding testing with a configuration data file and without a configuration data file. Other test cases provided separate descriptions for testing with and without configuration data files. Not providing individual tests may cause some confusion during testing.",1/13/06ProjectE - TIM - 1592,Inst6 Test Case TC_Inst8_OPS104 Does Not Trace To SRS 7.2.9.1.7,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS104 does not trace to SRS 7.2.9.1.7. Test case TC_Inst8_OPS104 is a Inst8 test case; whereas, SRS 7.2.9.1.7 is an Inst6 Motion Functionality requirement.",1/13/06ProjectE - TIM - 1591,Inst6 Test Case TC_Inst8_OPS100 Does Not Cover SRS 7.3.2,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars ProjectE Scout Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS100 does not cover SRS 7.3.2. The test is for a Inst8_STOW command; whereas, the requirement 7.3.2 specifices a safe mode command or safe mode signal.",1/13/06ProjectE - TIM - 1590,Inst6 Test Case TC_Inst6_OPS128 Does Not Trace To SRS 7.3.7 And Is Missing A Trace,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 The only provided trace for TC_Inst6_OPS128 is to SRS 7.3.7; however, TC_Inst6_OPS128 does not trace to requirement SRS 7.3.7 and is missing a trace. SRS 7.3.7 is a Inst8 requirement (""Inst8 Shutdown State Verification). The requirement that this test should trace to is SRS 7.2.11.12 Inst6 Shutdown State Verification.",1/13/06ProjectE - TIM - 1589,"Inst6 Test Case TC_Inst6_OPS126, TC_Inst8_OPS113, and TC_Inst6a_OPS101 Contain A Typographical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6_OPS126, TC_Inst8_OPS113, and TC_Inst6a_OPS101 traces to SRS 6.4.1.2 in the Requirements text and is cross-references with it in Appendix A. Requirement 6.4.1.2 does not exist in the SRS; however, the Summary and Description in Appendix A match the requirement title and text for requirement 6.4.2.1 in the SRS. (""Commanded Parameter Overrides"", ""The instrument FSW shall have the ability to accept parameter values via a command, which will then remain in effect until the next restart or until new values are sent in a following command."") It appears that 6.4.1.2 is a typographical error.",1/12/06ProjectE - TIM - 1588,Inst6 Test Case TC_Inst6_OPS124 Is Missing a Trace,4,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6_OPS124 is missing the trace for SRS 8.5.2 in the Requirements text. It is cross-reference with 8.5.2 in Appendix A and does verify the requirement.",1/12/06ProjectE - TIM - 1587,Inst6 Test Case TC_Inst6_OPS113 Has a Duplicate Verification and Does Not Fully Cover SRS 7.2.9.1.2.,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6_OPS113 does not fully cover requirement SRS 7.2.9.1.2. Requirement 7.2.9.1.2 states that ""All azimuth and elevation motion shall be specified in either an absolute number of steps from the home position, or as a relative number of steps from the current position."" The relative number of steps for the elevation motion remains untested. Test cases of other requirements containing specifications for both absolute positioning and relative positioning provide a test for each type of positioning. The Verification text (""Verify that the elevation axis can be commanded to any position within the end stop bounds in absolute positioning mode."") appears twice in the test case.",1/12/06ProjectE - TIM - 1586,"Inst6 Test Cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 Do Not Trace to SRS 7.2.6",4,"Artifacts: 1. MAGI Test Cases Definition V2 Software Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 do not trace to SRS 7.2.6. TC_Inst6_OPS109 is an Inst6 Azimuth Preheat test, TC_Inst6_OPS110 is an Inst6 Elevation Preheat test, and TC_Inst6_OPS111 is an Inst6 Filter Wheel Preheat test. SRS 7.2.6 is a Inst8 Preheat Activation requirement.",1/12/06ProjectE - TIM - 1585,"Inst6 Test Case TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 Are Inconsistently Documented",3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 are inconsistently documented with other test cases regarding testing with a configuration data file and without a configuration data file. SRS 7.1 states that ""...motion control parameters shall be utilized by the instrument flight software and obtained from configuration data files or from predefined default values embedded within the software."" Test cases TC_Inst6_INIT004, TC_Inst8_INIT004, and TC_Inst6a_INIT004 provide Description A for the test where there is a configuration data file present and Description B for the test where a configuration data file does not exist. These test cases also provide Verification A and Verification B to indicate what needs to be verified with each test. Test cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 have one test Description: ""Issue an ... command."", which implies that one test is to be performed. The Verification text for each of these test cases contains the instructions: ""Verify that preheating is started or stopped in accordance with the parameters values provided by an ... command."" and ""Verify that preheating is started or stopped in accordance with the parameters values contained in the configuration data file."" The verification instructions indicates that two tests need to be performed.",1/12/06ProjectE - TIM - 1583,Inst6 Test Case TC_Inst6_OPS100 Contains Typographical Errors,5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5 20 September 2005 Test case TC_Inst6_OPS100 traces to requirements 7.2.12, 7.2.12.1, and 7.2.12.2 in the Requirements text and cross-references them in Appendix A. Requirements 7.2.12, 7.2.12.1, and 7.2.12.2 do not exists; however the Summary and Description for 7.2.12.1 and 7.2.12.2 match the requirement title and text for 7.2.11.9 and 7.2.11.10 in the SRS. The Summary for 7.2.12 matches the requirement title for 7.2.11.5 in the SRS, and the Description is similar to the requirement text, but not verbatim. It appears that these are typographical errors.",1/12/06ProjectE - TIM - 1582,"Inst6 Test Cases TC_Inst6_OPS005, TC_Inst8_OPS005, and TC_Inst6a_OPS005 Containt a Typgraphical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS005, TC_Inst8_OPS005, and TC_Inst6a_OPS005 trace to SRS 7.2.12.3 in the Requirement text and are cross-referenced with it in Appendix A. Requirement 7.2.12.3 does not exist in the SRS; however the Summary and Description for 7.1.12.3 in Appendix A match the requirement title and text of requirement 7.2.11.11 in the SRS (""Inst6 Shutdown Actuator Position Data"", ""All actuator positions at shutdown shall be saved to persistent memory."") It appears that ""7.2.12.3"" is a typographical error. Additionally, the cross-reference for TC_Inst6a_OPS005 is missing in Appendix A.",1/12/06ProjectE - TIM - 1581,"Inst6 Test Cases TC_Inst6_OPS004, TC_Inst8_OPS004, and TC_Inst6a_OPS004 Are Missing a Trace",4,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Component of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS004, TC_Inst8_OPS004, and TC_Inst6a_OPS004 are inconsistently documented with other test cases in regards to traced requirements. Requirements 6.6.2.1 and 6.6.2.2 are noted in the Requirements text for all three cases, but the cross-reference for TC_Inst6a_OPS004 is missing in Appendix A. Test cases TC_Inst6_OPS004 and TC_Inst8_OPS004 are cross-referenced with Requirement 6.6.2.3 in Appendix A, but the trace is missing in the Requirements text of the two test cases. Additionally test case TC_Inst6a_OPS004 covers Requirement 6.6.2.3, but the trace is missing in the Requirements text and the cross-reference is missing in Appendix A.",1/12/06ProjectE - TIM - 1580,Inst6 Test Cases TC_Inst6_SYS004 and TC_Inst8_SYS004 Do Not Fully Cover Requirement LMA PHX-04-0057 3.14,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. ProjectE Payload FSW API Guide, PHX-04-0057, Rev. Basic, 1 September 2004 Test cases TC_Inst6_SYS004 and TC_Inst8_SYS004 do not fully cover requirement LMA PHX-04-0057 3.14. The test covers ""...the ability to turn power switches on/off"", but does not cover ""...the ability to...register for power switch status notification, and support EPS power utilization and modeling."" The later part of the requirement is covered by test cases TC_Inst6_SYS006 and TC_Inst8_SYS006, whose purposes are to ""Verify that the software monitors runtime status via EPS.""",1/12/06ProjectE - TIM - 1579,"Inst6 Test Cases TC_Inst6_SYS002, TC_Inst8_SYS003, and TC_Inst6a_SYS003 Are Inconsistently Documented",2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Coding Conventions, Revision J, 17 June 2003 Test cases TC_Inst6_SYS002, TC_Inst8_SYS002, and TC_Inst6a_SYS002 are inconsistently documented in the Verification text regarding the command received that is to be tested. Test cases TC_Inst6_SYS002 and TC_Inst6a_SYS002 indicate testing of the MSG_SYS_INIT command is to be performed; whereas, test case TC_Inst8_SYS002 indicates testing of the MSG_Inst8_INIT command is to be performed. This has been assigned a Severity 2, since there is a chance the wrong command could be executed.",1/12/06ProjectE - TIM - 1578,"Inst6 Test Cases TC_Inst6_SYS001, TC_Inst8_SYS001, and TC_Inst6a_SYS001 Do Not Fully Cover SRS 5.1.1",3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 200 3. ProjectE Payload FSW API Guide, PHX-04-0057, Rev. Basic, 1 September 2004 Test cases TC_Inst6_SYS001, TC_Inst8_SYS001, and TC_Inst6a_SYS001 do not fully cover SRS 5.1.1 and the documented trace is inconsistent with other test cases. The requirement states ""The software shall utilize services provided by the flight software in accordance with the LMA Flight Software API usage guide."" The message services described in the FSW API usage guide are START, STOP, INIT, SAVE, PING and PONG, and FP_ENABLE. PING and PONG are verified by these test cases, and INIT is verified by test cases TC_Inst6_SYS002, TC_Inst8_SYS002, and TC_Inst6a_SYS002. START, STOP, SAVE, and FP_ENABLE are not covered by any test cases. The cross-reference of 5.1.1 with TC_Inst6a_SYS001 is missing in Appendix A.",1/12/06ProjectE - TIM - 1577,"Inst6 Test Cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005 Contain Typographical Errors",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT006, TC_Inst8_INIT006, and TC_Inst6a_INIT006 trace to SRS 6.4.1.3 in the Requirements text and are cross-referenced with it in Appendix A. Requirement 6.4.1.3 does not exist in the SRS; however, the Summary and Description in Appendix A match the requirement title and text of requirement 6.4.2.2 in the SRS. (""Default Parameters"", ""Each instrument shall be implemented with a default set of parameters suitable for general use and derived from pre-launch testing."") It appears that ""6.4.1.3"" is a typographical error.",1/12/06ProjectE - TIM - 1576,Inst6 Test Cases TC_Inst6_INIT005 and TC_Inst8_INIT005 Are Incorrectly Traced to Requirments,2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Marsk Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT005 and TC_Inst8_INIT005 provide a trace to requirement requirement 7.2.8 (""The instrument control software shall not command actuator motion if an actuator is below its rated minimum operating temperature.""); however, it is not covered by the tests (""Verify that the software loads the configuration data file.""). The actuator motion may end up being commanded even if the actuator is below its minimum operating temperature, possibly causing the component to break. Test cases TC_Inst6_INIT005 and TC_Inst8_INIT005 are inconsistently documented with other test cases regarding traced requirements. Requirements 7.1.1 and 7.1.7 are cross-referenced with these two cases in Appendix A, but do not appear in the Requirements text for either test case.",1/12/06ProjectE - TIM - 1575,"Inst6 Test Cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005 Contain Another Typographical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT005, and TC_Inst8_INIT005, and TC_Inst6a_INIT005 trace to SRS 6.4.3 in the Requirements text and are cross-referenced with it in Appendix A; however, the Summary and Description in Appendix A match the requirement title and text for requirement 6.4.4 in the SRS. (""Implementing configuration Parameter Data"", ""Configuration parameter data items shall be deemed to be available for readout immediately upon receipt of an initialization command."") The Summary and Description for 6.4.2 in Appendix A match the requirement title and text for requirement 6.4.3 in the SRS (""Flight Configuration Data File Allocations"", ""There shall be one configuration file for each MIS SW task, with auxiliary files as necessary (storage space permitting.)"") Since the actual requirement 6.4.3 lends itself more to an Inspection verification as indicated for 6.4.2 in Appendix A and 6.4.4 is more appropriately tested by TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005, it appears that 6.4.3 is a typographical error.",1/12/06ProjectE - TIM - 1574,"Inst6 Test Cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_INIT005 Contain a Typographical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005 trace to SRS 6.4.1.1 in the Requirements text and are cross-referenced with in in Appendix A. Requirement 6.4.1.1 does not eixsts in the SRS; however, the Summary and Description in Appendix A match the requirement title and text of 6.4.2 in the SRS. (""Retrieiving Configuration Data - Flight Configuration"", ""The software shall provide the ability to load configuration parameters from a file stored in the spacecraft's non-volatile memory."") It appears ""6.4.1.1"" is a typographical error.",1/12/06ProjectE - TIM - 1573,Inst6 Test Cases TC_Inst6_INIT004 and TC_Inst6a_INIT004 Inconsistently Worded With TC_Inst8_INIT004,5,"Artifacts: 1. MAGI Test Cases Defintion V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT004 and TC_Inst6a_INIT004 are inconsistently worded with their Purpose text and test case TC_Inst8_INIT004. The Purpose text for TC_Inst6_INIT004 is: ""Verify that the global data file is read at initialization."" The Purpose text for TC_Inst6a_INIT004 is: ""Verify that the global variables data file is read at initialization."" These two are worded similarly; however, the Purpose text for TC_Inst8_INIT004 is: ""Verify that the global data file is read, or default values are used, at initialization."" Since all three test describe launching a main task twice, once with a global data file and once without a global data file, the purpose should be consistent regarding the objective of the test. TC_Inst6_INIT004: Description A: Launch the main task (Inst6_MainTask) and check that the init_mode parameter is set to Inst6_BOOT_INIT when Inst6_Init() is invoked and a global data is avaliable. Description B: Launch the main task (Inst6_MainTask) and check that the init_mode parameter is set to Inst6_BOOT_INIT when Inst6_Init() is invoked, and no global data file is available. TC_Inst8_INIT004: Description A: Launch the main task (Inst8_MainTask) and check that the init_mode parameter is set to Inst8_BOOT_INIT when Inst8_Init() is invoked and a global data is available. Description B: Launch the main task (Inst8_MainTask) and check that the init_mode parameter is set to Inst8_BOOT_INIT when Inst8_Init() is invoked, and a global data file is NOT available. TC_Inst6a_INIT004: Description A: Launch the main Inst6a task (Inst6a_MainTask) and check that the init_mode parameter is set to Inst6a_BOOT_INIT when Inst6a_Init() is invoked and a global data is available. Description B: Launch the main Inst6a task (Inst6a_MainTask) and check that the init_mode parameter is set to Inst6a_BOOT_INIT when Inst6a_Init() is invoked, and no global data file is available.",1/12/06ProjectE - TIM - 1572,Inst5 SRS 4.4.2.3 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.4.2.3 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.4.2.3 in the Inst5 SRS document states “The Inst5 FSW shall implement a command option to initialize the AFM in either static mode or dynamic mode.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1571,Inst5 SRS 4.2.5.3 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.2.5.3 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.2.5.3 in the Inst5 SRS document states “If movement fails to result in the triggering of a limit switch within the expected number of steps, based on the software’s understanding of the movement’s starting position, flight software will retreat to the movement’s starting position and reattempt the operation TBD times. If the software continues to fail, software will increase power to a TBD level and continue to reattempt the operation TBD times. If software still fails, it will set the stage’s fault condition to “failed.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1570,Inst5 SRS 4.1.4.8 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.1.4.8 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.1.4.8 in the Inst5 SRS document states “The Inst5 FSW shall implement a command that performs a multiple sensor read function that reads sensors and runs experiments in the order specified below at a commanded rate for a commanded duration [FRD 2.5.10]: a) Read all ISEs b) Read Pressure and Temperature c) Perform a CV experiment d) Perform an ASV experiment e) Perform a DOX experiment f) Perform a Conductivity experiment g) Perform a Chronopotentiometry experiment h) Read all ISEs ” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1569,Inst5 SRS 4.1.4.7 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.1.4.7 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.1.4.7 in the Inst5 SRS document states “The Inst5 FSW shall implement a command that heats the beaker until the temperature indicates that the ice is melted, and then initiates data collection.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1568,No test set is provided in the Inst5 STP to trace to Inst5 SRS 3.1.2.2,3,"No test set is provided in the Inst5 STP to trace to SRS 3.1.2.2 ""TheMECA FSW shall be capable of accepting commands from the command queue of lengths from 2 to 248 bytes."" SRS 3.1.2.2 is omitted or not addressed in the Project provided traceability matrix Section 15 Appendix E – Traceability (Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005) ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1567,Inst5 test set 10.2 FP-HEALTH does not verify SRS 5.2.1.5,3,"Inst5 test set 10.2 FP-HEALTH does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 10.2 FP-HEALTH, “Verify that FSW generates valid data products, time-stamped and ID-numbered, to report the results of health checks” is specified. Inst5 STP test set 10.2 FP-HEALTH, however, does not explicitly verify SRS 5.2.1.5 requirement.",1/6/06ProjectE - TIM - 1566,Inst5 test set 9.1 SUPPORT does not fully verify SRS 4.6.1.3,3,"Inst5 test set 9.1 SUPPORT does not fully verify SRS 4.6.1.3. Inst5 SRS 4.6.1.3 states “The Inst5 FSW shall maintain a table of user-modifiable parameters, which are read at bootup and save at power-down.” Among the Test Objectives of Inst5 test set 9.1 SUPPORT, “Verify that FSW can force table saving and loading across power-downs” is specified, and, in the Test Method, “Verify that tables are downlinked into valid data products, and that the table contents are correct” and “Issue MC_CMD_SAVE_TBL and verify that table contents are saved, and that the contents are correct” are specified. Inst5 STP test set 9.1 SUPPORT, however, does not verify “a table of user-modifiable parameters” is “read at bootup.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1565,Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.8,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also STP test set 8.1 TECP-BASIC does not verify that FSW checks the data interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1564,Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.7,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. Also, it is not clear if the “when checking is enabled” condition is included in the Inst5 test set 8.1 TECP-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1563,Inst5 test set 8.1 TECP-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 8.1 TECP-BASIC, “Verify that FSW downlinks valid TECP data products, time-stamped and ID-numbered, using the high-priority APID” is specified. Inst5 STP test set 8.1 TECP-BASIC, however, does not explicitly verify SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1562,Inst5 test set 8.1 TECP-BASIC does not verify SRS 4.5.2.2,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 4.5.2.2. SRS 4.5.2.2 states “The Inst5 FSW shall be capable of altering each of the following FPGA controlled values for the TECP instrument: a) 5v power and breaker b) The input mode (single-ended or differential) c) The polarity (bipolar or unipolar) d) The output data bit order e) Auto-shutdown mode f) ADC run option g) Heaters and measurement enables.” Among the Test Objectives of Inst5 test set 8.1 TECP-BASIC, “Verify that FSW validates all FPGA responses, and faults the instrument given an illegal response” is specified. Inst5 STP test set 8.1 TECP-BASIC, however, does not explicitly verify SRS 4.5.2.2 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1561,Inst5 test set 7.5 AFM-FP does not fully verify SRS 4.4.4.1,3,"Inst5 test set 7.5 AFM-FP does not fully verify SRS 4.4.4.1. Inst5 SRS 4.4.4.1 states “If the AFM fails to scan a substrate, FSW shall reapproach TBD times. If scanning continues to fail, FSW will move on to the next substrate. FSW will not set the fault condition to failed.” STP test set 7.5 AFM-FP does not verify “…If scanning continues to fail, FSW will move on to the next substrate.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1560,The SRS 4.4.3.4 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG)is inconsistent with that of the Inst5 SRS document,4,"The SRS 4.4.3.4 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG)is inconsistent with that of the Inst5 SRS document. The SRS 4.4.3.4 in the Inst5 SRS states that “The Inst5 FSW shall allow acquisition of forward and backward scanning data from both the topography and error channels, or the phase and error channels, as selected by the user.” The SRS 4.4.3.4 provided in the Inst5 STP has “The Inst5 FSW shall implement a command to take forward and backward scanning image data from any two of the three AFM channels” specification, instead. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1559,The SRS 4.4.3.3 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG) is inconsistent with that of the Inst5 SRS document,4,"The SRS 4.4.3.3 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG) is inconsistent with that of the Inst5 SRS document. The SRS 4.4.3.3 in the Inst5 SRS states that “The Inst5 FSW shall be able to perform the scan-surface-orientation correction based on an initial limited prescan,” without the inclusion of “(algorithm TBD)” requirement specification as in the Inst5 STP. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1558,Inst5 test set 7.4 AFM-AUTOIMG does not completely verify SRS 4.4.3.2,3,"Inst5 test set 7.4 AFM-AUTOIMG does not completely verify SRS 4.4.3.2. The SRS 4.4.3.2 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 4.4.3.2 in the Inst5 SRS states that “The Inst5 FSW shall implement a commandable option to be able to perform a limited prescan on a sample to determine the maximum scan range possible, and determine the correct scan settings for a full scan,” without the inclusion of “(algorithm TBD)” requirement specification as in the Inst5 STP. STP test set 5.1 7.4 AFM-AUTOIMG verifies SRS 4.4.3.2 with slight deviations. STP test set 7.4 AFM-AUTOIMG verifies that “FSW…performs a pre-scan to determine optimal scan settings, corrects for orientation of the scan surface...automatic selection of high-entropy areas for zoomed scans…” The SRS 4.4.3.2 requires “…to determine the maximum scan range possible, and determine the correct scan settings for a full scan.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1557,Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.11,3,"Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.11. Inst5 SRS 4.4.2.11 states “The Inst5 FSW shall be capable of reading a 32-byte AFM status message and extracting status information for specified parameters.” STP test set 7.3 AFM-RAW does not verify “…reading a 32-byte AFM status message...,” but it covers verification of ""AFM status return."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1556,Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.9,3,"Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.9. Inst5 SRS 4.4.2.9 states “The Inst5 FSW shall be capable of sending the AFM a pass-through low-level command (32 bytes).” STP test set 7.3 AFM-RAW does not verify “…sending the AFM a pass-through low-level command (32 bytes),” but it verifies “sending raw ASCII commands.” If the “raw ASCII commands” are equivalent to the “pass-through low-level command (32 bytes),” this needs to be explicitly stated in the associated document. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1555,Inst5 test set 7.2 AFM-ATTRIB does not fully verify SRS 4.4.2.11,3,"Inst5 test set 7.2 AFM-ATTRIB does not fully verify SRS 4.4.2.11. Inst5 SRS 4.4.2.11 states “The Inst5 FSW shall be capable of reading a 32-byte AFM status message and extracting status information for specified parameters.” STP test set 7.2 AFM-ATTRIB does not verify “…reading a 32-byte AFM status message...,” but it covers verification of ""AFM status return."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1554,Inst5 test set 7.1 AFM-BASIC does not verify SRS 6.2.1.8,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also STP test set 7.1 AFM-BASIC does not verify that FSW checks the data interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1553,Inst5 test set 7.1 AFM-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that FSW downlinks valid AFM data products, time-stamped and ID-numbered, using the low-priority APID” is specified, and, in the Test Method, “Verify the FSW downlinks a single-line data product, time-stamped and ID-numbered, using the low-priority APID,” “Verify the FSW downlinks four complete frame data products, time-stamped and ID-numbered, using the low-priority APID,”and “Verify that FSW downlinks an ADC data product, time-stamped and ID-numbered, using the low-priority APID” are specified. Inst5 STP test set 7.1 AFM-BASIC, however, does not explicitly verify SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1552,Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.12,3,"Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.12. Inst5 SRS 4.4.2.12 states “The AFM Status data shall consist of the following: a) Time stamp showing when the command prompting the read was issued to the AFM b) The 32 byte response message returned from a non-scanning AFM command. c) A Inst5 FSW-generated data Set ID number.” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that FSW downlinks valid AFM data products, time-stamped and ID-numbered, using the low-priority APID” is specified, and, in the Test Method, “Verify the FSW downlinks a single-line data product, time-stamped and ID-numbered, using the low-priority APID,” “Verify the FSW downlinks four complete frame data products, time-stamped and ID-numbered, using the low-priority APID,”and “Verify that FSW downlinks an ADC data product, time-stamped and ID-numbered, using the low-priority APID” are specified. Inst5 STP test set 7.1 AFM-BASIC, however, does not explicitly verify “…b) The 32 byte response message returned from a non-scanning AFM command” of the SRS 4.4.2.12 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06ProjectE - TIM - 1551,Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.11,3,"Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.11. Inst5 SRS 4.4.2.11 states “The Inst5 FSW shall be capable of reading a 32-byte AFM status message and extracting status information for specified parameters.” STP test set 7.1 AFM-BASIC does not verify “…reading a 32-byte AFM status message...” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1550,Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.7,3,"Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.7. Inst5 SRS 4.4.2.7 states “The Inst5 FSW shall be capable of receiving a complete two-channel 512-point scanline from the AFM via the PACI, which is 512 + 10 = 522 bytes.” STP test set 7.1 AFM-BASIC does not verify the scanline size specification of the SRS 4.4.2.7 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1549,Inst5 test set 7.1 AFM-BASIC does not verify SRS 4.4.2.2,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 4.4.2.2. Inst5 SRS 4.4.2.2 states “The Inst5 FSW shall be capable of sending the AFM a software load in multiple packets containing a maximum size of 80 bytes.” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that the FSW can configure the AFM in either static or dynamic mode, with different default parameters” is specified. Inst5 STP test set 7.1 AFM-BASIC, however, does not explicitly verify the SRS 4.4.2.2 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1548,Inst5 test set 7.1 AFM-BASIC does not verify SRS 3.3.2.5,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 3.3.2.5. Inst5 SRS 3.3.2.5 states “The Inst5 FSW shall set the AFM/CME discrete line as specified in the Inst5 Hardware Software ICD to swap communications between the AFM instrument and the CME.” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that the FSW can configure the AFM in either static or dynamic mode, with different default parameters” is specified. Inst5 STP test set 7.1 AFM-BASIC does not explicitly verify the SRS 3.3.2.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1547,Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.8,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also STP test set 6.1 OM-BASIC does not verify that FSW checks the data interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1546,Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.7,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. STP test set 6.1 OM-BASIC does not verify that FSW checks the command interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1545,Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.3,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.3. Inst5 SRS 4.3.2.3 states “The Inst5 FSW shall turn off any powered LEDs upon receipt of any of the following: a) Image data has been acquired by an Inst6/Inst6b FSW global variable. b) After a specified time-out delay c) A specific command to turn them off.” In the Test Method of Inst5 test set 6.1 OM-BASIC, “Issue MC_OM_DISABLE. Verify that the LEDs go off, and that FSW sets the OM LEDs to the Disabled state and powers off the OM LEDs” is specified. Inst5 STP test set 6.1 OM-BASIC, however, does not explicitly verify the SRS 4.3.2.3 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1544,Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.1,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.1. Inst5 SRS 4.3.2.1 states “Inst5 FSW shall initialize all global variables written by Inst5 FSW, which are used to coordinate interoperability of the OM and Inst6/Inst6b software.” STP test set 6.1 OM-BASIC does not verify or trace to the SRS 4.3.2.1 requirement. It verifies “FSW sets the OM-done global variable at the completion of each command,” instead. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1543,Inst5 test set 5.2 STAGE-AFM is inconsistent in the AFM near term,5,"Inst5 test set 5.2 STAGE-AFM is inconsistent in the AFM near term. The Test Objectives of test set 5.2 STAGE-AFM include “Verify that FSW stops translation when AFM-near is asserted” but the Test Method defines “Verify AFM approach.” The “AFM approach” and “AFM-near” seem used interchangeably, and, if so, this needs to be stated. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1542,Inst5 test set 5.1 STAGE-BASIC does not completly verify SRS 6.2.1.8,3,"Inst5 test set 5.1 STAGE-BASIC does not completly verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. STP test set 5.1 STAGE-BASIC does not include verification for the ""once per second” requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1541,Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 6.2.1.7,3,"Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. STP test set 5.1 STAGE-BASIC verifies SRS 6.2.1.7 except for the ""once per second” requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1540,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 5.1 STAGE-BASIC, “Verify that FSW downlinks valid stage data products, time-stamped and ID-numbered, using the low-priority APID” is specified. Inst5 STP test set 5.1 STAGE-BASIC, however, does not explicitly verify the SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1539,Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 4.2.4.1,3,"Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 4.2.4.1. SRS 4.2.4.1 in the Inst5 SRS states “The Inst5 FSW shall initialize the stage at power-on by verifying commandability to each limit-switch delineated position, and then leaving the stage in the safe-to-rotate position,” but the SRS 4.2.4.1 provided in the Inst5 STP has “…then leaving the stage in a TBD position,” instead. STP test set 5.1 STAGE-BASIC covers “leaving the stage in the safe-to-rotate position,” but it is not clear if “verifying commandability to each limit-switch delineated position” is performed. So STP test set 5.1 STAGE-BASIC does not fully verify or trace to the SRS 4.2.4.1 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1538,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.17,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.17. Inst5 SRS 4.2.2.17 states “The Inst5 FSW will maintain and refer to a look-up table (LUT) of stage positions to accomplish all functions including imaging of each substrate.” STP test set 5.1 STAGE-BASIC has no reference or description of the “look-up table (LUT) of stage positions,” thus does not verify or trace to the SRS 4.2.2.17 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1537,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.8,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.8. The Test Output of STP test set 5.1 STAGE-BASIC includes “Software channelized telemetry showing limit switch states, heater states and actuator states,” however, no explicit specification in the 5.1 STAGE-BASIC test set covers the verification of SRS 4.2.2.8. Inst5 SRS 4.2.2.8 states “The Inst5 FSW shall be capable of distinguishing between two states (on/off) and four transitions of the six Stage limit switches: a) Translational “Out” b) Translational “Safe to Rotate” c) Translational “Alternate Safe to Rotate” d) Translational “Focus Position” e) Rotational f) Rotational “Alternate” The physical position associated with these switches depends on whether a low-high transition is detected, or a high-low transition. In addition, it depends on the direction from which they are approached. Thus, for example, the Inst5 FSW shall distinguish four rotation switch transitions as CW low-high, CW high-low, CCW low-high, and CCW high-low, where CW indicates clockwise rotation and CCW counter-clockwise. The FPGA doesn't support high-low detection, but the number of steps is small enough that we can check a step at a time.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1536,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.7,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.7. SRS 4.2.2.7 in the Inst5 SRS states “The Inst5 FSW shall detect limit switch transitions encountered during the move and verify that they are expected, within a parameterized margin, stopping if not, and setting the fault condition to “failed”,” but the SRS 4.2.2.7 provided in the Inst5 STP has “…within a TBD margin…” specification, instead. Also, STP test set 5.1 STAGE-BASIC does not verify or trace to the SRS 4.2.2.7 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1535,Inst5 test set 4.4 WCHEM-FP does not accurately verify SRS 4.1.5.5,3,"Inst5 test set 4.4 WCHEM-FP does not accurately verify SRS 4.1.5.5. SRS 4.1.5.5 states “Unless specifically overridden, the Inst5 FSW shall heat a wet chemistry water tank to at least +3° C (TBR) before activating the water release actuator.” The test set 4.4 WCHEM-FP has as one of the Test Objectives “Verify that water is heated to 3° C before release.” As part of Test Method, Inst5 test set 4.4 WCHEM-FP includes “Hold temperature value down, so that it never gets above 3° C. Verify that the FSW disables the WCL and reports the command failure.” The test set 4.4 WCHEM-FP in “…so that it never gets above 3° C…” is not in compliance with SRS 4.1.5.5, since at 3° C, water release is possible per requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1534,"Inst5 test set 4.3 WCHEM-CONFIG, without TBD, traces to SRS 4.1.3.4",4,"Inst5 test set 4.3 WCHEM-CONFIG, without TBD, traces to SRS 4.1.3.4. The test set 4.3 WCHEM-CONFIG verifies the SRS 4.1.3.4 requirement, but the SRS 4.1.3.4 requirement text provided in the Appendix E of Inst5 STP needs to have the [TBD] removed from “a) The reference electrode [TBD]” to be consistent with that of the Inst5 SRS. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1533,Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.6,3,"Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.6. SRS 4.1.4.6 states “The Inst5 FSW shall implement a command to conduct a default or non-default chronopotentiometry experiment on a specified wet chemistry cell.” Among the Test Objectives of Inst5 test set 4.2 WCHEM-HL, “Verify that FSW can conduct complete conductivity, dissolved oxygen, cyclic voltammetry, chronopotentiometry and anodic stripping experiments without user intervention” is specified. Inst5 STP test set 4.2 WCHEM-HL, however, does not explicitly verify the SRS 4.1.4.6 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1532,Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.5,3,"Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.5. SRS 4.1.4.5 states ¡§During an ASV experiment, the Inst5 FSW shall command the FPGA to do the following: a) Apply a specified conditioning voltage to the designated working electrode for a specified time period b) Turn on stirring in the active wet chemistry cell c) Apply a specified deposition voltage to the designated working electrode for a specified time period d) Turn off stirring in the active wet chemistry cell e) Apply a specified stripping waveform and retrieve the current data.¡¨ Among the Test Objectives of Inst5 test set 4.2 WCHEM-HL, ¡§Verify that FSW can conduct complete conductivity, dissolved oxygen, cyclic voltammetry, chronopotentiometry and anodic stripping experiments without user intervention¡¨ is specified. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the following is specified for ASV. ""For each cell: Issue MC_WC_ENABLE. Issue MC_WC_READ for anodic stripping with Default Option. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #1. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #2. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #3. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #4. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #5. Verify the data product. Issue MC_WC_DISABLE. Verify that the cell is disabled and not powered."" Inst5 STP test set 4.2 WCHEM-HL, however, does not explicitly verify the SRS 4.1.4.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1531,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.4,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the anodic stripping “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default anodic stripping experiment” of SRS 4.1.4.4. Inst5 SRS 4.1.4.4 states ""The Inst5 FSW shall implement a command to conduct a default or non-default anodic stripping experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1530,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.3,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the cyclic voltammetry “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default cyclic voltammetry experiment” of SRS 4.1.4.3. Inst5 SRS 4.1.4.3 states ""The Inst5 FSW shall implement a command to conduct a default or non-default cyclic voltammetry experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1529,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.2,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the dissolved oxygen “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default dissolved oxygen experiment” of SRS 4.1.4.2. Inst5 SRS 4.1.4.2 states ""The Inst5 FSW shall implement a command to conduct a default or non-default dissolved oxygen experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1528,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.1,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the conductivity “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default conductivity experiment” of SRS 4.1.4.1. Inst5 SRS 4.1.4.1 states ""The Inst5 FSW shall implement a command to conduct a default or non-default conductivity experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1527,Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.2.16,3,"Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.2.16. SRS 4.1.2.16 states “The Inst5 FSW shall be capable of suppressing stirring on a per-sensor basis during sensor operations.” STP test set 4.2 WCHEM-HL verifies “suppressing stirring” but not “on a per-sensor basis during sensor operations,” thus does not verify or trace to the SRS 4.1.2.16 requirement.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1526,Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.8,3,"Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also, it is not clear if the “when checking is enabled” condition is included in the Inst5 test set 4.1 WCHEM-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1525,Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.7,3,"Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. Also, it is not clear if the “when checking is enabled” condition is included in the Inst5 test set 4.1 WCHEM-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1524,Inst5 test set 4.1 WCHEM-BASIC needs better time specification with SRS 5.2.1.7,4,"Inst5 test set 4.1 WCHEM-BASIC needs better time specification with SRS 5.2.1.7. SRS 5.2.1.7 states that “The Inst5 FSW shall send all collected telemetry data to the lander immediately upon completion of processing.” STP Section 4.1.1 Test Objectives, “…Verify that FSW data products are sent to Lander immediately on end of processing,” and Section 4.1.2 Test Method, “…Verify that data product was downlinked immediately on completion of the MC_WC_READ command.” The STP and SRS are consistent in using the term “immediately,” however, for accurate testing, there should be a time limit specification ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005 ification for the “immediately.”",1/5/06ProjectE - TIM - 1523,Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 4.1 WCHEM-BASIC, “Verify that FSW downlinks valid wet-chem data products, time-stamped and ID-numbered, using the high-priority APID” is specified. Inst5 STP test set test set 4.1 WCHEM-BASIC, however, does not explicitly verify the SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1522,Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.6.1.7,3,"Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.6.1.7. SRS 4.6.1.7 states “Command execution progress shall be included in telemetry for all commands requiring more than one second to execute.” STP test set 4.1 WCHEM-BASIC does not verify or trace to the SRS 4.6.1.7 requirement for “all commands requiring more than one second to execute.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1521,Inst5 test set 4.1 WCHEM-BASIC does not completely verify SRS 4.1.2.14,3,"Inst5 test set 4.1 WCHEM-BASIC does not completely verify SRS 4.1.2.14. Test set 4.1 WCHEM-BASIC covers the “capability for repeated reads” verification of SRS 4.1.2.14, “The Inst5 FSW shall provide the capability for repeated reads of any/all of the WCL data,” but not “reads” of “all of the WCL data.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1520,Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.1.2.13,3,"Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.1.2.13. SRS 4.1.2.13 states ¡§The Inst5 FSW shall raise the drawer temperature to at least -20¢X C before opening or closing the drawer, to prevent damage.¡¨ In the Test Method of Inst5 test set 4.1 WCHEM-BASIC, the following is specified. ¡§For each cell: ¡K ƒá Issue MC_WC_ENABLE. ƒá Verify that the FSW sets WCL to the Enabled state. ƒá Clear the WCHEM-done global variable. ƒá Issue MC_WC_DRWR_OPEN with 30 second open duration and allow to close. ƒá Verify that the drawer opens, holds for 30, then closes. ƒá Verify that FSW sets the WCHEM-done global variable at the completion of the command. ƒá Issue MC_WC_DRWR_OPEN with 2 minute open duration. ƒá After one minute issue MC_WC_DRWR_CLOSE. ƒá Verify that the drawer closes before the full 2 minute duration has expired. ƒá Issue MC_WC_DRWR_OPEN with 2 minute open duration and allow to close automatically after 2 minutes have expired. ƒá Verify that after two minutes the drawer closes.¡¨ Inst5 STP test set 4.1 WCHEM-BASIC, however, does not explicitly verify SRS 4.1.2.13 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06ProjectE - TIM - 1519,Inst5 test set 4.1 WCHEM-BASIC is incomplete in test for SRS 4.1.2.8,3,"Inst5 test set 4.1 WCHEM-BASIC is incomplete in test for SRS 4.1.2.8. Inst5 test set 4.1 WCHEM-BASIC includes testing of monitoring “temperature sensors” in a single WCL cell, but it has no timing verifications for the “at least one time per minute” requirement of SRS 4.1.2.8. The Inst5 SRS 4.1.2.8 states ""The Inst5 FSW shall be capable of monitoring any or all temperature sensors in a single WCL cell at one time, at least one time per minute."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1518,Inst5 test set 4.1 WCHEM-BASIC does not trace to SRS 4.1.2.7,3,"Inst5 test set 4.1 WCHEM-BASIC does verify SRS 4.1.2.7 as provided in Appendix E of Inst5 STP. The Inst5 SRS 4.1.2.7 states that ""For voltammetry (ASV, CV, DO), the Inst5 FSW shall provide parameters to the FPGA to enable it to return an array of data without allowing the PACI interface to time out (“trickle mode”)."" Among the Test Objectives of Inst5 test set 4.1 WCHEM-BASIC, “Verify that FSW validates all FPGA responses, and faults the instrument given an illegal response” is specified. Inst5 STP test set 4.1 WCHEM-BASIC, however, does not explicitly verify SRS 4.1.2.7 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1517,Inst5 test set 4.1 WCHEM-BASIC does not trace to SRS 4.1.2.6,3,"Inst5 test set 4.1 WCHEM-BASIC does not trace to SRS 4.1.2.6 as provided in Appendix E of Inst5 STP. The Inst5 SRS 4.1.2.6 states ""The Inst5 FSW shall set the 1KHz clock in the FPGA to a specified value prior to reading out conductivity data as per the Inst5 Hardware Software Interface Control Document."" Among the Test Objectives of Inst5 test set 4.1 WCHEM-BASIC, “Verify that FSW validates all FPGA responses, and faults the instrument given an illegal response” is specified. Inst5 STP test set 4.1 WCHEM-BASIC, however, does not explicitly verify or trace to the SRS 4.1.2.6 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1516,Inst5 test set 4.1 WCHEM-BASIC does not cover all “the chemical sensors” of SRS 4.1.2.5,3,"Inst5 test set 4.1 WCHEM-BASIC does not cover all “the chemical sensors” of SRS 4.1.2.5. SRS 4.1.2.5 “The Inst5 FSW shall implement a command to read the chemical sensors in a specified wet chemistry cell at a commanded rate for a commanded duration.” The “chemical sensors” in the SRS seem defined as the “Wet-Chem sensors (ISE, DOX, CON, and MEA) in the Inst5 HW SW ICD of Artifact 3). The test set 4.1 WCHEM-BASIC appears to cover verification for ISE’s only (not DOX, CON, or MEA). ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1515,Inst5 test set 4.1 WCHEM-BASIC covers minimally SRS 4.1.2.4 verification,3,"Inst5 test set 4.1 WCHEM-BASIC covers minimally SRS 4.1.2.4 verification. SRS 4.1.2.4. states “The Inst5 FSW shall handle the data return of all WCL functions specified in the Inst5 Hardware Software Interface Control Document.” Inst5 test set 4.1 has no test specifications verifying “the data return of all WCL functions” of SRS 4.1.2.4. For example, data return such as CV/SWASV (MEA1/MEA2), dissolved oxygen (DOX), and conductivity (CON) experiments, as in Section 5.2 WCL Return Data Packet Size of Artifact 3) Inst5 HW SW ICD states that “The WCL data includes results from the ISEs, CV/SWASV (MEA1/MEA2), dissolved oxygen (DOX), conductivity (CON) experiments, temperature and pressure sensor reads,” is not verified in the Inst5 test set. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1514,Inst5 test set 4.1 WCHEM-BASIC is unclear in its test specification,3,"Inst5 test set 4.1 WCHEM-BASIC is unclear in its test specification. The 4.1.2 Test Method specifies for each Wet Chemistry cell “…Issue MC_WC_RLS_RGT. Verify that the actuator works as expected,” then “… Verify that the actuator works as expected and that the software records activities correctly.” It is not clear what is meant by “works as expected.”",1/4/06ProjectE - TIM - 1513,Inst5 SRS requirement 4.1.2.1 is not specific in using the term “the tank”,5,"Inst5 SRS requirement 4.1.2.1 is not specific in using the term “the tank,” presumably “the tank” refers to the water tank in the wet chemistry cells. The SRS requirement 4.1.2.1 states ""The Inst5 FSW shall implement a command that heats the tank in a specified wet chemistry cell for a commanded duration."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1512,Inst5 test set 4.1 WCHEM-BASIC does not satisfy SRS 3.2.2.3,3,"Inst5 test set 4.1 WCHEM-BASIC does not satisfy SRS 3.2.2.3. It is not apparent with the 4.1 WCHEM-BASIC test set that the SRS 3.2.2.3 requirement of ""...requesting between 2 and 4030 bytes of return data..."" is tested. The SRS 3.2.2.3 requirement states that “The Inst5 FSW shall be capable of requesting between 2 and 4030 bytes of return data from the Inst5 hardware through the low-speed PACI interface.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1511,Inconsistency in global variable names of the Inst5 STP test set 4.1 WCHEM-BASIC,4,"Inconsistency in global variable names of the Inst5 STP Test Set 4.1 WCHEM-BASIC. The term “wet-chem-done” in the 4.1.1 Test Objectives and “WCHEM-done” in the 4.1.2 Test Method seem refer to the same global variable in test set 4.1 WCHEM-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06ProjectE - TIM - 1510,Inst5 test set 3.1 BOOTUP does not default the data set ID number,3,"Inst5 test set 3.1 BOOTUP does not default the data set ID number. SRS 5.2.1.6 “The Inst5 FSW shall default the data set ID number ‘XXX00000’ unless specified in the data acquisition command” is not tested or traced in the STP. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06ProjectE - TIM - 1509,Inst5 test set 3.1 BOOTUP does not verify SRS 5.2.1.5.,3,"Inst5 test set 3.1 BOOTUP does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 3.1 BOOTUP, “Verify that software can read CME and AFM status data, and return the data in downlinked science telemetry as time-stamped and ID-numbered data products” is specified. Inst5 STP test set 3.1 BOOTUP, however, does not explicitly verify SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06ProjectE - TIM - 1508,Inst5 test set 3.1 BOOTUP is not explicit and specific in “time stamp” for traceability to SRS 5.2.1.3,3,"Inst5 test set 3.1 BOOTUP is not explicit and specific in “time stamp” for traceability to SRS 5.2.1.3. The Inst5 test set verifies if the Inst5 data products are “time-stamped,” but includes no specification to test if the time stamp “reflects the time at which the command to acquire the data was issued.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06ProjectE - TIM - 1507,SRS 3.3.2.4 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document,3,"The SRS 3.3.2.4 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 3.3.2.4 in the Inst5 SRS states that “The Inst5 FSW will send appropriate error messages, and set the fault condition to “failed”, should the Inst5 Alive and Idle discrete lines fail to signal “Ready” and “Idle” within a parameterized amount of time.” The SRS 3.3.2.4 provided in the Inst5 STP has “within a TBD amount of time” specification, instead. Also, the “appropriate error messages” and “failed” fault condition are implicitly addressed in EVR messages of the test output of Inst5 test set 3.1 BOOTUP. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06ProjectE - TIM - 1506,Inst5 test set 3.1 BOOTUP does not call out the detail of the “CME Status Data” of SRS 5.2.1.4,4,"Inst5 test set 3.1 BOOTUP does not call out the detail of the “CME Status Data” as specified in SRS 5.2.1.4 ""The CME Status Data shall consist of the following: a) A time stamp showing when the status read command was issued to the CME b) The 22 byte status data buffer information from the CME c) The 42 byte command echo from the CME d) A Inst5 FSW-generated data set ID number.” IV&V recommends that the detailed specifications be included in the STP Inst5 test sets. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06ProjectE - TIM - 1505,Inst5 test set 3.1 BOOTUP has no explicit verification of SRS 3.2.2.1,3,"Inst5 test set 3.1 BOOTUP has no explicit verification of SRS 3.2.2.1. It is not apparent with the BOOTUP test set that the command length ""between 2 and 42 bytes"" as specified in SRS 3.2.2.1 is verified. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06ProjectE - TIM - 1504,Inst8/ICD Analysis Incomplete Due to Lack of Documents,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2004 ProjectE Spacecraft-to-Robotic Arm (Inst9)/ Robotic Arm Camera (Inst8) Interface Control Document, PHX-98-0066, February 10, 2005 Level 5 requirement ""5.1.4 Spacecraft Memory Requests"" trace to the ICD requirement ""3.2.1.2.2.1 DRAM Allocation"": ""The total payload DRAM allocation shall be as shown in the ProjectE Project Exhibit III. ..."" Analysis for this requirement is incomplete due to IV&V not having access to Exhibit III. Level 5 requirement ""6.2.8 APID Definitions"" traces to an ICD requirement, but also states ""The MIS SW shall conform to the APID definitions contained in the MIS Software Command and Telemetry Definitions document."" Analysis for this requirement is incomplete due to IV&V not having access to the MIS Software Command and Telemetry Definitions document.",11/29/05ProjectE - TIM - 1503,Inst10 Level 5 Requirement Has No Parent,3,"Artifact: CDR-MDR-PHX-7862 Revision 1.0 Level 5 requirements SRSR150 ""3.2.1.4.2 File Transfer Error Handling"" has no trace provided. ""3.2.1.4.2 File Transfer Error Handling Upon detecting a file transfer protocol error, the MPTMS CSCI shall: a) discard the block or ignore the block request, and b) log the error, if, per the protocol, the file transfer is canceled by the Lander or MPTMS CSCI: c) return to the Idle state.""",11/29/05ProjectE - TIM - 1502,Inst6 Level 5 Requirement Has No Parent,3,"Artifact: Software Requirements Specifications for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Level 5 requirement ""6.4 Instrument Operational Parameters"" does not have a provided trace. ""6.4 Instrument Operational Parameters The software shall be capable of accepting (updating) and retrieving operational parameters for each instrument.""",11/29/05ProjectE - TIM - 1501,Level 5 Requirement Does Not Fully Address Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional REquirements Document, Draft, September 3, 2004 Level 5 requirement “8.5.1 Exposure Operation Monitoring” does not fully address Level 4 requirements “4.1.6.11 CCD Command Pass-Through” and “4.1.6.12 CCD Command Response Handling.” ""8.5.1 Exposure Operation Monitoring The software shall monitor the operation of the camera control electronics for correct operation during CCD exposures by utilizing the discrete BUSY signal line."" ""4.1.6.11 CCD Command Pass-Through The Inst6 control electronics shall provide the ability to pass through commands from the flight software to the CCD cameras."" ""4.1.6.12 CCD Command Response Handling The Inst6 control electronics shall provide the ability to return command responses from the CCD cameras directly to the flight software.""",11/29/05ProjectE - TIM - 1500,Level 5 Requirement Is Not As Specific As the Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement “8.3.3 Image Processing Tables and Models” is not as specific as Level 4 requirement “4.2.3 Inst6 Data and Software Storage”. ""8.3.3 Image Processing Tables and Models The software shall have the capability of utilizing hot pixel tables and bad pixel tables for each CCD."" ""4.2.3 Inst6 Data and Software Storage The Inst6 software will require dynamic memory to allow for the creation of buffers for data processing, and compression. The Inst6 software will also require non-volatile storage for the software program logic, image correction data and the telemetry buffer in the event that the Lander dynamic memory is turned off for any period.""",11/29/05ProjectE - TIM - 1499,Level 5 Requirement Does Not Address Level 4 Requirements,3,"Artifacts: Software Requirements Specificationf or the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Docuemnt, Draft, September 3, 2004 Level 5 requirement “7.2.11.3 Inst6 Valid Motion Range” does not address Level 4 requirement “4.1.2.1 Azimuth Pointing” or “4.1.2.2 Elevation Pointing.” ""7.2.11.3 Inst6 Valid Motion Range The software shall check the new position value for valid range, and issue an error message for any new position value that exceeds the predeinfed range for a particular actuator."" ""4.1.2.1 Azimuth Pointing The gimbal assembly shall be able to point the camera head in 357 degrees of azimuth"" ""4.1.2.2 Elevation Pointing The gimbal assembly shall be able to point the camera head in 180 degrees of elevation, from the zenith to the nadir.""",11/29/05ProjectE - TIM - 1498,Inst6 Level 5 Requirements Do Not Fully Satifsy Level 4 Requirement,2,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements “7.2.10.10SSI Filter Wheel Index Sensor Failure,” “6.5.2 Reset Signal,” “10.1.4.1 Busy Inactive Fault Recovery,” “10.1.4.2 Busy Active Time-Out Fault Recovery,” “10.1.5 Discrete I/O Verification Errors,” “10.1.6 Analog Input Faults,” “10.3 Event Reporting,” and “6.5.2 Reset Signal” do not fully satisfy the Level 4 requirements ""4.3.2 CCD Fault Protection” –“In the event of a failed CCD or its associated electronics in the Inst6 camera head, the camera electronics shall be able to shut off power to the failed CCD under software control and continue to acquire images with the remaining CCD.”",11/29/05ProjectE - TIM - 1497,Inst6 Level 5 Requirement Does Not Fully Trace to Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement “7.2.10.9 Filter Wheel Index Sensor Power” – “The filter wheel index position sensor lamp shall be turned off when not being used to detect filter wheel position” specifies a condition not defined in Level 4 requirement “4.1.6.10 Filter Wheel Index Sensor Control” – “The Inst6 control electronics shall have the ability to control of the filter wheel index sensor lamp and detect the output of the index optical sensor.” The condition “to detect filter wheel position” is not covered in ""4.1.6.10"".",11/29/05ProjectE - TIM - 1496,Inst6 Level 5 Requirements Trace to Non-Existent Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements ""7.2.7 Preheat Control Mode Assignment"" and ""7.2.8 Motion Constraint"" each trace to non-existent requirements ""Inst6 FRD 4.1.4.6"" and ""Inst6 FRD 4.1.4.9"". ""7.2.7 Preheat Control Mode Assignment Each actuator shall have independent control with regards to preheat (On/Off), preheat mode and timing parameters."" ""7.2.8 Motion Constraint The instrument control software shall not command actuator motion if an actuator is below its rated minimum operating temperature.""",11/29/05ProjectE - TIM - 1495,Inst6 Level 5 Requirement Traces to Level 4 Requirement with TBD Specifications,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements ""7.1.1 Global Actuator Thermal Control Parameters"", ""7.2 Actuator Preheat"", and ""7.2.5 Overtermperature Monitor"" all trace to ""4.1.4.3 Actuator Heating Characteristics"" which contains specifications that are TBD Level 5 requirements ""7.1.1 Global Actuator Thermal Control Parameters"" and ""7.2"" Actuator Preheat"" also trace to ""4.1.4.5 Actuator Heating Control"" which contains specifications that are TBD. ""7.1.1 Global Actuator Thermal Control The following configurable thermal control parameters shall be utilized for all instrument actuators: Actuator Preheat Time The maximum time in seconds to heat an actuator when it is below the preheat set point. 16-bit Integer (unsigned) Actuator Preheat Minimum Temperature The temperature, in non-fractional degrees C, below which the motor heating activity shall be invoked when in automatic mode. 16-bit Integer (signed) Actuator Preheat Nominal Temperature The target temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed) Actuator Preheat Maximum Temperature The maximum temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed)"" ""7.2 Actuator Preheat The MIS software shall support the use of a preheat mode for each rotary motion actuator in the Inst6 and Inst8 instruments. The intent of the preheat mode is to allow a particular actuator to reach and maintain a predefined safe operating temperature range prior to the issuance of motion control commands."" ""7.2.5 Overtemperature Monitor The MIS software shall support the capability to detect a real or potential actuator overheat condition regardless of control mode and discontinue motion or motor heating until the overtemperature condition is resolved."" ""4.1.4.3 Actuator Heating Characteristics Each actuator heater shall be capable of bringing the motor to a minimum operating temperature of -50¢ª C within (TBD) minutes from a starting temperature of (TBD) degrees."" ""4.1.4.5 Actuator Heating Control Software shall not command motor operation unless the motor is at the minimum operating temperature.""",11/29/05ProjectE - TIM - 1494,Level 5 Requirement Is Not As Specific And Does Not Fully Satisify Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement ""7.1.2 Inst6 Azimuth Axis Parameters"" is not as specific as Level 4 requirement ""4.1.3.4 Azimuth Motion"" and when combined with “7.1.3 Inst6 Elevation Axis Parameters,” and “7.1.4 Inst6 Filter Wheel Parameters” does not fully satisfy the Level 4 requirements: “4.1.6.2 Stepper Motor Step Rate” and “4.1.6.5 Stepper Motor Step Count”. The Level 5 requirements define the configurable motion control parameters, but do not specify any acceptable parameter/range values. ""7.1.2 Azimuth Axis Parameters The following configurable motion control parameters shall be utilized for the azimuth axis of the Inst6: Table 2 - Inst6 Azimuth Axis Parameters Parameter Usage Type Azimuth Step Range The total step range of the azimuth axis actuator from CCW stop to CW stop. 16-bit Integer (unsigned) Azimuth Stop Phase The stepper motor rotor phase position when at the CW hard stop. 16-bit Integer (unsigned) Azimuth Step Rate The maximum rate, in steps/second, at which the azimuth actuator shall be operated. 16-bit Integer (unsigned) Azimuth Stop Oversteps The number of additional steps to be performed when moving the azimuth into the hard stop. 16-bit Integer (unsigned) Last Step Power Hold Time The amount of time, in milliseconds, to hold power to the last activated step phase at the completion of an azimuth movement. 16-bit Integer (unsigned) Step Direction Transition Point The step number above which steps should be approached from the alternate direction. 16-bit Integer (unsigned)"" ""7.1.3 Inst6 Elevation Axis Paramters The following configurable motion control parameters shall be utilized for the elevation axis of the Inst6: Table 3 - Inst6 Elevation Axis Parameters Parameter Usage Type Elevation Step Range The total step range of the elevation axis actuator from parked position (full down rotation) stop to the maximum elevation stop. 16-bit Integer (unsigned) Elevation Step Rate The maximum rate, in steps/second, at which the elevation actuator shall be operated. 16-bit Integer (unsigned) Elevation Stop Oversteps The number of additional steps to be performed when moving the elevation into the nadir hard stop. 16-bit Integer (unsigned)"" ""7.1.4 Inst6 Filter Wheel Parameters The following configurable motion control parameters shall be utilized for the filter wheel of the Inst6: Table 4 - Inst6 Elevation Axis Parameters Parameter Usage Type Filter Wheel Step Rate The maximum rate, in steps/second, at which the filter wheel shall be operated. 16-bit Integer (unsigned)"" ""4.1.3.4 Azimuth Motion Azimuth motion shall be commanded under software control at 0.288 degrees/step, with a maximum backlash of ± 5.7 mrad."" ""4.1.6.2 Stepper Motor Rate The Inst6 control electronics shall provide the ability to define the step rate for each actuator independently."" ""4.1.6.5 Stepper Motor Count The Inst6 control electronics shall provide the ability to operate each stepper motor actuator for a specific number of steps, and in a specified direction (CCW or CW) as defined by software commands.""",11/29/05ProjectE - TIM - 1493,Inst4: Discrepancy between SDD Inst4_WriteSerial and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.9.9 Inst4_WriteSerial, and Page 28 of Artifact 2). Section 5.9.9 The Inst4_WriteSerial function and the ""Handle Write to PACI"" code flow chart are not consistent and cannot be verified in the “good,” “suspect, ” or “failed” Inst4 condition setting, or in the ""if fault response is enabled.""",11/28/05ProjectE - TIM - 1492,Inst4: Clarification on Inst4_WriteSerial is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.9.9 Inst4_WriteSerial Section 5.9.9 The Inst4_WriteSerial function specifies that “The function attempts to write the information in the buffer to the PACI. If the write fails on the first write, another attempt to make the write is made. Succesive attempts are made to make the write until the write is tried the configurable number of times, stored in Inst4_maxPaciRetry. If the write still fails, the write status is set to ERROR. If the write to the PACI is sucessful, the write status is set to number of bytes written. The PACI must have enough time to process the write, so to give the PACI time to process the information, a delay porportional to the number of bytes written is used as input to the Inst4_DelayForSeconds function (Section 5.8.3) which is called between writes.” It is not clear what sets the Inst4_maxPaciRetry.",11/28/05ProjectE - TIM - 1491,Inst4: Clarification on Inst4_OnReadResult is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.9.6 Inst4_OnReadResult, and Page 35 of Artifact 2). Section 5.9.6 Though the Inst4_OnReadResult function seems to define a “fault” from “error,” the “error counter” and “fault counter” are used interchangeably in the “Handle Read From PACI” code flow chart and this Section.",11/28/05ProjectE - TIM - 1490,Inst4: Discrepancy between SDD Inst4_DelayCommand and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.8.5 Inst4_DelayCommand, and Page 21 of Artifact 2). Section 5.8.5 The Inst4_DelayCommand function states “the command is copied to the end of the queue, the count is incremented, and OK is returned.” The “Delayed Commands 2” code flow chart under “Add” does not reflect “the count is incremented.”",11/28/05ProjectE - TIM - 1489,Inst4: Clarification on Inst4_StopHeartCheck is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.7.5 Inst4_StopHeartCheck Section 5.7.5 states “The Inst4_StopHeartCheck function stops the heartbeat timer, and looking for a heartbeat in response to a message sent from the Inst4 FSW.” It is not clear what “looking for a heartbeat in response to a message sent from the Inst4 FSW” is.",11/28/05ProjectE - TIM - 1488,Inst4: Discrepancy between SDD Inst4_StartHeartCheck and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.7.4 The Inst4_StartHeartCheck, and Page 33 of Artifact 2). Section 5.7.4 The Inst4_StartHeartCheck function “resets the heartbeat counters, states and timers with the Inst4_ResetHeartSettings function (Section 5.7.7). The timer is then set to be cyclic by setting the check heartbeat value and interval with values from the configuration file.” The “Handle Heartbeat Check Start” code flow chart on Page initializes “Heartbeat Settings” then “Reset detection counter.”",11/28/05ProjectE - TIM - 1487,Inst4: Discrepancy between SDD Inst4_OnHeartCheck and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.7.3 The Inst4_OnHeartCheck, and Page 32 of Artifact 2). Section 5.7.3 The Inst4_OnHeartCheck function checks in the order of “If the heartbeat is found” first, then if “fault protection detection is enabled.” The “Handle Heartbeat Check” code flow chart has the check order in reverse. Moreover, the flow chart is not consistent with or does not reflect the Section in the “good,” “suspect, ” or “failed” Inst4 condition setting, or in the ""if fault response is enabled.""",11/28/05ProjectE - TIM - 1486,Inst4: Documentation clarification on Inst4_ResetDiscreteSettings is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.12 Inst4_ResetDiscreteSettings, and Page 13 of Artifact 2). It is not clear if Section 5.5.12 Inst4_ResetDiscreteSettings function is depicted as “Setup Discrete structure” in the “Handle Reset” code flow chart on Page 13. The Inst4_ResetDiscreteSettings function or its design does not seem reflected in any code flow charts, otherwise.",11/28/05ProjectE - TIM - 1485,Inst4: Documentation clarification on Inst4_OnStartBootSelTimer is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.5.11 The Inst4_OnStartBootSelTimer function defines that the “Inst4_OnStartBootSelTimer function starts the timer that returns the boot select discrete to its default state,” and that “The function begins by setting the boot select timer to the current boot select active value.” It is not clear whether the “boot select discrete to its default state” is equivalent to or consistent with “boot select timer to the current boot select active value”?",11/28/05ProjectE - TIM - 1484,Inst4: Documentation clarification on Inst4_OnStopSyncTimer is needed.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.10 The Inst4_OnStopSyncTimer, and Page 25 of Artifact 2). Section 5.5.10 The Inst4_OnStopSyncTimer function states that “If the timer is not correctly set, the function generates an error.” This is not explicit in the “Handle Stop Time SYNC Timer” code flow chart on Page 25.",11/28/05ProjectE - TIM - 1483,Inst4 Design: Level 5 Requirement 5081-2 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Section 5.4.3 Inst4_HandlePwrMsgs, Section 5.4.5 Inst4_OnEpsCompState, and the associated code flow charts do not fully satisfy the Level 5 Requirement 5081-2 “TEFSW shall not allow Inst4_MAIN2 to be ON if Inst4_MAIN1 is OFF.”",11/28/05ProjectE - TIM - 1482,Inst4 Design: Level 5 Requirement 5067 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. The Level 5 Requirement 5067 “System Message handling The TEFSW shall handle the following system level messages: a) SYS_INIT b) SYS_PING c) SYS_FP_ENAB d) EPSO_COMP_STATE e) Inst4_RESET f) Inst4_SAFING g) Inst4_POWER_DOWN” is not fully traceable in the Inst4 design document.",11/28/05ProjectE - TIM - 1481,Inst4 Design: Level 5 Requirement 5063Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. The traceability to the Level 5 Requirement 5063 “Invalid Command Handling Invalid commands (incomplete, invalid or corrupted) shall cause the software to issue an error message via the LMA FSW EVR facility, increment a fault protection error counter for interrogation by the LMA FSW and cease processing the current command” seems incomplete and needs clear documentation in the Inst4 design document.",11/28/05ProjectE - TIM - 1480,Inst4 Design: Level 5 Requirement 5050-1.4 Traceability,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5050-1.4 “In the case of a failed state, TEFSW shall run a Inst4 heartbeat-failure command sequence no more that 10 commands in length” is not traceable in the Inst4 design document.",11/28/05ProjectE - TIM - 1479,Inst4 Design: Level 5 Requirement 5050-1.2 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Section 5.7.3 Inst4_OnHeartCheck and Section 5.9.6 Inst4_OnReadResult do not fully satisfy the Level 5 Requirement 5050-1.2 “The TEFSW shall define a failed state as when the flight software has failed to receive a Inst4 heartbeat or when commanded to perform an instrument reset.”",11/28/05ProjectE - TIM - 1478,Inst4 Design: Level 5 Requirement 5030-1 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5030-1 “The science data received from the Inst4 instrument shall be passed to the Lander for downlink” seems implied and needs clear documentation in the Inst4 design document.",11/28/05ProjectE - TIM - 1477,Inst4 Design: Level 5 Requirement 5020-1 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5020-1 “The engineering data received from the Inst4 instrument shall be passed to the Lander for downlink” seems implied and needs clear documentation in the Inst4 design document.",11/28/05ProjectE - TIM - 1476,Inst4 Design: Level 5 Requirement 5003-1.1 Traceability,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5003-1.1 ""Time update intervals shall be configurable"" is not traceable in the Inst4 design document.",11/28/05ProjectE - TIM - 1475,Inst4: Discrepancy between SDD Inst4_OnStartSyncTimer and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.9 The Inst4_OnStartSyncTimer, and Page 24 of Artifact 2). Section 5.5.9 The Inst4_OnStartSyncTimer function defines “If the timer is not correctly started, the function generates an error. Passthrough commands are then delayed for a configurable period to allow for instrument recovery with a call to Inst4_DelayCommandsForSeconds (Section 5.8.3).” The “Handle Start Time SYNC Timer” code flow chart on Page 24 does not specify such error generation.",11/28/05ProjectE - TIM - 1474,Inst4: Clarification on Inst4_OnSyncTime is needed.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.8 The Inst4_OnSyncTime, and Page 23 of Artifact 2). Section 5.5.8 The Inst4_OnSyncTime function states that the function return is “either an OK or an ERROR,” the design description in this Section, however, does not define any return value. In addition, the “Handle Time Sync” code flow chart on Page 23 shows error reporting and no “time synch time and counters” downlink.",11/28/05ProjectE - TIM - 1473,Inst4: Discrepancy between SDD Inst4_OnStopResetPulse and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.7 The Inst4_OnStopResetPulse, and Page 14 of Artifact 2). Section 5.5.7 The Inst4_OnStopResetPulse function states that “The boot select timer is then started with a call to Inst4_OnStartBootSelTimer (Section 5.5.11) and, if MAIN1 power is on, time synchs are started with a call to Inst4_OnStartSyncTimer (Section 5.5.9).” The “Handle Stop Reset Pulse” code flow chart on Page 14 starts “Sync Timer” without any Main1 power on check.",11/28/05ProjectE - TIM - 1472,Inst4: Discrepancy between SDD Inst4_OnReset and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.6 Inst4_OnReset, and Page 13 of Artifact 2). Section 5.5.6 The Inst4_OnReset function defines that “If the write is sucessful, then the pulse reset timer is set to the correct duration and stored. If the pulse reset timer fails to be reset for some reason, an error is generated. The reset counter is then incremented, and the reset time and counter are stored.” The “Handle Reset” code flow chart, on Page 13, after the failed or successful pulse reset timer process, sets “Channelized Telemetry” before return. There is no error generation or reset time or reset counter depicted.",11/28/05ProjectE - TIM - 1471,Inst4: Documentation error on Inst4_HandleDiscreteMsgs.,5,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.5.2 Inst4_HandleDiscreteMsgs In Section 5.5.2 Inst4_HandleDiscreteMsgs, the Section reference to the Inst4_OnReset function should be Section 5.5.6, not Section 5.5.5.",11/28/05ProjectE - TIM - 1470,Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart,3,"Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 specifies that “In the case of an EPS_COMP_OFF message, Inst4_iPowerState is set to on for the component with a call to Inst4_SetPowerState (Section 5.4.8). If the component is MAIN1, timers are stopped with the Inst4_OnStopSyncTimer function (Section 5.5.10), and heartbeat checks are stopped with the Inst4_StopHeartCheck function (Section 5.7.5), and any current file load is stopped with the Inst4_AbortFileLoad function (Section 5.2.7).” The “Inst4_AbortFileLoad” is not in the “Handle EPS Response” code flow chart on Page 11. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1469,Inst4: Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart,3,"Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 specifies that “In the case of an EPS_COMP_ON message, Inst4_iPowerState is set to on for the component with a call to Inst4_SetPowerState (Section 5.4.8). If the component is MAIN1 power, start the heartbeat check timer with a call to Inst4_StartHeartCheck (Section 5.7.4), the time sync timer with a call to Inst4_OnStartSyncTimer (Section 5.5.9) [which also starts to command delay timer for power on/reset], and the timer to deassert the Inst4_BOOT_SELECT discrete with a call to Inst4_OnStartBootSelTimer (Section 5.5.11). Then, downlink power information along with heartbeat and discrete information.” The “Handle EPS Response” code flow chart on Page 11 defines “Start Time Sync Timer” first then “Start Heartbeat Check,” instead. Also, “the timer to deassert the Inst4_BOOT_SELECT discrete with a call to Inst4_OnStartBootSelTimer” is not in the code flow chart design. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1468,Inst4: Discrepancy between SDD Inst4_HandlePwrMsgs and CDR code flow chart.,3,"Section 5.4.3 Inst4_HandlePwrMsgs, and Pages 7 and 11 of Artifact 2). Section 5.4.3 Inst4_HandlePwrMsgs states “If the message is the MSG_ID_Inst4_REPLACEMENT_HEATER_POWER, the power to the replacement heaters is turned on or off in the same manner as the Inst4 powers by calling the eps_comp_set_state LMA function.,” is not defined in the “Handle Power Messages” code flow chart on Page 7. Additionally, there is a ""If Heater"" process in the “Handle EPS Response” code flow chart of Page 11 that is not traceable to the SDD. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1467,Inst4: Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 provides no design specifications for “If the component is MAIN2 power” for either “In the case of an EPS_COMP_ON message” or “In the case of an EPS_COMP_OFF message.” The “Handle EPS Response” code flow chart depicts flow logic for this.",11/28/05ProjectE - TIM - 1466,Inst4: Discrepancy between SDD Inst4_HandleDownlink and CDR code flow chart,3,"Section 5.3.5 Inst4_HandleDownlink, and Page 31 of Artifact 2). Section 5.3.5 Inst4_HandleDownlink function states that ""If there are problems with Downlink_CreateAndBufferM, an error is generated."" The Handle Data code flow chart, on Page 31, does not specify the error generation. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1465,Inst4: Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 specifies that “If the message is EPS_COMP_FAILED, then the EPS change state request failed, and, if the component was MAIN1 and MAIN2, then fault protection is performed (Inst4_DoPowerFP function Section 5.4.1). Additionally, if MAIN1 failed, then MAIN2 is switched off.” The design flow logic of the “Handle EPS Response” code flow chart does not include “if MAIN1 failed, then MAIN2 is switched off.”",11/28/05ProjectE - TIM - 1464,Inst4: Discrepancy between SDD Inst4_HandleSetGlobal and CDR code flow chart,3,"Section 5.3.4 Inst4_HandleSetGlobal, and Page 31 of Artifact 2). Section 5.3.4 Inst4_HandleSetGlobal in decoding a VML data packet states that “if the id is unrecognized, an error is generated.” The Handle Data code flow chart, on Page 31, does not specify the error generation. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1463,Inst4: Discrepancy between SDD Inst4_OnProcessData and CDR code flow chart - Unknown Message Type Error,3,"Section 5.3.3 Inst4_OnProcessData, and Page 31 of Artifact 2). Paragraph 5 of Section 5.3.3 Inst4_OnProcessData states that “If the data is neither heartbeat nor VML data, the Inst4_HandleDownlink function (Section 5.3.5) is called to downlink it as non-channelized data with a type appropriate APID.” The logic flow in the Handle Data code flow chart, on Page 31, is discrepant from that of the above Inst4_OnProcessData Section. From the discrepancy, the design in Section 5.3.3 can possibly downlink an unknown message type error as a non-channelized data, and not generate an error EVR. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1462,Inst4: Discrepancy between SDD Inst4_OnProcessData and CDR code flow chart - Handshake,3,"Section 5.3.3 Inst4_OnProcessData, and Page 31 of Artifact 2). The Handle Data code flow chart on Page 31, before checking for the type of a received data packet, sends “Msg To Command Task to Send Handshake.” In Section 5.3.3 Inst4_OnProcessData, no such “handshake” is in the design. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1461,Inst4: Documentation error in Inst4_OnProcessData,5,"In Section 5.3.3 Inst4_OnProcessData, the reference to the Inst4_ReadSerial function should be Section 5.9.5, not Section 5.9.4.",11/28/05ProjectE - TIM - 1460,Inst4: Discrepancy between SDD Inst4_HandleTlmMsg and CDR code flow chart,3,"Section 5.3.2 Inst4_HandleTlmMsg has design information that is not flowed to the associated code charts (Pages 29 and 30 of Artifact 2). In Section 5.3.2 Inst4_HandleTlmMsg, the Inst4_SendBadMessageCount function is specified “to send a count of the total number of bad or unrecognized messages.” This is not reflected in the Inst4 Telemetry Task (Page 29) or the Handle Telemetry (Page 30) code flow chart. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1459,Inst4: Documentation error in Inst4_HandleTlmMsg,5,"In Section 5.3.2 Inst4_HandleTlmMsg, the reference to The Inst4_SendBadMessageCount function should be Section 5.9.8, not Section 5.9.7.",11/28/05ProjectE - TIM - 1458,Inst4: Clarification on Inst4_OnApidSelect is needed,4,"In section, 5.2.5 Inst4_OnApidSelect, to set the global variable that selects the APID set that the telemetry task uses to downlink the non-channelized data from the Inst4 instrument Section 5.2.5 Inst4_OnApidSelect states that ""An invalid set selection causes the low priority set to be used."" It is not clear what defines an “invalid set selection” or which “low priority set” is referred to. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05ProjectE - TIM - 1457,Inst6 Level 5 Requirements Are Not As Specific as Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements ""7.1.1 Global Actuator Thermal Control Parameters"", ""7.2 Actuator Preheat"", and ""7.2.2 Automatic Preheat"" are not compositely as specific as Level 4 requirement ""4.1.4.1 Operating Temperature Range"" and ""4.1.4.3 Actuator Heating Characteristics"". ""7.1.1 Global Actuator Thermal Control The following configurable thermal control parameters shall be utilized for all instrument actuators: Table 1 - Global Motion Control Parameters Actuator Preheat Time The maximum time in seconds to heat an actuator when it is below the preheat set point. 16-bit Integer (unsigned) Actuator Preheat Minimum Temperature The temperature, in non-fractional degrees C, below which the motor heating activity shall be invoked when in automatic mode. 16-bit Integer (signed) Actuator Preheat Nominal Temperature The target temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed) Actuator Preheat Maximum Temperature The maximum temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed)"" ""7.2 Actuator Preheat The MIS software shall support the use of a preheat mode for each rotary motion actuator in the Inst6 and Inst8 instruments. The intent of the preheat mode is to allow a particular actuator to reach and maintain a predefined safe operating temperature range prior to the issuance of motion control commands."" ""7.2.2 Automatic Preheat The MIS software shall support the ability to automatically perform a closed-loop actuator preheat in accordance with operational temperature requirements established in the Inst6 and Inst8 functional requirements documents."" ""4.1.4.1 Operating Temperature Range The Inst6 stepper motor actuators shall be capable of operation from -50¢ª C to +30¢ª C."" ""4.1.4.3 Actuator Heating Characteristics Each actuator heater shall be capable of bringing the motor to a minimum operating temperature of -50¢ª C within (TBD) minutes from a starting temperature of (TBD) degrees.""",11/28/05ProjectE - TIM - 1456,Inst6 Level 5 Requirements do not satisfy Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Image Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement ""6.5.2 Reset Signal"" states ""The reset line shall be used by the software to reset the PEB electronics ..."". Level 5 requirement ""10.1.4.1 Busy Inactive Fault Recovery"" states ""...the software shall activate the reset line to reset the electronics..."". Level 5 requirement ""10.1.5 Discrete I/O Verification Errors"" states ""...the software shall reset the hardware using the reset signal..."". Each of these requirements trace to Level 4 requirement ""4.3.2 CCD Fault Protection"" which states ""...the camera electronics shall be able to shut off power to the failed CCD under software control and continue to acquire images through the remaining CCD"". The Level 5 requirements do not satisfy the Level 4 requirement.",11/28/05ProjectE - TIM - 1455,Inst6 Level 5 Requirements 10.1.4.1 and 10.1.4.2 Are Duplicates,3,"Artifact: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Level 5 Requirements ""10.1.4.1 Busy Inactive Fault Recovery"" and ""10.1.4.2 Busy Active Time-Out Fault Recovery"" have the same text: ""If the busy signal does not become inactive in the parameter specified time then the software will activate the reset line to reset the electronics and issue an EVR."" They are also traced to the same Level 4 requirements and sections in the LMA ProjectE Payload FSW API Guide.",11/28/05ProjectE - TIM - 1454,Level 5 Requirements Aggregately Are Not As Specific As Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components, Version 1.5, September 20, 2005 Surface Stereo Imager Functinoal Requirements Document, Draft, September 3, 2004 Level 4 requirement ""4.2.4.3 Image Data Description"" states that ""One Inst6 image is 1024x1024x12 bits, uncompressed, not including headers or CCD dark/reference pixels."" The Level 5 requirements ""6.2.1 Science Data Return"", ""6.2.2 Downlink Data Processing"", ""6.2.3 Downlink Data Interfaces"", ""6.2.4 Downlink Data Formats"", ""6.6.2 Analog Inputs"", and ""6.6.2.2"" Analog Input Periodic Acquisition"" all trace to the referenced Level 4 requirement, but none are detailed to the the same extent. ""6.2.1 Science Data Return The MIS SW shall provide the ability to acquire and pass on science data to the C&DH FSW from the Inst6, Inst8 or Inst5/OM CCD imagers onboard the spacecraft."" ""6.2.2 Downlink Data Processing All data (telemetry, science and errors) shall be processed via spacecraft C&DH FSW facilities providing downlink communications services. Downlink processing refers to all data generated for return to Earth by the MIS SW."" ""6.2.3 Downlink Data Interfaces The MIS SW downlink functionality shall conform to the interface definitions contained in the LMA FSW Interfaces documents."" ""6.2.4 Downlink Data Formats The MIS SW downlink functionality shall conform to the data format definitions contained in the MIS SW Command and Telemetry Definitions documents."" ""6.6.2 Analog Inputs Analog input functionality shall be provided by the CCD control logic in the PEB. The software shall be capable of reading specific analog input signals via the instrument control electronics."" ""6.6.2.2 Analog Input Periodic Acquisition The software shall read all analog inputs at a configurable rate and pass the results to channelized telemetry.""",11/28/05ProjectE - TIM - 1453,No trace of Inst5 Req 4.2.5.2 (marking switches as bad) to the Stage component algorithms,4,"There is no trace of the requirement (4.2.5.2) to Stage Component design that would mark as bad any limit switch that is passed without detection. The requirement is as follows: Requirement 4.2.5.2: If stepper movement goes past a sought-for limit switch, the missed limit switch shall be marked bad for future reference and movement will back up to the limit switch’s position.",11/27/05ProjectE - TIM - 1452,Inst4: Documentation error in Inst4_OnSysInit,4,"In Section 5.2.2 Inst4_OnSysInit of the Inst4 Subsystem Software Design Description, the reference to Inst4_ReadConfigFile should be Section 5.9.4, not Section 5.9.3.",11/27/05ProjectE - TIM - 1451,Inst4: Discrepancy between SDD Inst4_Handle CmdMsgs and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.2.1 Inst4_Handle CmdMsgs, and Page 9 of Artifact 2). There is an incosistency between the SDD and the CDR flow chart. 5.2.1 Inst4_HandleCmdMsgs is described to handle system and generic Inst4 spacecraft commands and related messages, including MSG_ID_Inst4_CHECK_HB and MSG_ID_Inst4_REGISTER_HB messages. The Handle Command Message code flow chart on Page 9 shows no MSG_ID_Inst4_CHECK_HB or MSG_ID_Inst4_REGISTER_HB messages handled. In fact, according to the data flow chart, they are handled under “Report Bad Message.”",11/27/05ProjectE - TIM - 1450,Inst4: Documentation errors in Inst4_Handle CmdMsgs.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.2.1 Inst4_Handle CmdMsgs. Paragraph 3 of Section 5.2.1 states ""MSG_ID_Inst4_FILE_LOAD calls the Inst4_OnFileLoad function (Section 5.2.2) and loads a file,"" ""MSG_ID_Inst4_PASS_THROUGH calls the Inst4_OnPassThrough function (Section 5.2.6) to pass commands from the Land FSW to the Inst4 instrument."" The reference to the Inst4_OnFileLoad function should be Section 5.2.3, not Section 5.2.2. The reference to the Inst4_OnPassThrough function should be Section 5.2.4, not Section 5.2.6.",11/26/05ProjectE - TIM - 1449,Inst4: Documentation clarification on Inst4_Handle CmdMsgs is needed,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.2.1 Inst4_Handle CmdMsgs. Section 5.2.1 Inst4_Handle CmdMsgs states ""It does not deal with messages related to telemetry, data processing, heartbeat monitoring, power, safing, or discrete messages."" The ""Safing"" message is not defined or handled, but referred to in this Section/document. This seems to be a heritage terminology that is part of the ""fault protection"" in this document.",11/26/05ProjectE - TIM - 1448,Inst4: Inconsistency between SDD Inst4_InitDelayCommands and CDR code flow chart.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.1.4 Inst4_Cmd_Task, and Page 6 of Artifact 2). In Section 5.1.4, the Inst4_InitDelayCommands function “handles messages by dividing them into four classes: fault protection, power, discrete-related, and command related. If the message is a fault protection message, it is handled by a call to the LMA Lander fault protection function."" Code flow chart Inst4 Command Task on Page 6 shows no message class of fault protection. It, however, handles a class of ""Safing Msg."" It appears the “Safing Msg” is either a subset of or used interchangeably with the “fault protection message.” However, this is unclear from the artifacts.",11/23/05ProjectE - TIM - 1447,Inst4: Documentation clarification on Errors and EVR’s is needed,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.1.4 Inst4_Cmd_Task, and Pages 37 and 69 of Artifact 2). Section 5.1.4 states ""If the message is a fault protection message, it is handled by a call to the LMA Lander fault protection function."" Of Artifact 2), the ""TEFSW-EVRs"" on Page 37 lists a set of EVR's, and the ""386 - message dictionary"" on Page 69 displays a set of ""errors."" It is not clear if all the fault protection messages and errors handled by TEFSW are identified and documented.",11/23/05ProjectE - TIM - 1446,Inst4: Inconsistency between SDD Inst4_Init - ReadConfigFile and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW ¡V code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.1.1 Inst4_Init of Artifact 1) and Page 5 of Artifact 2). Section 5.1.1 Inst4_Init states that after setting the Inst4_Boot_Select to default, “The next major step in the initialization process is to set the fault protection condition and reset the counters initialized from the default Inst4 configuration file. The Inst4_ReadConfigFile function (Section 5.9.3) is called to read the configuration file.” The sequence of this, however, is inconsistent with the code flow chart of Inst4 Initialize task on Page 5 where “Read Config File” is executed before (error check and) “Initialize Power.”",11/23/05ProjectE - TIM - 1445,Inst4: Inconsistency between SDD Inst4_Init – Boot_Select and CDR code flow chart,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Second paragraph of Section 5.1.1 Inst4_Init of Artifact 1) and Page 5 of Artifact 2). Section 5.1.1 Inst4_Init states that ""When the PACI connections are open, the Inst4_Boot_Select discrete used to identify the EEPROM to boot from is set to the default value (low)."" The code flow chart of Inst4 Task Initialize on Page 5 shows the Inst4_Boot_Select is set after the ""Initialize PACI,"" not after ""Open Devices"" (when the PACI connections are open). It is not clear if these functions are different or if different terminology between the two artifacts is being used to mean the same thing.",11/22/05ProjectE - TIM - 1443,Lack of waiver/documentation for Reuse/Heritage Payload Software,3,"Per discussions with Contractor3 at the FS Review (Oct 24-26, 2005), IV&V was informed that any code in the payloads that is reuse or heritage is not required to follow the guidelines provided in either the LMA ProjectE Payload FSW API Guide or LMA Software Coding Conventions. However, this exception is not documented in associated requirements documents, design documents, ICDs, etc.",11/16/05ProjectE - TIM - 1442,"Inst5 Req 6.2.1.6 (Limit Switch, Retraction) is not included (traced) in Inst5 Design Elements",3,"While there are numerous design elements for enabling and turning on Inst5 components, requirement 6.2.1.6 (limit switch other than NEAR) does not trace to any design element for safing the Inst5 instrument when limit switches are not set. The Design document traces the requirement to the Error Detection and Handling Component of Inst5. The requirement is as follows: 6.2.1.6: On startup in an unknown state, the Inst5 FSW shall check that at least one translation limit switch is set other than AFM NEAR. If not, the Stage shall be retracted until a limit switch is encountered.",11/11/05ProjectE - TIM - 1441,Inst5 Req 6.2.1.4 does not trace to any specific Inst5 Design Element,3,"The requirement 6.2.1.4 does not trace to a specific design element. It traces only generally to the error detection section of the design document. The requirement is as follows: 6.2.1.4: If the CME interface fails to respond to a command with a command echo within the expected FPGA response time, the Inst5 FSW shall toggle the AFM/CME discrete line and attempt to reissue the failed command up to a specified number of retries.",11/11/05ProjectE - TIM - 1440,Inst5 requirement 6.2.1.2 does not trace to design,3,"The requirement 6.2.1.2 does not trace to a specific design element in the Error Detection and Handling section of the design document. The requirement is as follows: 6.2.1.2: The Inst5 FSW shall assume the following hardware configuration following a lander power loss, Inst5 power failure, Inst5 reset: a) All FPGA registers will be set to 0 b) Any executing FPGA command will be lost c) Any FPGA DAC parameters will be lost d) All heaters, actuators and LEDs will be powered off",11/11/05ProjectE - TIM - 1439,"Inst5 Req 6.2.1.1 (<Dis>Enabling, Shutdown) do not trace to Inst5 Design",2,"Requirement 6.2.1.1 does not trace to design element in Error Detection and Handling section of the Inst5 document. Enabling, disabling and shutdown are fundamental processes for any instrument. The requirement is as follows: 6.2.1.1: The Inst5 FSW shall save the following information in the event of an unscheduled power shutdown: a) What hardware operations are in progress. b) Which components are enabled. c) Current command statistics d) Any currently executing commands.",11/11/05ProjectE - TIM - 1438,Incomplete Trace of MEAC Req 5.2.1.7 to the CME Design Elements,5,Requirement 5.2.1.7 is compatible with the Inst5 design but does not trace to a specific design element. Immediate sending of telemetry to the lander from the instrument is not explicitly represented in the 'read' algorithms for each component of the Inst5 instrument. The requirement is as follows: 5.2.1.7: The Inst5 FSW shall send all collected telemetry data to the lander immediately upon completion of processing.,11/11/05ProjectE - TIM - 1437,Incomplete Trace of Inst5 Req 5.2.1.4 to the CME Design,4,"Requirement 5.2.1.4 traces to Appendix C and C.2.5 CME_STATUS. The time stamp [a)] and 22 byte buffer are declared; however, the 42 byte command echo and ID number are not included in the declaration. This might be because of the difference between what is delivered and then returned from the FPGA(42 byte echo) and how or where the information is stored. The requirement is as follows: 5.2.1.4: The CME Status Data shall consist of the following: a) A time stamp showing when the status read command was issued to the CME b) The 22 byte status data buffer information from the CME c) The 42 byte command echo from the CME d) A Inst5 FSW-generated data set ID number",11/11/05ProjectE - TIM - 1436,No Trace of Inst5 Req 4.5.3.1 to the TECP Design Algorithm 1.42.1(TECP Reading),3,"Requirement 4.5.3.1 does not trace to the TECP design elements. Specifically, the algorithm 1.42.1 TECP Reading does not include a condition to verify that TECP is enabled. The requirement is as follows: 4.5.3.1: The Inst5 FSW shall only collect data from the TECP if it has been previously enabled.",11/11/05ProjectE - TIM - 1435,No Trace of Req 4.5.2.3 to the TECP Design Elements,3,"There is no trace of the requirement 4.5.2.3 to TECP design elements- algorithms, public routines or commands. The requirement is as follows: 4.5.2.3: The Inst5 FSW shall be capable of querying the following information from the Robotic Arm control software: a) The position of the TECP b) The orientation of the TECP",11/11/05ProjectE - TIM - 1434,No Trace of the Inst5 Req 4.5.2.2 to the TECP Design Element,3,Requirement 4.5.2.2 does not trace to a TECP design element (algorithm). It does not trace to a public routine for TECP or a TECP command. The requirement is as follows: 4.5.2.2: The Inst5 FSW shall be capable of altering each of the following FPGA controlled values for the TECP instrument: a) 5v power and breaker b) The input mode (single-ended or differential) c) The polarity (bipolar or unipolar) d) The output data bit order e) Auto-shutdown mode f) ADC run option g) Heaters and measurement enables,11/11/05ProjectE - TIM - 1433,No Trace of Inst5 Req 4.5.2.1 to the TECP design elements,3,"Requirement 4.5.2.1 is not traceable to any TECP design element (algorithm), public routine or command. There is no command to set the rate or the duration for reading TECP sensors. The requirement is as follows: 4.5.2.1: The Inst5 FSW shall implement a command to read all TECP sensors at a commanded rate for a commanded duration.",11/11/05ProjectE - TIM - 1432,No Trace of Inst5 Req 4.4.5.2 to the AFM Design Elements,3,The AFM component design elements do not have a condition that a command only be executed if AFM is confirmed as enabled. Requirement 4.4.5.2 (confirming enabled before commanding) does not trace to any algorithm or statement that within the design to the same effect. The requirement is as follows: 4.4.5.2: The Inst5 FSW shall only command the AFM if it has been previously enabled.,11/11/05ProjectE - TIM - 1431,No Trace of Inst5 Req 4.4.4.1 to the AFM Design,3,"Requirement 4.4.4.1 does not trace to any AFM design element. There is an imaging algorithm which includes a test for completion. It is unclear whether this is the same as failing to scan a substrate. The requirement has left the number of reapproachs as TBD. The requirement is as follows: 4.4.4.1: If the AFM fails to scan a substrate, FSW shall reapproach TBD times. If scanning continues to fail, FSW will move on to the next substrate. FSW will not set the fault condition to failed.",11/11/05ProjectE - TIM - 1430,Health Check (Req 4.1.3.6) of current-draw does not trace to Inst5 Design,3,"The current-draw verification test of requirement 4.4.3.6 cannot be traced to the Inst5 design. The requirement overall traces to the frequency test, tip test and a test of the current (related to the tip test). The requirement is as follows: 4.4.3.6: The health check of the AFM shall include the following: a) a tip-test function b) a frequency test function c) current-draw verification",11/11/05ProjectE - TIM - 1429,Inst5 AFM Design does not trace to Req 4.4.3.5,3,There is no command defined in the Inst5 design that would accomplish the action defined in requirement 4.4.3.5. The requirement is as follows: 4.4.3.5: The Inst5 FSW shall implement a command to zoom into 1 of 16 image segments on the basis of a simple entropy analysis of the sub-areas.,11/11/05ProjectE - TIM - 1428,Inst5 AFM Design does not trace to Req 4.4.3.4,3,"There is no command defined in the Inst5 design that would accomplish the action defined in requirement 4.4.3.4. The requirement is as follows: 4.4.3.4: The Inst5 FSW shall acquisition of forward and backward scanning data from both the topography and error channels, or the phase and error channels, as selected by the user.",11/11/05ProjectE - TIM - 1427,Inst5 Design incorporating Req 4.4.3.3 is TBD,3,There is no trace to design of the requirement 4.4.3.3. The requirement is as follows: 4.4.3.3: The Inst5 FSW shall be able to perform the scan-surface-orientation correction based on an initial limited prescan.,11/11/05ProjectE - TIM - 1426,Inst5 Design incorporating Req 4.4.3.2 is TBD,3,"There is no trace to design of the requirement 4.4.3.2. The requirement is as follows: 4.4.3.2: The Inst5 FSW shall implement a commandable option to be able to perform a limited prescan on a sample to determine the maximum scan range possible, and determine the correct scan settings for a full scan.",11/11/05ProjectE - TIM - 1425,Inconsistent trace of Inst5 Req 4.4.2.9 to the AFM Design,3,"It is not clear whether a command has been defined to execute requirement 4.4.2.9- sending low-level 32 byte commands. The closest match to requirement 4.4.2.9 is the command B.17 Inst5_AFM_RAW. This command sends raw commands (32 bits in length) and a list of 32 parameters is provided. Nothing defines the difference between a low-level command and a command of ""RAW"" command. The requirement is as follows: 4.4.2.9: The Inst5 FSW shall be capable of sending the AFM a pass-through low-level command (32 bytes).",11/11/05ProjectE - TIM - 1424,"Command ""Init lever sensor bridge"" does not trace to Inst5 AFM Design",3,"Requirement 5.5.2.6 states, ""The Inst5 FSW shall implement commands to perform the following low-level AFM operations, per EasyScan User’s Manual:"" and of the 8 low-level operations, one (lever sensor bridge) does not trace to the command list for AFM: h) Init lever sensor bridge The requirement is as follows: 4.4.2.6: The Inst5 FSW shall implement commands to perform the following low-level AFM operations, per EasyScan User’s Manual: a) Do Approach b) Do Frame c) Do Line d) Init Plane e) Move to Start f) Init Phase Locked Loop g) Read ADC h) Init lever sensor bridge",11/11/05ProjectE - TIM - 1423,No Trace of 17 Parameters defined in Inst5 Req 4.4.2.5 to AFM Design,3,"The following parameters of the requirement 4.4.2.5 do not trace to the parameter table (those with a parameter shown in parentheses are possibly a match): d) Inputs to measure e) Auto z-offset enable (AUTO_Z_MODE) f) Input channel for subsequent parameter reads/writes g) DC offset (CHANNEL_OFFSET) i) Setpoint of the z-axis distance controller (REG_SET_POINT) j) Integration speed of z-feedback controller k) Error amplification, working mode and output mode of z-feedback loop l) In and out polarity of feedback signals m) Input signal type n) Gap voltage output o) Z-DAC limit p) Center frequency q) PLL loop P-gain r) Active lever s) Level oscillator amplitude t) Negative voltage and offset voltage of lever sensor bridge u) PLL integral speed, phase, frequency scan start point, frequency increment, repeat The requirement is as follows: 4.4.2.5: The Inst5 FSW shall implement one or more commands to set the following AFM attributes, per the limits and units defined in EasyScan User’s Manual: a) Scan axis for subsequent parameter reads/writes b) Axis scan vector (x/y/z), range and offset (x/y/z) c) Time per unit d) Inputs to measure e) Auto z-offset enable f) Input channel for subsequent parameter reads/writes g) DC offset i)Setpoint of the z-axis distance controller j)Integration speed of z-feedback controller k) Error amplification, working mode and output mode of z-feedback loop l)In and out polarity of feedback signals m)Input signal type o) Z-DAC limit s) Level oscillator amplitude t) Negative voltage and offset voltage of lever sensor bridge u) PLL integral speed, phase, frequency scan start point, frequency increment, repeat",11/11/05ProjectE - TIM - 1422,No Trace of Inst5 Req 4.4.2.12 to the AFM Component Design,3,Requirement 4.4.2.12 does not trace to any of the AFM design algorithms. There is no public routine that apparently would retrieve or set the status data defined by this requirement. The requirement is as follows: 4.4.2.12: The AFM Status data shall consist of the following: a) Time stamp showing when the command prompting the read was issued to the AFM b) The 32 byte response message returned from a non-scanning AFM command. c) A Inst5 FSW-generated data Set ID number,11/11/05ProjectE - TIM - 1421,Partial Trace of Inst5 Req 4.4.2.1 to the AFM Component,4,"Requirement 4.4.2.1 traces only partially to the design algorithms for the AFM component of Inst5. No action exists for resetting back the discrete to ""Inst5."" The requirement is as follows: 4.4.2.1: The Inst5 FSW shall set the AFM/Inst5 discrete to “AFM” prior to issuing commands to the AFM and reset it to “Inst5” afterward.",11/11/05ProjectE - TIM - 1420,Incomplete trace of Inst5 Req 4.1.5.6 (Set Timer) to the Inst5 Reagent Release Algorithm,4,"The Reagent Release algorithm includes a ""Set Timer"" action and this traces to requirement 4.1.5.6. However, the algorithm does not utilize the timer later in the process to control the start of an action. 4.1.5.6: The Inst5 FSW shall power the reagent addition actuator for no more than 2 minutes.",11/11/05ProjectE - TIM - 1419,No trace of Inst5 Req 4.1.5.5 (temp control) to the WCL component,4,"Requirement 4.1.5.5 traces to the WCL design element 1.30.3 Water Release however this design algorithm does not include any condition involving temperature. The requirement is as follows: 4.1.5.5: Unless specifically overridden, the Inst5 FSW shall heat a wet chemistry water tank to at least +3° C (TBR) before activating the water release actuator.",11/11/05ProjectE - TIM - 1418,Incomplete trace of Inst5 Req 4.1.5.4 (only one cell enabled) to the WCL Design,4,Requirement 4.1.5.4 traces partially to the enable actions within the WCL design elements (algorithms). The trace is incomplete to WCL design because of the lack of a design element for enabling a cell. The requirement is as follows: 4.1.5.4: The Inst5 FSW shall ensure that only one wet chemistry cell is enabled at a time.,11/11/05ProjectE - TIM - 1417,"No trace of Inst5 Req 4.1.5.1 (Power On, Enabling) to the WCL component",3,Requirement 4.1.5.1 does not trace to the design. There is no design element for power-on or for enabling the WCL. Enabling is a required action within the design elements but enabling itself (and power on) are not defined. The requirement is as follows: 4.1.5.1: The Inst5 FSW shall only power the actuators and/or heaters for wet chemistry cells that have previously been enabled.,11/11/05ProjectE - TIM - 1416,No trace of Req 4.1.4.6 to the WCL component,3,Requirement 4.1.4.6 does not trace to a Wet Chemistry component algorithm and there is no external public routine declared to execute this experiment. The requirement is as follows: 4.1.4.6: The Inst5 FSW shall implement a command to conduct a default or non-default chronopotentiometry experiment on a specified wet chemistry cell.,11/11/05ProjectE - TIM - 1415,No trace Inst5 Req 4.1.4.5 (FPGA commands) to the WCL Design,3,"The ASV requirement 4.1.4.5 requirement a) and c) apply a voltage. However, the requirement does not trace to a Wet Chemistry algorithm or public routine and does not trace to any defined design element to apply a specified stripping waveform and retrieval of current data. The requirement is as follows: 4.1.4.5: During an ASV experiment, the Inst5 FSW shall command the FPGA to do the following: a) Apply a specified conditioning voltage to the designated working electrode for a specified time period b) Turn on stirring in the active wet chemistry cell c) Apply a specified deposition voltage to the designated working electrode for a specified time period d) Turn off stirring in the active wet chemistry cell e) Apply a specified stripping waveform and retrieve the current data",11/11/05ProjectE - TIM - 1414,Inst5 Design does not trace to the Req 4.1.4.4,3,"There is no design element in the Wet Chemistry component section of the Inst5 FSW Design Document that traces to requirement 4.1.4.4, specifically to the anodic stripping experiment. The requirement is as follows: 4.1.4.4: The Inst5 FSW shall implement a command to conduct a default or non-default anodic stripping experiment on a specified wet chemistry cell.",11/11/05ProjectE - TIM - 1413,Inst5 Design does not trace to the Req 4.1.4.3,3,"There is no design element in the Wet Chemistry component section of the Inst5 FSW Design Document that traces to requirement 4.1.4.3, specifically to the cyclic voltammetry experiment. By its name, the public routine mcWchem_Read_exe(mcMsgObject_t *msgObj); would likely generate data packets from the experiment. The requirement is as follows: 4.1.4.3: The Inst5 FSW shall implement a command to conduct a default or non-default cyclic voltammetry experiment on a specified wet chemistry cell.",11/11/05ProjectE - TIM - 1412,No trace of Inst5 Req 4.1.4.2 to the WCL Component Design,3,Requirement 4.1.4.2 does not trace to the WCL design. The WCL design does not include a algorithm or declaration of a public routine that would command a DOX experiment. The requirement is as follows: 4.1.4.2: The Inst5 FSW shall implement a command to conduct a default or non-default dissolved oxygen experiment on a specified wet chemistry cell.,11/11/05ProjectE - TIM - 1411,Health Check (Req 4.1.4.10) does not trace to any WCL Design,3,"A Health Check (requirement 4.1.4.10) is not integrated into any design algorithm of the Wet Chemistry Component nor to any other section of the design. The requirement is as follows: 4.1.4.10: A health check of WCL shall include measuring temperatures, pressure, dissolved gases (CO2 and oxygen), and measuring power draw.",11/11/05ProjectE - TIM - 1410,No trace of Inst5 Req 4.1.4.1 to the WCL Component Design,3,Requirement 4.1.4.1 does not trace to any algorithm for the Wet Chemistry Component.The requirement fails a consistency check; it does not represent a level 5 requirement in detail. The requirement is as follows: 4.1.4.1: The Inst5 FSW shall implement a command to conduct a default or non-default conductivity experiment on a specified wet chemistry cell.,11/11/05ProjectE - TIM - 1409,No trace of the Inst5 Req 4.1.3.4 to the WCL Component Design,3,"Requirement 4.1.3.4 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.4: The Inst5 FSW shall supply the ability to adjust the following DOX experiment control parameters: a) The reference electrode [TBD] b) The gain setting c) The waveform parameters including starting voltage, min/max voltages, and ramp rate.",11/11/05ProjectE - TIM - 1408,No trace of the Req 4.1.3.3 to the WCL Component Design,3,"Requirement 4.1.3.3 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.3: The Inst5 FSW shall supply the ability to adjust the following chronopotentiometry experiment control parameters: a) The reference electrode b) The gain setting c) The waveform parameters including starting voltage, min/max voltages, and ramp rate.",11/11/05ProjectE - TIM - 1407,No trace of the Req 4.1.3.2 to the WCL Component Design,3,"Requirement 4.1.3.2 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.2: The Inst5 FSW shall supply the ability to adjust the following CV experiment control parameters: a) The reference electrode b) The gain setting c) The waveform parameters including starting voltage, min/max voltages, and ramp rate.",11/11/05ProjectE - TIM - 1406,No trace of the Req 4.1.3.1 to the WCL Component Design,3,Requirement 4.1.3.1 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.1: The Inst5 FSW shall supply the ability to adjust the following ASV experiment control parameters: a) The reference electrode b) The gain setting c) The waveform parameters including starting voltage and step height.,11/11/05ProjectE - TIM - 1405,No trace of Inst5 Req 4.1.2.7 to the WCL Component Design,3,"Requirement 4.1.2.7 does not trace to any algorithm within the Wet Chemsitry component of the design document. No additional details are provided in the ICD. The requirement is as follows: 4.1.2.7: For voltammetry (ASV, CV, DO), the Inst5 FSW shall provide parameters to the FPGA to enable it to return an array of data without allowing the PACI interface to time out (“trickle mode”).",11/11/05ProjectE - TIM - 1404,Inst5 Req 4.1.2.4 does not trace to HW/SW ICD,4,"Requirement 4.1.2.4 does not trace to any functions in the HW/SW ICD. Requirement is not at the same level of detail (Inconsistency). Level of detail represents a level 3 requirement, not L5. The requirement is as follows: 4.1.2.4: The Inst5 FSW shall handle the data return of all WCL functions specified in the Inst5 Hardware Software Interface Control Document.",11/11/05ProjectE - TIM - 1403,"WCL design (1.30.1, 1.30.2) does not trace to requirement 4.1.2.13",3,"Requirement 4.1.2.13 does not trace to the WCL design. The Design elements (algorithms) 1.30.1 Drawer Opening and 1.30.2 Drawer Closing do not include the action of raising the temperature to >-20C or considering the temperature at all. The requirement is as follows: 4.1.2.13: The Inst5 FSW shall raise the drawer temperature to at least -20° C before opening or closing the drawer, to prevent damage.",11/11/05ProjectE - TIM - 1402,Stage Component Rotate Init does not trace to requirement 4.2.6.2,4,"The absolute rotation algorithm initially checks if it is safe to rotate. Requirement 4.2.6.2 traces reasonably to this element but does not trace to the Rotate Init algorithm which simply begins rotating to reach an initial ""ready"" state. The requirement is as follows: 4.2.6.2: No Stage rotation shall take place when the AFM is powered and enabled AND the AFM NEAR signal is engaged.",11/11/05ProjectE - TIM - 1401,Inconsistent trace of Inst5 requirement 4.2.6.1 to the Stage Component. State A undefined.,4,There is reference to a state A when beginning a stage movement in the design algorithms but this state is not defined. The translate and rotate init commands are defined but their relation to the movement commands are not clear. Initialization is assumed to be equivalent to enabled but the tie to the state A is not made. The requirement related to this issue is as follows: 4.2.6.1: The Inst5 FSW shall only command the Stage if it has been previously enabled.,11/11/05ProjectE - TIM - 1400,No trace of Inst5 requirement 4.2.5.1 (and vagueness) to Stage Component,2,"Requirement 4.2.5.1 does not trace to the design elements. The movement algorithms never refer to ""too early"" or an unexpected limit switch. This requirement should likely be a logical part of the motion algorithms. The requirement is as follows: 4.2.5.1: If stepper movement arrives at a limit switch too early, or if movement stops at a limit switch which flight software didn’t expect to encounter, based on the software’s understanding of the movement’s starting position, it will issue an error and stop.",11/11/05ProjectE - TIM - 1399,No trace of requirement 4.2.4.2 to the Stage Component Algorithms,3,"There are no Stage Component design elements defined for the radiant heater (Requirement 4.2.4.2) or a heater in general. Use of the heater is not included in the design. There are no public routines for heater control. Only the overview mentions that the Stage component provides access control to the radiant heater. The requirement is as follows: 4.2.4.2: The Inst5 FSW shall implement a command to turn on the radiant heater, for up to 20 (TBR) seconds.",11/11/05ProjectE - TIM - 1398,Inconsistency check fails for Inst5 requirement 4.2.4.1 due to TBD,4,"Requirement 4.2.4.1 traces to the Initialization Stage design elements; however, the consistency of the requirement fails because of the remaining TBD. The level 5 requirement does not specify where the stage is left after power-on. The requirement is as follows: 4.2.4.1: The Inst5 FSW shall initialize the stage at power-on by verifying commandability to each limit-switch delineated position, and then leaving the stage in a TBD position.",11/11/05ProjectE - TIM - 1397,Inconsistent trace of Inst5 requirement 4.2.3.1 to the Stage Component,3,There is not a clear trace of requirement 4.2.3.1 to any of the Stage component design. Only design element 1.26.5 Absolute Translation refers to sample position (or to sample). No design element refers to sample wheel. The requirement is as follows: 4.2.3.1: Inst5 FSW shall support movement relative to a specific sample wheel fiducial.,11/11/05ProjectE - TIM - 1395,Inconsistent trace of Inst5 requirement 4.2.2.6 to the Stage Component,4,Requirement 4.2.2.6 traces to the translate and rotate init algorithms in that they both add the position to telemetry. There is no indication in the design that the position would be saved by the FSW. All other designs including those for motion after initialization for the Stage do not refer to sending or saving the position. The requirement is as follows: 4.2.2.6: The Inst5 FSW shall maintain knowledge of the current position of the Stage in both the rotational and translational directions.,11/11/05ProjectE - TIM - 1394,No trace of the Inst5 requirement 4.2.2.5 to the Stage Component,3,Requirement 4.2.2.5 (Pulse width modulation) is not traceable to any specific algorithm in the Stage Component of the Design document. Power is not a factor in any of the algorithms of the design. The requirement is as follows: 4.2.2.5: Power used by the Stage shall be selectable through commandable pulse width modulation.,11/11/05ProjectE - TIM - 1393,Incomplete trace of Inst5 requirement 4.2.2.4 to the Stage Component,3,"Requirement 4.2.2.4 traces to some of the algorithms of the Stage Component design. Motor command parameter d)stepper motor directions can be traced to the translate and rotate algorithms. The remaining parameters are not referenced or linked directly to the design of the Stage. Further details in other documents such as the FRD (level 4s) do not provide a link and additional detail. The requirement is as follows: 4.2.2.4: The Inst5 FSW shall be capable of controlling each of the following stepper motor command parameters separately: a) Stepper motor pulse width b) Limit switch overrides c) Alternate limit switch selection d) Stepper motor direction (in/out, clockwise/counterclockwise) e) Motor duty cycle f) Motor step type g) Motor steps",11/11/05ProjectE - TIM - 1392,Inst5 requirement 4.2.2.18 does not trace to the design,3,"Requirement 4.2.2.18 does not trace to a design algorithm. The requirement traces to a level 4 requirment 2.1.1.12 and 2.2.1.16 in the FRD only in the sense that both level 4s refer to limit switches. Review of the Level 3 to 5 requirements for limit switches reveals inadequate detail in the implementation and use of the limit switches. The FRD reference to a parent states only ""S"" meaning ""Specification"" which seems to imply no direct trace. The requirement is as follows: 4.2.2.18: The positions of the individual limit switch transitions shall be configurable.",11/11/05ProjectE - TIM - 1391,Incomplete trace of Inst5 requirement 4.2.2.17 to the Stage Component,3,Requirement 4.2.2.17 traces in general to the Stage Component section however there is no statement that discrete stage positions exist for each instrument function. The design document provides algorithms for basic actions but the lack of a trace and reference to these discrete stage positions and the LUT is a gap in the level of detail from design to level 5 requirements and this requirement does not trace to the FRD (level 4) requirements either. The requirement is as follows: 4.2.2.17: The Inst5 FSW will maintain and refer to a look-up table (LUT) of stage positions to accomplish all functions including imaging of each substrate.,11/11/05ProjectE - TIM - 1390,Inconsistent level of detail of a requirement traced to the Stage Component,3,"Requirement 4.2.2.16 traces to the Stage Component. However, the statement to ""take into account the hysterisis"" does not provide the level of detail expected of a level 5 requirment. How exactly the hysterisis is taken in account should be provided. This issue represents a lack of consistency in the level of detail. The requirement is as follows: 4.2.2.16: The Inst5 FSW will take into account the hysteresis in the Stage mechanism through appropriate commanding of a final motion.",11/11/05ProjectE - TIM - 1389,Inconsistent naming convention of commands in the Inst5 Design,4,"An inconsistency exists in the naming convention of Inst5 commands. Examples are: Inst5_CMD_FLUSH and CMD_FLUSH Inst5_AFM_STATIC and AFM_STATIC Inst5_WC_READ and WC_READ If the inconsistency reached the implementation phase, unit tests should likely uncover an error. If defined in enumerators, potentially re-use code could be mixed with new code causing misinterpretation but simple tests should quickly uncover it. The requirement associated with this issue is as follows: 4.6.1.1: All Inst5 commands shall follow the command format specified in Command Flight Software User's Guide, Revision A, 12/4/98.",11/11/05ProjectE - TIM - 1388,Partial trace of Inst5 requirement 3.1.2.5 to the Telemetry Component,3,"Requirement 3.1.2.5 only partially traces to the Telemetry component. All system level commands trace to the design algorithms except ""RESET"". There is no clear process defined in the design for resetting the SW or HW. The requirement is as follows: 3.1.2.5: The Inst5 FSW shall respond to the following system level commands: a) SYS_INIT b) SYS_PING c) SYS_FP_ENAB d) EPSO_COMP_STATE e) RESET f) SAVE",11/11/05ProjectE - TIM - 1387,Inconsistent inclusion of a health check in the HW Interface Component,3,"Requirement 7.2.1.1 does trace in general to the HW Interface Component, however there are no design elements within this component that trace to the health check for the Analog Board. The requirement effectively fails the consistency check because 1)the design provides no guidelines for applying a health check, the frequency at which it is checked or how the software would implement the check. The requirement is as follows: 7.2.1.1: A health check of the Analog board consists of the following: a) Applying power b) Reading temperatures c) Verifying current draw",11/11/05ProjectE - TIM - 1386,No trace of Inst5 requirement 3.3.2.4 to Command Processing Algorithms,3,"Requirement 3.3.2.4 does not trace to any design algorithm. The requirement fails to define the event after which Ready and Idle is expected after a parameterized amount of time. Completeness. Requirement fails to define the related event after which it must wait for Ready and Idle signals. The requirement is as follows: 3.3.2.4: The Inst5 FSW will send appropriate error messages, and set the fault condition to “failed”, should the Inst5 Alive and Idle discrete lines fail to signal “Ready” and “Idle” within a parmeterized amount of time.",11/11/05ProjectE - TIM - 1385,No trace of Inst5 requirement 3.3.2.3 to Command Processing Algorithms,3,"There is not a direct trace of Requirement 3.3.2.3 to design. The requirement traces indirectly to Power On and to PaciWrite. No algorithm defines process following reset. The requirement is as follows: 3.3.2.3: Following a commanded reset of the Inst5 hardware, the Inst5 FSW shall wait for the Inst5 Alive and Idle discrete lines to signal “Ready” and “Idle” before sending commands.",11/11/05ProjectE - TIM - 1384,Incomplete trace of Inst5 requirement 3.3.2.2 to design,3,There is no design specifying a wait for Alive and Idle before sending command (per requirement 3.3.2.2). The Device Enable design element includes power-on. Traces to 1.18.2 FPGA Commanding. FPGA commanding does not include wait-for state. The requirement is as follows: 3.3.2.2: At Inst5 Power On the Inst5 FSW shall wait for the Inst5 Alive and Idle discrete lines to signal “Ready” and “Idle” before sending commands to the CME.,11/11/05ProjectE - TIM - 1383,Insufficient trace of requirement to Inst5 CME Component,4,"Requirement 3.3.2.1 traces to a public routine ""extern int mcCme_Reset(void)"" in the Inst5 CME design but does not trace to any algorithm. The routine is only declared in the design document and no further details are provided except the trace to the level 5 requirement. Importance of reset in general warrants more detail in the design document. There is no consideration of a reset hold in any of the Inst5 design elements. The requirement is as follows: 3.3.2.1: The Inst5 FSW shall hold the Inst5 Reset discrete line in reset for a minimum of 10ms to force the Inst5 hardware to reset.",11/11/05ProjectE - TIM - 1382,Logical Fault in Inst5 design algorithm 1.18.4 PACI Ops,3,There is a logic fault in the flow chart of the PACI Ops design(Design Element 1.18.4 PACI Ops). A condition has two paths marked YES. Both PACIWRITE and PACIREAD have the condition where the response is to the state of YES twice. It is uncertain which should be NO.,11/11/05ProjectE - TIM - 1380,Level 5 Requirement SRSR224 is Unrelated to Level 4 Requirement,4,"Artifacts: CD-MDR-PHX-SG-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B Level 5 requirement SRSR224 says ""shall a) enable power to Lidar sensor head ... b) disable power to the lidar sensor head"" and Level 4 requirement SYSR272 says ""shall be capable of transferring data to the Lander while the lidar transmitter and receiver are off ..."". The requirements are not directly related.",10/12/05ProjectE - TIM - 1379,Level 5 Requirement SRSR116 Is Not As Specific As the Level 4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B Level 5 requirement SRSR116 is not as specific as its parent requirement SYSR30. SRSR116 says ""...a) after every accumulation period,...""; whereas, SYSR30 says ""...counting data over a specified number of shots (where each is specified independently by an integer n where n is between 0 and 17 and the number of shots is given by 2 to the power of n).""",10/12/05ProjectE - TIM - 1378,Level 5 Requirement SRSR125 Should Be a Pressure/Temperature Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 Level 5 requirement SRSR125 says the ""MPTMS CSCI shall set the configuration for the Lidar ..."" The MPTMS CSCI is the Pressure/Temperature Manager and has its own SRS (CD-MDR-PHX-SG-7927). The action to be taken is not to be done by the Lidar Manager but to be done by the Pressure Temperature Manager; therefore, this requirement should be placed in the PT (Pressure/Temperature) SRS, CD-MDR-PHX-SG-7927. ""3.2.4.2.2 Default Lidar Configuration On power up, the MPTMS CSCI shall set the configuration for the Lidar as specified in the default value of each data element in the Inst10 to Lander Software ICD.""",10/12/05ProjectE - TIM - 1377,Level 5 Requirement SRSR223 Is Unrelated to Level 4 Requirement,4,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System REquirements Document Revision B Level 5 requirement SRSR223 says ""shall be capable of controlling the power"", whereas the Level 4 requirement SYSR272 says ""shall be capable of transferring data"".",10/12/05ProjectE - TIM - 1376,Level 5 Requirement SRSR20 Traces to Non-Existent Level 4 Requirement,3,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR20 traces to non-existent Level 4 requirement DATA25.24 in the ICD.,10/12/05ProjectE - TIM - 1375,Inst9 Test Plan is Missing Tests,4,"The Inst9 Test Plan references the following tests in the Verification Matrix in Appendix B for Requirements 4, 8, 44, 51, 53, 54: Inst9-MV_CART_FLT Inst9-MV_GRD_FLT These tests are not in the test plan. The requirements are as follows: 4 The RAFSW shall produce the following task-level channelized telemetry: a) actuator command opcode, b) fault status and c) task command opcode. 8 The RAFSW shall report command completion by setting a sequence global variable. 44 The RAFSW shall provide a functionality to perform a guarded move. The algorithm will move the Inst9 the designated amount until the move is completed or contact is made where contact is sensed by monitoring joint torques via motor currents. Contact occurs when the specified joint torque threshold is reached for at least one joint. 51 The RAFSW shall produce the following actuator-level channelized telemetry: a) actuator status (power, direction, brake and heater status), b) joint angles from potentiometers and encoders, c) energy used, d) joint temperatures, e) sum of joint heater currents, and f) positive and negative voltage reference, and g) analog ground. 53 The RAFSW shall implement the capability to save the following Inst9 data to file in DRAM at the specified rates: a) parameter table anytime a parameter is changed, b) Inst9 status data upon actuator command completion. 54 The RAFSW shall provide a command to move the Inst9 in Cartesian space using absolute coordinates wrt the Inst9 base frame, relative coordinates wrt the Inst9 base frame, or relative coordinates wrt the chosen tool frame.",10/6/05ProjectE - TIM - 1374,Inst9 Requirement #49 Not Verified by Tests,3,"It is not clear that Inst9 requirement #49 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #49: The number of via points generated by the RAFSW Cartesian path generator shall satisfy two conditions: 1) the deviation from the Cartesian straight-line path is less than the specified error bound, åp, and 2) the Cartesian distance between via points is less than the specified allowable distance, äd.",10/6/05ProjectE - TIM - 1373,Inst9 Requirement #32 Not Verified by Tests,3,It is not clear that Inst9 requirement #32 isverified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #32: The RAFSW shall provide the functionality for external software to query the current position and orientation of each tool on the Inst9.,10/6/05ProjectE - TIM - 1372,Inst9 Requirement #25 Not Verified by Tests,3,"It is not clear that Inst9 requirement #25 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #25: The RAFSW shall implement the inverse kinematics such that if the selected tool is the Inst8 the function will compute the joint position that will point the Inst8 focal axis at a desired target (x, y, z) at a specified distance, d, along the Inst8 focal axis.",10/6/05ProjectE - TIM - 1371,Inst9 Requirement #24 Not Verified by Tests,3,"It is not clear that Inst9 requirement #24 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #24: The RAFSW shall implement the inverse kinematics such that the function will compute the joint position that will locate a selected tool frame at the desired Cartesian pose (x, y, z, pitch) if the tool is not the Inst8.",10/6/05ProjectE - TIM - 1370,Inst9 Requirement #21 Not Verified by Tests,3,It is not clear that Inst9 requirement #21 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #21: The RAFSW shall provide a functionality to select the tool whose location the Cartesian and orientation coordinates in subsequent commands describe.,10/6/05ProjectE - TIM - 1369,Inst9 Test Plan does not contain enough information to determine verification of requirements,3,"IV&V concludes that the Inst9 test desciptions do not present sufficieint detail to verify coverage of Inst9 requirements. For most of the test cases, there was not enough detailed information in the test steps to determine verification of the traced requirements. If there is a corresponding test procedure document that will be released, this is not an issue. However, if this is the only test documentation for Inst9, there is a concern regarding the lack of detail in the test plan to determine requirements verification. Also, the introduction of the test plan states that each test will have the following information/format: 1. Purpose of Test 2. Test Configuration 3. Required Inputs 4. Initial Conditions 5. Expected Results 6. Sucess Criteria. However, the tests are not organized this way. The general format is 1. Description 2. Objectives 3. Configuration 4. Method 5. Test Output 6. Post Test Analysis 7. Success. Required inputs and Initial conditions are not presented in the test steps. Additional detail in the test steps themselves that would clearly indicate how the traced requirement is tested could have made verifying the requirements more straightforward. Individual requirements are mapped to multiple tests. This mapping can cause confusion during the testing and verification phases and may lead to requirements not being properly verified and could potentially cause a loss of functionality to the instrument. The test steps did not provide enough detailed information to determine where, when, and how each requirement was being tested.",10/4/05ProjectE - TIM - 1368,Inst9 tests not traced to requirements,3,The following tests are not traced to any requirements: Inst9-TIME Inst9-SEND_DATA Inst9-APPLY_BRK Inst9-HEAP Inst9-SURF_FOLLOW,10/4/05ProjectE - TIM - 1367,Inst9 Requirement #4 Not Verified by Tests,3,"It is not clear that Inst9 requirement #4 is verified by any of the tests it is traced to. This requirement is traced to the following tests: Inst9-STOP, Inst9-SHTDWN, Inst9-CALIB, Inst9_MV_JNT_NOM, Inst9_MV_CART_NOM, Inst9_MV_GRD_NOM, Inst9_DIG_TRENCH_NOM, Inst9_SCRAPE_NOM, Inst9_ACQ_SMPL_NOM, Inst9_MV_CART_FLT, Inst9_MV_GRD_FLT, Inst9_DIG_TRENCH_FLT, Inst9_SCRAPE_FLT, Inst9_HEAT, Inst9-STRESS, Inst9-JNT_FLT, Inst9-MISC_FLT Inst9 FSW Requirements #4: The RAFSW shall produce the following task-level channelized telemetry: a) actuator command opcode, b) fault status and c) task command opcode.",10/4/05ProjectE - TIM - 1366,Inst9 Requirement #17 is Not Verified by Tests,3,"It is not clear that Inst9 requirement #17 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-JNT_FLT, Inst9-MISC_FLT The Inst9-JNT_FLT test performs partial verification of #17 (motor, encoder, heater, and potentiometer). The Inst9-MISC_FLT test performs partial verification of #17 (motor, encoder, heater, and potentiometer).PACI-RAE communications failure, joint runaway, and temperature sensor failure are not verified. Inst9 FSW Requirement #17: The RAFSW shall support detection of the following faults by monitoring engineering data and safing the arm in response: encoder failure, temperature sensor failure, heater failure, motor failure, potentiometer failure, PACI-RAE communications failure, joint runaway.",10/3/05ProjectE - TIM - 1365,Inst9 Requirement #18 Not Verified by Tests,3,"It is not clear that Inst9 requirement #18 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-JNT_FLT, Inst9-MISC_FLT Only the enable part of requirement #18 is tested in both of these tests. Inst9 FSW Requirement #18: The RAFSW shall provide the functionality to enable/disable fault detection using a bit mask.",10/3/05ProjectE - TIM - 1364,Inst9 tests are ambiguous,4,"The following Inst9 test contain ambiguous wording: Test Inst9-DIG_TRENCH_FLT does verify requirements #30 and #37. However, the test states that it will verify that the Inst9_DIG_TRENCH algorithm responds properly to faults and events during execution. It is not clear what is meant by ""properly."" Neither requirement that this test is traced to identifies proper responses. Also the test refers to ""proper event recovery"" and ""proper trench digging"" but does not indicate what is meant by this. The test does appear to verify the requirements but some additional information would be helpful to better understand the test. Test Inst9-ACQ_SMPL_FLT does verify requirement #36. However, the test states that it will verify that the Inst9_ACQUIRE_SAMPL algorithm responds properly to faults and events during execution. It is not clear what is meant by ""properly.""",10/3/05ProjectE - TIM - 1363,Inst9 Requirement #8 Not Verified by Tests,3,"It is not clear that Inst9 requirement #8 is verified by any of the tests it is traced to. This requirement is traced to the following tests: Inst9-STOP, Inst9-SHTDWN, Inst9-CALIB, Inst9_MV_JNT_NOM, Inst9_MV_CART_NOM, Inst9_MV_GRD_NOM, Inst9_DIG_TRENCH_NOM, Inst9_SCRAPE_NOM, Inst9_ACQ_SMPL_NOM, Inst9_MV_CART_FLT, Inst9_MV_GRD_FLT, Inst9_DIG_TRENCH_FLT, Inst9_SCRAPE_FLT, Inst9_HEAT, Inst9-STRESS, Inst9-JNT_FLT, Inst9-MISC_FLT Inst9 FSW Requirement #8: The RAFSW shall report command completion by setting a sequence global variable.",10/3/05ProjectE - TIM - 1362,Inst9-MV_JNT_NOM test does not provide enough information to determine verification of requirements,3,"The Inst9-MV_JNT_NOM test does not provide enough information to verify that requirements #47 and #48 are being verified. This is the only test these requirements are traced to. The requirements are as follows: Inst9 FSW Requirement #47: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the distance between via points is less than the specified allowable distance, äd, for spatial joint moves. Inst9 FSW Requirement #48: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the time between via points is less than the specified allowable time, ät, for timed moves.",10/3/05ProjectE - TIM - 1361,Inst9 Requirement #13 Not Verified by Tests,3,"It is not clear that Inst9 requirement #13 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-STRESS, Inst9-CMD_OVRN The Inst9-CMD_OVRN test is only verifying the first part of requirement #13, ""The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command."" This requirement is also traced to the Inst9-STRESS test, however, there is not enough information in that test to determine if #13 is being verified. These are the only tests traced to this requirement. Inst9 FSW Requirements #13: The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command. This is defined as a command overrun state. If this occurs the RAE will be shutdown if it is powered.",10/3/05ProjectE - TIM - 1360,Inst9 Requirement #14 Not Verified by Tests,2,"It is not clear that Inst9 requirement #14 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-INIT, Inst9-PHASE The Inst9-INIT test is only clearly testing the parameter table initialization and arm status initialization indicated in requirement #14. Inst9-PHASE only testing requirement RAE is on before executing any move heat command. The following parts of the requirement do not appear to be verified by either tests: PACI driver is open, science heap is allocated, RAE firmare is initialized. Inst9 FSW Requirements #14: The RAFSW shall verify that the software is in an initialized state (parameter table is initialized, arm status is initialized, PACI driver is open, science heap is allocated, RAE firmare is initialized, RAE is on) before executing any move/heat command (or any command that communicates with the RAE). It is the incompleteness around the INIT test that no workaround is known, therefore this is a Sev 2 TIM.",10/3/05ProjectE - TIM - 1359,Inst9-PARAM test does not provide parameter information,3,"The description of test Inst9-PARAM provides insufficient details to verify implementation of requirements 5a and 40. Inst9-PARAM indicates parameters are set but does not specify which ones are set (e.g. actuator control loop period, joint torque thresholds). This is the only test traced to verify these requirements. The requirements are as follows: Inst9 FSW Requirement#5a: The RAFSW shall implement a parameter to specify the actuator control loop period. RAFSW Requirement #40: The RAFSW shall be capable of setting the joint torque thresholds for accommodation, free-space, contact and absolute maximum.",10/3/05ProjectE - TIM - 1358,Inst9 Requirement #7 Not Verified by Tests,2,"It is not clear that Inst9 requirement #7 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-INIT Inst9-STRESS Inst9-INIT (and Inst9-STRESS) partially tests Inst9 requirement #7. No other tests will complete the testing of the requirements. Inst9-INIT verifies only part 7c and 7d (Inst9-STRESS tests only 7c). Inst9 FSW SRS #7: The RAFSW shall produce EVRs in response to the following anomalous conditions: a) Error in opening, reading and writing Inst9 files (status, history, parameter) b) EPS power-errors c) initialization errors d) Unrecognized messages and e) command queue overrun. It is the incompleteness around the INIT test that no workaround is known, therefore this is a Sev 2 TIM.",10/3/05ProjectE - TIM - 1357,Requirement 5087 is insufficiently specified,3,"Requirement 5087 : The TEFSW shall have a telemetry task running within the C&DH Issue : Inst4 requirement 5087 is an L4 requirement. There is insufficient detail to implement and verify the requirement. e.g. How is the telemetry task run, how frequently? What is the purpose of the ""telemetry task""?",9/30/05ProjectE - TIM - 1356,Requirement 5086 is insufficiently specified,3,"Requirement 5086 : TEFSW shall have a commanding task running within the C&DH. Issue : Inst4 requirement 5086 is an L4 requirement. There is insufficient detail to implement the requirement. The current requirement as written is not testable with quantitative criteria. e.g. How is it run, how frequently? What is the purpose of the ""commanding task""?",9/30/05ProjectE - TIM - 1355,"Requirement 5084 does not state the purpose of using ""sequence global variables.""",4,"Requirement 5084 : TEFSW shall use sequence global variables Issue : The Inst4 L5 requirement 5084 does not state the purpose for using ""sequence global variables.""",9/30/05ProjectE - TIM - 1354,Requirement 5065 is insufficiently specified.,4,"Requirement 5065 : The TEFSW shall support the creation of prioritized (APID designated) science data packets containing instrument status and data. Issue: This requirement has no link to a L4 requirement and appears to be an L4 requirement. The term ""support"" requires clarification and added specificity. The requirement can be traced to the Inst4 Telemetry Dictionary, Section 3.5.1 Data Segmentation.",9/30/05ProjectE - TIM - 1353,Requirement 5064 is insufficiently specified.,4,"Issue: The Inst4 requirement # 5064 has no link to a L4 requirement and appears to be an L4 requirement. The meaning of the word 'specific' is unclear. Is there a ""specific"" subset of health/eng/state data that can be submitted or does ""specific"" mean ""preselected"" health/eng/state data that will be routinely submitted to the telemetry stream from Inst4? Also, the ""periodic interval"" is undefined? Requirement 5064 : The TEFSW shall be capable of submitting specific instrument health, engineering and state data to the LMA FSW channelized telemetry services at periodic intervals.",9/30/05ProjectE - TIM - 1352,"No entry in the ""Change History"" log when sections 5.2 and 5.3 were deleted.",4,The deletion of requirements in sections 5.2 and 5.3 are not documented in the change log of Inst4 Subsystem SRS Version 3.0.,9/29/05ProjectE - TIM - 1349,Missing reference in Inst4 Subsystem SRS,5,"In the MPS Inst4 SRS (Version 3) document there are various references to the the Contractor3 ProjectE Payload FSW API Guide. However, neither the Contractor3 ProjectE Payload FSW API Guide or the Contractor3 Software Coding Conventions (Rev. J) are listed in the reference section of the MPS Inst4 Inst4 SRS (Version 3). Artifacts: 1. MPS Inst4 SRS Version 3 (16 August 2005) 2. ProjectE Payload FSW API Guide Revision Basic (PHX-04-0057 Date: 9/1/2004) 3. Contractor3 Software Coding Conventions Revision J (17 June 2003)",9/29/05ProjectE - TIM - 1348,Inst4 Subsystem Requirement not consistent with Payload FSW API,3,"In the MPS Inst4 SRS (Version 3) the requirement, #5060 Event Reporting (Section 5.1.6), states: ""The TEFSW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the TEFSW ICD and implemented in accordance with referenced LMA FSW requirements documents. [LMA ProjectE Payload FSW API Guide, Section 3.5]"" In Section 3.5 of the Contractor3 ProjectE Payload FSW API Guide states that the Payload software will have two specific EVRs avaliable to the Payload software. The two EVRs avaliable are Information and Warning. In the MPS Inst4 SRS (Version 3) the requirement, #5060 Event Reporting (Section 5.1.6), does not provide the guidance necessary from a level 5 requirement to implement the design. The type of EVR reporting remains undefined for specific warning or fault conditions. 5060 Event Reporting: The TEFSW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the TEFSW ICD and implemented in accordance with referenced LMA FSW requirements documents. Artifacts: 1. MPS Inst4 SRS (Version 3) 16 August 2005 2. ProjectE Payload FSW API Guide Revision Basic (PHX-04-0057 Date: 9/1/2004)",9/29/05ProjectE - TIM - 1347,Improve clarity in RAFSW L5 Requirements,4,"In the Inst9 L5 Flight SRS Initial Document, Requirements #57 and #58 are listed below. 57 states- ""The RAFSW shall implement a command to clear faults set by the RAFSW."" 58 states- ""The RAFSW shall clear faults by command only."" Inst9 requirement #57 and #58 are rephrasing the same requirement. Together they not complementary and could more clearly describe the requirement if combined. Artifact 1. ProjectE Project Inst9 Level 5 FSW Requirements Initial. ProjectE-425-262. August 26, 2005",9/29/05ProjectE - TIM - 1346,Unclear rate in RAFSW L5 Requirement,3,"In the Inst9 L5 Flight SRS Initial Document, Requirement 53 states the following: ""The RAFSW shall implement the capability to save the following Inst9 data to file in DRAM at the specified rates: a) parameter table anytime a parameter is changed, b) Inst9 status data upon actuator command completion."" There is no indication as to the constraints applied to the 'specified rates' or to how the rates are specified (software, ground, predetermined, etc…). There is also the possibility that the word 'rates' may not be the correct wording for this requirement. Artifact 1. ProjectE Project Inst9 Level 5 FSW Requirements Initial. ProjectE-425-262. August 26, 2005",9/29/05ProjectE - TIM - 1345,Level 4 FSW requirement is missing 'shall' statement,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-9). The following requirement is missing a shall statement. ""The ProjectE flight software will comply with the ProjectE Payload ICDs."" It is suggested that the word 'will' be replaced with 'shall'. This is requirement 3.1.1b in the SC SRS Rev B.",9/23/05ProjectE - TIM - 1344,"Incorrect Use of ""Shall"" Statements in FPDD HLFP",3,"The FPDD does not use ""shall"" statement in a correct manner. The incorrect use includes both not using ""shall"" where it should be used as part of a requirement, and also where ""shall"" is used in the document, where it should not be. Chart FP-164 of the FPDD CDR Package, the FPVT approach indicates an explicit reference to FPDD Requirements Flowdown, and further addresses specific test cases that will be developed to verify the FPDD requirements. Upon review of the HLFP, there are only 5 ""shall"" statements in the system level fault protection; and 10 ""shall"" statements in the performance level fault protection. Evaluation of the shall statements indicates an incorrect use of the shall statements in the FPDD from a software standpiont. In the Fault Protection Description Document (PHX-98-0081 Rev: New Feb 16, 2005), there is no reference to software application where there should be 'shall' statements. Conversely, 'shall' statements are used inappropriately in other areas of the FPDD.",9/23/05ProjectE - TIM - 1343,Level 5 Lidar Requirements Incorrectly trace to PT parents,4,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 CD-MDR-PHX-SG-7927 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 According to the Inst10 to Lander ICD, the Lidar device and the PT (Pressure/Temperature) device are independently operating components of the Inst10. Each device has its own set of Level 5 requirements in its own SRS. There are a number of Lidar Level 5 requirements which incorrectly trace to parents that are PT Level 5 requirements. For a complete list of those requirements see the attachment in ""Relationships"".",9/23/05ProjectE - TIM - 1342,Level 5 Requirements TBD/TBC or Trace to Parents That Are TBD/TBC,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B MDR-PHX-ICD-7781 Revision 1.8 There are a number of Level 5 requirements that are either in whole or in part TBD or TBC. Additionally, there are two requirements that have parent requirements that are either in whole or in part TBD or TBC. For a complete list of those requirements and their TBD or TBD parents, see the Relationships attachment.",9/23/05ProjectE - TIM - 1341,Level 5 Requirement Does Not Completely Address Level 4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirements SRSR7 ""3.2.1.2.1 DeviceId"", SRSR18 ""3.2.2.2.2 State Consistency"", SRSR123 ""3.2.1.2.3 LanderCmdId"", and SRSR124 ""3.2.1.2.4 LanderCmdCnt"" trace upwards to SWICD8 ""3.4.1.1 Inst10 Command Validation"". Item b) in SWICD8 does not appear to be addressed by any of these requirements.",9/23/05ProjectE - TIM - 1339,Level 5 Requirement Inconsistent With Level 4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR9 is inconsistent with Level 4 requirement SWICD13. The level 5 requirement is not specific with the number of bytes the message shall contain. ""3.2.1.3.1 Word Alignment The MLMS CSCI shall transmit messages with an even number of bytes. Note: - For file transfer commands the ICD shows single byte characters but clearly states that they are repeated for word alignment.""",9/22/05ProjectE - TIM - 1338,Level 5 Requirement SRSR13 Traces to Non-Existent Level 4 Requirements,4,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR13 traces to non-existent Level 4 requirements SWICD12 and SWICD36. There is no indication that the Level 4 requirements have been deleted; they simply do not exist.,9/22/05ProjectE - TIM - 1337,L5 SRSR184 Has a Specification That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR184 has a specification that is TBC. ""3.2.3.5.2 Update Sequence Upon successfully receiving the complete software update file, the MPTMS CSCI shall: a) verify the (TBC) CRC-16 checkword of the softwre image, and if successful, b) write the image to flash. Note: - The new software configuration only takes effect after power cycling.",9/22/05ProjectE - TIM - 1336,Level 5 Requirement SRSR13 Contains A Typographical Error,5,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Items e) and f) in Level 5 requirement SRSR13 refer to sections ""3.4.2.5"" and ""3.4.2.6"" as ""Block Start (Ts)"" and ""Block Timeout (Tb)"" The sections are ""Inst10 File Transfer Timing"" and ""Lander File Transfer Timing"". There is enough information in the sections to infer the relationship between the sections. Therefore, it has been concluded that a typographical error has occurred. ""3.2.1.4.1 File Transfers The MLMS CSCI shall be capable of sending/receiving files to/from the Lander per Inst10 to Lander Software ICD sections: a) 3.4.2.1 Cancelling a Transfer, b) 3.4.2.2 Transfer Complete, c) 3.4.2.3 Block Data Size, d) 3.4.2.4 Initiation of File Transfers, e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb).""",9/22/05ProjectE - TIM - 1335,Level 4 Requirement SYSR105 Doesn't Trace Down to Level 5 Requirement SRSR15,3,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Revision B Level 4 requirement SYSR105 doesn't trace down to level 5 requirement SRSR15.,9/22/05ProjectE - TIM - 1334,L5 SRSR172 is TBC,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR172 is TBC. ""3.2.3.1.2 Block Level CRC-16 (TBC) The MPTMS CSCI shall append a CRC-16 word with each block when written tot he flash. The purpose of this CRC is to validate the correct operation of each flash block with each read and write.""",9/22/05ProjectE - TIM - 1333,L5 SRSR148 Refers to Inaccurately Named or Non-Existent L4 Sections,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ID-7781_Rev_1-1.8_1.doc Level 4 refers to sections ""e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb)"". These sections don't exist as named in this requirement. Sections ""3.4.2.5"" and ""3.2.4.6"" are ""Inst10 File Transfer Timing"" and ""Lander File Transfer Timing."" ""3.2.1.4.1 File Transfers The MPTMS CSCI shall be capable of sending/receiving files to/rom the Lander per Inst10 to Lander Software ICD sections: a) 3.4.2.1 Cancelling a Transfer, b) 3.4.2.2 Transfer Complete c) 3.4.2.3 Block data Size, d) 3.4.2.4 Initiation of File Transfers, e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb).""",9/22/05ProjectE - TIM - 1332,Missing requirement in the Flight SRS,3,"In the ProjectE Flight SRS Rev A., the requirement, 3.6.2.2 p., is referenced in requirements 3.6.2.2 i, and 3.6.2.2 j. However, there is no requirement listed in 3.6.2.2 p. and it is not clear if the requirement has been deleted or is TBD. 3.6.2.2 i. states: “The flight software shall accept commands to change a mode transition between the states “allowed” and “autonomous”. See requirements k, l, m, n, o, p, and q.” 3.6.2.2 j. states: “The flight software shall autonomously change modes only if the mode transition is marked “autonomous”. See requirements k, l, m, n, o, p, and q.”",9/21/05ProjectE - TIM - 1331,No ACS mode listing for initialization function in the Flight SRS,3,"In the ProjectE Flight SRS Rev A., the requirement 3.6.2.2 g. states: ""When an ACS mode or actuator suite change is commanded, the flight software shall call a mode specific initialization function, if the new mode requires one."" However, there is no listing showing which modes require the specific initialization function.",9/21/05ProjectE - TIM - 1330,Inconsistent ACS modes within the Flight SRS,3,"In the ProjectE Flight SRS Rev A., Section 3.6.2.2, there are two tables that concern ACS Modes. The ACS modes listed in Table 3.6.2.2-I are not consistent with the ACS modes listed in Table 3.6.2.2-II. Table 3.6.2.2-I appears to only be a sub-set of Table 3.6.2.2-II. Table 3.6.2.2-I deals with ACS PIID Objects (Controllers) for Modes and Actuator Suites and lists the Idle mode as not having a PIID Object. What is not clear is if the ACS modes missing from Table 3.6.2.2-I can be treated the same as the Idle mode (no PIID Object). Furthermore, the naming conventions between the two tables are not consistent. Table 3.6.2.2-I lists the ACS Modes as: Idle, Absolute Slew, Relative Slew, Sun Target, Earth Target, Rate Damping, Sun Search, Sun Cone, Delta Velocity TCM, Autoreference Sun Point, Autoreference Earth Point, Inertial Hold Table 3.6.2.2-II lists the ACS Modes as: Idle, Absolute Slew, Relative Slew, Sun Target, Earth Target, Rate Damp, Sun Search, Sun Cone, TCM/OTM, Sun Pointing, Earth Pointing, Inertial Hold, Hypersonic_1, Hypersonic_2, Hypersonic_3, Hypersonic_4, Hypersonic_5, Prechute, Parachute, Tip Up, Gravity Turn, Constant Velocity",9/21/05ProjectE - TIM - 1329,Incorrect Table reference in Flight SRS,4,"In the ProjectE Flight SRS Rev A., the requirement 3.6.2.2 b. makes an incorrect reference to Table 3.6.2.2-I. The correct table that shows the allowed mode transitions is Table 3.6.2.2-II ACS Mode Transitions. The requirement is listed below: “The flight software shall reject ACS mode change commands and request safe mode entry if the mode change from the current mode to the new mode is not allowed. See table 3.6.2.2-I for allowed transitions.”",9/21/05ProjectE - TIM - 1328,ACS Mode Transition Discrepancies,3,"The ACS Mode Transitions listed in Section 3.6.2.2, Table 3.6.2.2-II of the ProjectE Flight SRS are not consistent with the ACS Mode/Sub-Mode Table found in the GN&C Subsystem Description and Requirements Rev A Document or the ProjectE GN&C CDR Presentation Slide B5-3. The discrepancies fall within the EDL Modes. The GN&C Spec./CDR has the sub-modes of Hypersonic, Prechute, Parachute, Final Descent and Landed Ops. The Flight SRS shows 5 distinct Hypersonic modes, Prechute, Parachute, Tip-Up, Gravity Turn and Constant Velocity. It is understood that Gravity Turn and Constant Velocity fall within the GN&C Final Descent sub-mode, but is not reflected as such within the Flight SRS. Another discrepancy also falls within the functional description of the ACS Mode/Sub-Mode that is provided in both the GN&C Spec. and CDR Slide B5 presentation. The GN&C Spec provides a Function overview for each ACS Mode/Sub-Mode within its table. The CDR Slide B5 presentation includes that same Function overview, but also supplements the table with a detailed description of each ACS Mode. The SRS is missing the Functional overview along with a more clear-cut detailed description.",9/21/05ProjectE - TIM - 1327,Level 4 Requirement SYSR105 Doesn't Trace Down to Level 5 Requirement SRSR16,3,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B Level 4 requirement SYSR105 doesn't trace down to level 5 requirement SRSR16.,9/21/05ProjectE - TIM - 1326,L5 Requirement SRSR202 Has Specifications That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR202 has specifications that is TBC. ""3.2.5.3.3 Temperature Error Handling The MPTMS CSCI shall: a) read from the hardware the Temperature sensor health data (TBC) every two seconds, b) send or store health data every 256 samples, c) detect faults in Temperature sensor health as described in the Inst10 Internal ICD section (TBC), d) log any errors.""",9/21/05ProjectE - TIM - 1325,L5 Requirement SRSR168 Time Specifications Conflict With L5 Requirement SYSR108,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System REquirements Document.doc Level 5 Requirement SRSR167 timing specifications conflicts with Level 4 requirement SYSR108. Level 4 requirement is TBC. SRSR167 - ""3.2.2.4.2 DeviceFrameCnt The MPTMS CSCI shall count the number of 2 second frames from the time it first reaches the Idle state until power is removed."" SYSR108 - ""3.3.1.5.3.2 Timing Accuracy The Inst10 shall be capable of executing timed commands with an accuracy of TBC (10) ms +/- TBC (10) ms for the Lidar and TBC (2) s +/- TBC (2) s for Pressure and Temperature.""",9/21/05ProjectE - TIM - 1324,L5 Requirement SRSR159 Traces to a Non-Existent Requirement,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR159 traces to DATA25.33, a non-existent ICD requirement. ""3.2.2.2.3 Safe Command Upon receiving the Safe command from the Lander, the MPTMS CSCI shall perform the following (if applicable): a) disable the sensors, b) save science data, error log and flash pointers into Flash, c) cancel the file transfers, and d) return to the Idle state (the Lander can remove power safely). Exception, sudden power loss could occur at any point after receiving the Safe command. In that case the above might not be performed.""",9/21/05ProjectE - TIM - 1323,L5 Requirement SRSR155 Has a Specification That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR155 has a specification that is TBC. Additionally, the Level 4 requirement specifies 10 seconds opposed to 8 seconds. ""3.2.2.1.2 POST Completion/Results The MPTMS CSCI shall: a) complete the POST within (TBC) 8 seconds, b) make the results available ot the Lander in the PTHealthMsg, and c) go to the Idle state regardless of the POST results.""",9/21/05ProjectE - TIM - 1322,L5 Requirement SRSR148 Traces to Non-Existent Parents,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR148 traces to non-existent ICD requirements - (SWICD12 and SWICD36). ""3.2.1.4.1 File Transfers The MPTMS CSCI shall be capable of sending/receiving files to/from the Lander per Inst10 to Lander Software ICD sections: a) 3.4.2.1 Cancelling a Transfer, b) 3.4.2.2 Transfer Complete, c) 3.4.2.3 Block Data Size, d) 3.4.2.4 Initiation of File Transfers, e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb).""",9/21/05ProjectE - TIM - 1321,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-10). The following requirement is vaguely worded: ""The FSW shall be capable of running 8 concurrent sequence engines."" The use of ""be capable"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall allow the running 8 concurrent sequence engines."" Note that this requirement from the CDR package is similar to SRS Rev A Requirement 3.1.1.v",9/20/05ProjectE - TIM - 1320,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-13). The following requirement is vaguely worded: ""The FSW shall provide the ability for mission operations to disable software heater control and operate heaters directly by ground command."" The use of ""provide the ability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall allow mission operations to disable software heater control and operate heaters directly by ground command."" This requirement is equivalent to 3.1.1bu in the SRS Rev A",9/20/05ProjectE - TIM - 1319,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-13). The following requirement is vaguely worded: ""The FSW shall provide autonomous on-board temperature control."" The use of ""provide"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall perform autonomous on-board temperature control."" This requirement is equivalent to SRS Rev A requirement 3.1.1bt",9/20/05ProjectE - TIM - 1318,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-13) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to deadface separated power connections."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall perform deadface separated power connections."" note that this requirement is the same as SRS Rev A 3.1.1bo",9/20/05ProjectE - TIM - 1317,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to store data into non-volatile, flash memory."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall store data into non-volatile, flash memory."" This requirement is comparable to SRS Rev A -- 3.1.1bj",9/20/05ProjectE - TIM - 1316,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to store code and data updates in CMIC memory for retrieval upon FPC reboot."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall store code and data updates in CMIC memory for retrieval upon FPC reboot."" This requirement is 3.1.1.bd in the FSW SRS Rev A",9/20/05ProjectE - TIM - 1315,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following multiple, selectable UHF band return link rates: 8, 32, and 128 kbps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following multiple, selectable UHF band return link rates: 8, 32, and 128 kbps."" This requirement is 3.1.1au in the FSW SRS Rev A",9/20/05ProjectE - TIM - 1314,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (Page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following UHF Band forward link rates: 8 and 32 kbps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following UHF Band forward link rates: 8 and 32 kbps."" This requirement is 3.1.1at in the FSW SRS Rev A",9/20/05ProjectE - TIM - 1313,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to transmit UHF data to the MGS spacecraft."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall transmit UHF data to the MGS spacecraft."" This is requirement 3.1.1ap in the FSW SRS Rev A",9/20/05ProjectE - TIM - 1312,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following X-band downlink rates: 10, 40, 100, 395, 700, 1400 and 2100 bps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following X-band downlink rates: 10, 40, 100, 395, 700, 1400 and 2100 bps."" This is requirement 3.1.1al in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1311,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following X-band uplink rates: 7.8125, 15.625, 31.25, 62.5, 125, 250, 500, 1000 and 2000 bps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following X-band uplink rates: 7.8125, 15.625, 31.25, 62.5, 125, 250, 500, 1000 and 2000 bps."" This requirement is 3.1.1ak in the FSW SRS Rev A",9/20/05ProjectE - TIM - 1310,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide a capability to switch between 10 MHz or 20Mhz cpu processing rates."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall switch between 10 MHz or 20Mhz cpu processing rates."" This is requirement 3.1.1ah in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1309,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to re-transmit data packets that have already been transmitted."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall re-transmit data packets that have already been transmitted."" This is requirement 3.1.1ag in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1308,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall attempt to log events and commands as they are executed for later transmission to the ground."" The use of ""attempt"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall log events and commands as they are executed for later transmission to the ground."" This is requirement 3.1.1af in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1307,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-10) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to configure the selection and ordering of data packets for downlink transmission using Downlink Priority Tables (DPTs)."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall configure the selection and ordering of data packets for downlink transmission using Downlink Priority Tables (DPTs)."" This is requirement 3.1.1ae in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1306,Inst4 SRS Requirement 5500-4 Is Incomplete,3,"Inst4 SRS Requirement 5500-4. The software shall be capable of storing up to 200 command sequences. Each command sequence can contain up to 10 commands. Issue: The requirement for delayed commanding is missing. Page 50 in the CDR Software backup slides shows this functionality. Artifacts: 1. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0 2. Inst4 CDR, Software Backup Slides, May 19-20, 2005",9/20/05ProjectE - TIM - 1305,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-10) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to store spacecraft engineering and health data for subsequent playback."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall store spacecraft engineering and health data for subsequent playback."" This is requirement 3.1.1ab in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1304,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The FSW shall be capable of detecting separation from the launch vehicle third stage."" The use of ""be capable"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall detect separation from the launch vehicle third stage."" This is requirement 3.1.1j in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1303,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The FSW shall be capable of detecting launch vehicle liftoff."" The use of ""be capable"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall detect launch vehicle liftoff."" This is requirement 3.1.1i in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1302,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded and possibly missing a document number: ""The ProjectE FSW design shall be consistent with the ACS Control Algorithms Notebook ."" The use of ""be consistent"" does not lean itself toward verification. It is suggested that the word, ""comply"", be substituted in its place. It is also suggested that a document number be included if one exists for the ACS Control Algorithms Notebook. This is requirement 3.1.1f in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1301,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The ProjectE FSW design shall be consistent with the Fault Protection Description Document PHX-98-0081."" The use of ""be consistent"" does not lean itself toward verification. It is suggested that the word, ""comply"", be substituted in its place. This is requirement 3.1.1e in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1300,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The ProjectE FSW interface between software and hardware shall be consistent with the Software/Hardware ICD PHX-99-0179."" The use of ""be consistent"" does not lean itself toward verification. It is suggested that the word, ""comply"", be substituted in its place. This is requirement 3.1.1c in the SC FSW SRS Rev A",9/20/05ProjectE - TIM - 1298,Level 5 Requirement SRSR17 Contains a Typographical Error,5,"Artifact: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR17 refers to section ""3.4.2.5"" as ""Initiation of File Transfers"". The section ""Initiation of File Transfers"" is ""3.4.2.4"". ""3.2.2.2.1 Command Response Protocol The MLMS CSCI shall implement the command response protocol specified in the Inst10 to Lander Software ICD sections: a) 3.4.1.3 Inst10 Command Response, b) 3.4.1.4 Inst10 Command Response Timing, c) 3.4.1.5 Inst10 Command Rate, d) 3.4.1.6 Additional Inst10 Status Messages and e) 3.4.2.5 Initiation of File Transfers.""",9/19/05ProjectE - TIM - 1297,Level 5 Requirement SRSR24 Traces to a Non-Existent Level 4 Requirement,3,Artifact: CD-MCR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR24 traces to non-existent DATA25.33 requirement in the ICD. There is no indicatation that the requirement has been deleted; it simply does not exist.,9/19/05ProjectE - TIM - 1296,L5 Requirements Are Anemometer and Humidty Sensor Requirements,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System Requirements Document.doc MDR-PHX-ICD-7781_Rev_1-1.8_1.doc ProjectE_Inst10-CDR_Presentation_master.ppt These Level 5 requirements are Anemometer and Humidity sensor requirements: SRSR213, SRSR212, SRSR211, SRSR208, SRSR207, SRSR210, SRSR206, and SRSR205. These Level 5 requirements refer to the Anemometer and Humidity sensor: SRSR181 and SRSR176. Level 5 requirement SRSR209 refers to wind direction, wind speed, and humidity telemetry. The Anemometer and Humidity sensor requirements have been deleted from the ICD and SRD. The Anemometer and Humidity sensor is called the WSA in the CDR presentation and has been ""descoped.""",9/19/05ProjectE - TIM - 1295,L5 Requirement SRSR196 Has a Specification That Is TBD,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR196 has a specification that is TBD and refers to a section of the ICD that is TBD. ""3.2.5.1.2 Temperature Health The MPTMS CSCI shall be capable of reading Temperature health data including: a) (TBD) PRT current, As specified in the Inst10 Internal ICD section (TBD).""",9/19/05ProjectE - TIM - 1294,L5 Requirement SRSR195 Refers to a Section of the ICD That Is TBD,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR195 refers to a section of the ICD that is TBD. ""3.2.5.1 Temperature Data The MPTMS CSCI shall be capable of reading at 0.5 Hz the: a) three thermocouple sensors, b) the isothermal block PRT, and c) the isothermal block thermocouple sensorstored in the hardware as specified in the Inst10 Internal ICD section (TBD).""",9/19/05ProjectE - TIM - 1293,L5 Requirement SRSR192 Refers to a Section of the ICD That Is TBD,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR192 refers to a section of the ICD that is TBD. ""3.2.4.3.3 Pressure Error Handling The MPTMS CSCI shall: a) read from the hardware the Pressure sensor health data (TBD) every two seconds, b ) send or store health data every 256 samples, c) detect faults in Pressure sensor health as described in the Inst10 Internal ICD section (TBD), d) log the errors.""",9/19/05ProjectE - TIM - 1292,L5 Requirement SRSR190 refers to sections of the MDR-PHX-TM-TBD that are TBD.,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR190 refers to sections of MDR-PHX-TM-TBD that are TBD. ""3.2.4.3.1 Science Data Product The MPTMS CSCI shall be capable of: a) converting data received from the hardware interface into a pressure value, if configured for averaging: b) perform average, variance, maximum and minimum calculation for averaging intervals of 256 samples, c) detect a pressure event, if a pressure event is detected in a given averaging interval: d) output the data product from (a) for that interval. if a temperature event is detected in a given averaging interval: e) output the data product from (a) for that interval. Note: - Conversion from sensor values to pressure is specified in the MDR-PHX-TM-TBD section TBD. - Pressure events are defined as difference in maximum and minmum in a 256 sample block greater than the PressureEventThreshold.""",9/19/05ProjectE - TIM - 1291,L5 Requirement SRSR186 Contains Specifications That Are TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement contains specifications that are TBD. ""3.2.4.1.2 Pressure Health The MPTMS CSCI shall be capable of reading Pressure health data including: a) (TBD) pressure voltage, b) (TBD) pressure reference frequency, as specified in the Inst10 Internal ICD section (TBD).""",9/19/05ProjectE - TIM - 1290,L5 Requirement SRSR185 Refers to Sections of the ICD That Are TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 Requirement SRSR185 refers to sections of the ICD that are TBD. ""3.2.4.1.1 Pressure Data The MPTMS CSCI shall be capable of reading at 0.5 Hz the: a) frequency of the three BaroCap sensor, b) frequency of the two 0 pF reference capacitor, and c) frequency of the 10pF reference capatictor d) frequency of the temperature sensor stored in the hardware as specified in the Inst10 Internal ICD section (TBD).""",9/19/05ProjectE - TIM - 1289,L5 Requirement SRSR175 Refers to a Section of the ICD That Is TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR175 refers to section 3.6.4.1 of the ICD describing the StoredDataFile whose contents are TBD. ""3.2.3.2.2 File Format The MPTMS CSCI shall format compressed data as specified in the Inst10 to Lander Software ICD section 3.6.4.1.""",9/19/05ProjectE - TIM - 1288,L5 Requirement SRSR171 Refers to Sections of the ICD That Are TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR171 references sections of the ICD that are TBD. ""3.2.3.1.1 Flash Interface The MPTMS CSCI shall be capable of reading and writing to the non-volatile flash interface as described in the Inst10 Internal ICD section (TBD).""",9/19/05ProjectE - TIM - 1287,L5 Requirement SRSR169 Has Specifications That Are TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requiremnt SRSR169 has specifications that are TBC and refers to a section of the ICD that is TBD. ""3.2.2.5.1 Watchdog The MPTMS CSCI shall interface with a (hardware) watchdog function as follows: a) computer a (TBC) 32-bit checkword (see note) every (TBC) 100 frames, and b) send the checkword to the watchdog. Note: - The checkword is defined in the Inst10 Internal ICD section (TBD).""",9/19/05ProjectE - TIM - 1286,L5 Requirement SRSR167 Has Timing Accuracy Specifications That Are TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System Requirements Document.doc Level 5 requirement SRSR167 timing accuracy specification needs to be confirmed. ""3.2.2.4.1 Timing The MPTMS CSCI shall be capable of executing timed commands with an accuracy of (TBC) 2 seconds +/- (TBC) 2 seconds.""",9/19/05ProjectE - TIM - 1285,L5 Requirement SRSR165 Has a Specification That Is TBD.,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR165 needs has a specification that is TBD. ""3.2.2.3.2 Error Log The MPTMS CSCI shall: a) keep a circular buffer containing the last (TBD) 32 errors that have occurred, b) for a persistent error, log the first and last occurrence, c) store the log in non-volatile memory (in idle or transition to idle), d) sending the Error Log to the Lander when requested, e) continue the circular buffer after power cycling.""",9/19/05ProjectE - TIM - 1284,L5 Requirement SRSR164 Refers to a Section of the ICD That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-IDC-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR164 refers to a section of the ICD that is TBC. ""3.2.2.3.1 Fault Classification The MPTMS CSCI shall be capable of: a) Classifying errors in Category-1 or Category-2 (Cat-1, Cat-2), b) Transition to the Idle state if a Cat-1 fault occurs (Cat-2 faults do not stop the Inst10). c) Updating the classification (see note) via a command from the Lander. Note: - The Inst10 internal ICD section (TBC) shall have a list of errors which can have their classifications changed.""",9/19/05ProjectE - TIM - 1283,"L5 Requirement SRSR157 should read ""3.4.2.4""",5,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 Requirement SRSR157 should read ""3.4.2.4 Initiation of File Transfers"" to match the Level 4 requirement SWICD17 ""3.2.2.2.1 Command Response Protocol The MPTMS CSCI shall implement the command response protocol specified in the Inst10 to Lander Software ICD sections: a) 3.4.1.3 Inst10 Command Response, b) 3.4.1.4 Inst10 Command Response Timing, c) 3.4.1.5 Inst10 Command Rate and d) 3.4.1.6 Additional Inst10 Status Messages and e) 3.4.2.5 Initiation of File Transfers""",9/19/05ProjectE - TIM - 1282,L5 Requirement SRSR154 Has a Specification That Is TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR154 has a specification that is TBC and refers to a section of the ICD that is TBD. ""3.2.2.1.1 Power-On-Self-Test (POST) The MPTMS CSCI shall perform a Power-On-Self-Test (POST) that includes (TBC): a) RAM read/write check, b) Flash read/write check, and c) Sensor data path check. Note: - The specification for each test is documented in the Inst10 Internal ICD section (TBD).""",9/19/05ProjectE - TIM - 1281,L5 SRSR146 traces to Delete L4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_1-1.8_1.doc Level 5 requirement SRSR146 traces to deleted Level 4 requirement SWICD7. ""3.2.1.3.3 Message Format The MPTMS CSCI shall conform to the message format described in the Inst10 to Lander Software ICD section 3.6.2.""",9/19/05ProjectE - TIM - 1280,L5 Requirement SRSR138 Refers to Sections in the ICD that are TBC and TBD,3,"Artifacts: CD-MDR-PHX-7927 Rev1.pdf Level 5 requirement SRSR138 refers to sections of the ICD that are TBC and are TBD. ""3.2.1.1.2 Inst10 Serial Link Error Handling If the serial interface hardware (see note), when receiving data from the Lander, indicates an error the MPTMS shall: a) ignore the message, and b) log the error. Note: - Errors raised by the hardware (e.g. parity, framing) are defined in the Inst10 Internal ICD section (TBD). - (TBC) No hardware level errors have been identified for transmitting data.""",9/19/05ProjectE - TIM - 1279,L5 Requirement SRSR137 Refers to a Section of the ICD That is TBD.,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 Requirement refers to a section of the ICD that is TBD. ""3.2.1.1.1 Inst10 Serial Link The MPTMS CSCI transmits and receives data to the Lander via a low speed (9600 bps) asynchronous serial link. The MPTMS CSCI shall interface with the asynchronous serial link hardware as specified in the Inst10 Internal ICD section (TBD).""",9/14/05ProjectE - TIM - 1278,L5 SRSR134 Traces to Deleted L4 SYSR139,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System Requirements Document.doc The L5 requirement SRSR134 listed here traces to deleted L4 requirement SYSR139 [Inst10 to Anemometer/Humidity Sensor] ""3.1.2 Hardware Interfaces The MPTMS CSCI shall interface with the following hardware: a) Asynchronous Serial Receiver/Transmitter, b) RAM and PROM, c) Pressure Sensor control, data and status registers d) Temperature Sensor control, data and status registers, e) Anemometer and Humidity Sensor power control, f) Anemometer and Humidity Sensor control, data and status registers, g) Flash non-volatile memory. Note: -The Inst10 Internal ICD describes interfaces from the host processor to the hardware.""",9/14/05ProjectE - TIM - 1277,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"Split from TIM 1212 for ease of issue tracking management. ------------------------------------------------------------------------------ There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The Attitude Control component (3.6.4) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 2) The Guidance component (3.6.6) is TBD and does not inherit any requirement from the MSP'01 SRS therefore it is inconsistent with the IR diagram.",8/30/05ProjectE - TIM - 1276,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"Split from TIM 1212 for ease of issue tracking management. ------------------------------------------------------------------------------ There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The Downlink component(3.5.2) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 2) The Telecom component (3.5.5) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS.",8/30/05ProjectE - TIM - 1275,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"Split from TIM 1212 for ease of issue tracking management. ------------------------------------------------------------------------------ There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The I/O PACI driver component (3.4.2) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 2) The CIO component (3.4.7) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 4)",8/30/05ProjectE - TIM - 1273,L3 Science and Payload Requirement 3G2124-1 Is Not Consistent with the Linked Inst9 L4 Requirements,2,"L3 Requirement: 3G2124-1. The Payload shall be capable of excavating a trench that is at least 3 times the width of the scoop at the bottom of a 0.5 m deep trench under the following assumptions: • a lander parallel to the surface • an angle of repose of the material of 60 degrees from the horizontal • material strength equivalent to MER, MPF, VL1 and 2 (<0.1 MPa) • a 50% scoop fill factor • 36 sols of digging at 3.5 hours/sol. L4 Requirements: 3. The Inst9 workspace is divided into 3 surface workspaces and 1 deck workspace. The Inst9 shall be capable of performing the following within each workspace: 1) Surface workspace 1: A swept volume of outer radius 1.65 m and inner radius of 0.50 m, from z = 0.850 m to z = 1.571 m, from qaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.65 m, the Inst9 shall be capable of orienting the scoop in the range of at least 2p/3 to p. For a radial distance between 0.5 to 1.3 m, the Inst9 shall be capable of orienting the scoop in the range of at least -2p/3 to p. The Inst9 shall be capable of orienting the secondary blades and tines in the range of at least -5p/6 to 5p/6 radians and position the Inst8 within 0.5 m of a specified target. 2) Surface workspace 2: A swept volume of outer radius 1.8 m and inner radius of 0.5 m, from z = 0.850 m to z = 1.4 m, from qaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.8 m, the Inst9 shall be capable of orienting the scoop to at least 2p/3 to p. For a radial distance between 0.50 to 1.55 m, the Inst9 shall be capable of orienting the scoop to at least -2p/3 to p. For a radial distance between 1.2 to 1.8 m, the Inst9 shall be capable of orienting the TECP to at least 2p/3 to 5p/6. For a radial distance between 0.85 to 1.8 m, the Inst9 shall be capable of orienting the TECP to a range of at least 3p/4 to 5p/6. 4. The Inst9 shall be capable of excavating 0.0021 m^3 per hour of soil with a compressive strength of < 0.1 MPa. 6. The Inst9 shall be capable of moving the end-effector tools except the Inst8 in straight-line Cartesian motion in 4 degrees of freedom (x, y, z, and pitch) with a deviation of less than 1 cm in translation and 0.08 radians in pitch over a distance of 0.2 m. 7. The Inst9 shall be capable of joint-interpolated motion. 12. The Inst9 shall be capable of positioning the scoop such that a sample in it can be imaged by the Inst8. 17. The Inst9 shall be capable of protecting itself from damage due to excessive joint torques. 18. The Inst9 shall be capable of digging a trench with one command. 20. The Inst9 shall be capable of responding to obstructions while digging/scraping and autonomously continue digging/scraping operations. 30. The Inst9 shall be capable of operating for [373 464 763 3380] joint output revolutions and for 90 Martian sols. 35. The Inst9 shall be capable of monitoring resource use (energy and time) and gracefully terminating the currently executing command during digging/scraping operations. Issue: None of the linked L4 requirements address the intent of the L3 which is, ""The Payload shall be capable of excavating a trench that is at least 3 times the width of the scoop at the bottom of a 0.5 m deep trench"".",8/1/05ProjectE - TIM - 1270,L3 Science and Payload Requirement 3A2115-4 Is Not Fully Addressed by the Linked Instrument L4 Requirement,3,"L3 Requirement: 3A2115-4. The Payload shall have the capability to take a 12 filter multispectral spot anywhere in the Inst6 view area and another 12 filter calibration set of the cal target within 30 minutes. L4 Requirements: 4.5. The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. 4.1.3.6. Filter wheel motion shall be commanded under software control at 1 degree/step. 4.1.3.7. The center position of each filter position shall be at 30 step intervals. 4.1.3.8. An optical index sensor shall be provided to allow position initialization of the FW assembly. Issue: The linked L4 requirements do not address the parent L3 requirement for, ""taking the two sets of measurements within a 30 minute period"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05ProjectE - TIM - 1269,L3 Science and Payload Requirement 3G2123-2 Is Not Fully Addressed by the Linked Instrument L4 Requirement,3,"L3 Requirement: 3G2123-2. The Payload shall determine the reflectance of surface features to a relative accuracy of 3% for reflectances from 5-50%. L4 Requirement: 4.5 The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. Issue: The linked L4 requirement does not address the parent L3 requirement for, ""relative accuracy of 3% for reflectances from 5-50%"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05ProjectE - TIM - 1268,L3 Science and Payload Requirement 3A21114-1 Is Not Fully Addressed by the Linked Instrument L4 Requirement,3,"L3 Requirement: 3A21114-1The Payload shall be capable of measuring changes in the surface reflectance of 10% with an accuracy of 10%. L4 Requirement: 4.5 The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. Issue: The linked L4 requirement does not address the L3 requirement for ""measuring changes in the surface reflectance of 10% with an accuracy of 10%"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05ProjectE - TIM - 1267,L3 Science and Payload Requirement 3A2116-1 Is Not Fully Addressed by the Linked Instrument L4 Requirements,3,"L3 Requirement: 3A2116-1The Payload shall be capable of measuring the atmospheric optical depth for at least 4 wavelengths over the 445-1001 nm range. L4 Requirements: 4.6 The camera shall have depth of focus to cover the Robotic Arm workspace to infinity, (2 meters to infinity). For two filters, a diopter filter will be used to give best possible focus for the Inst4 and Inst5 instruments (1.0 to 1.44 m). 5.1 The Inst6 shall generate flatfields with an uncertainty of < ± 1%.. Issue: The target instrument is the Inst6 yet the linked L4 requirements seem to be associated with the Inst8, Inst4 and Inst5 instruments. The two linked L4 requirements do not address the L3 requirement for ""measuring the atmospheric optical depth for at least 4 wavelengths over the 445-1001 nm range"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05ProjectE - TIM - 1266,L3 Science and Payload Requirement 3A2115-2 contains implied TBD requirements,3,"L3 Requirement: 3A2115-2. The Payload shall be capable of measuring column water vapor abundance with an accuracy of 4 pr microns. L4 Requirements: 4.1.2.8. The camera shall be able to image a vertical slice of the landing site before deployment, from 0 to 42 degrees with no azimuth motion (limited by mechanical restraints and mast cable harness constraints in the stowed configuration). 4.5 The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. 5.1 The Inst6 shall generate flatfields with an uncertainty of < ± 1%. Issue: The preliminary filters are implied TBDs. Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05ProjectE - TIM - 1265,Inst5 FSW SRS - 4.2.2.14 does not specify type of Stage of motion (rotate/translate),3,"4.2.2.14 states: The Inst5 FSW shall implement a command to move the Stage to break off a specified AFM tip [FRD 2.2.1.5, FRD 2.2.4.5]. Issue: The requirement does not specify the type of motion to be performed by the Stage (rotation or translation)",8/1/05ProjectE - TIM - 1264,"L3# 3C21214-7 - ""observing"" is vaguely worded and no verification method is proposed",3,"Requirement 3C212214-7 is vaguely worded and does not propose a verification method. Specifically, what is required in order to ""observing a depth of 5 microns"".",7/31/05ProjectE - TIM - 1263,"L3# 3C21214-9 - ""Observing deliverd samples"" is vaguely worded",3,"Requirement 3C212214-9 is vaguely worded and does not propose a verification method. Specifically, what is required in order to ""observe"" the saample.",7/31/05ProjectE - TIM - 1262,L3# 3SN1-20 - no rationale provided; intended use of spare cell not stated,3,"Requirement 3SN1-20 has no rationale. The requirement states that at least 3 samples be analyzed, allowing for one spare. Based on the Inst5 CDR of 16-17 Jun, 2005, the spare Wet Chemistry Cell is to be used as a ""canary,"" and will be expended in the process of calibration. The requirement should specify this intended use clearly.",7/31/05ProjectE - TIM - 1261,Inst5 FSW SRS - 4.4.2.9 Implied command processing is missing,3,"Inst5 FRD 2.5.3 states: The MFSW shall be able to command and receive all instructions and data modes allowed by the ESFS (Easy Scan Flight Software). Inst5 SRS 4.4.2.9 answers one aspect of the parent requirement with: The Inst5 FSW shall be capable of sending the AFM a pass through low-level command (32 bytes) Issue: The software requirement is unclear regarding the implied capability to recognize and process incoming low-level command to be forwarded directly to the AFM. That is, it is unclear whether this low-level command is under software control, or is relayed from an external source (sequence engine, ground, immediate command, etc.)",7/31/05ProjectE - TIM - 1260,L3 Science and Payload Requirement 3C2136-1 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3C2136-1. The Payload shall be capable of measuring reaction enthalpy and temperature of CO2 evolution from carbonates during heating of the surface and subsurface materials such that the amount of carbonates can be measured to an abundance of 3% and to an accuracy of 10% of the amount present. L4 Requirements: 4022. When the oven assembly is being heated, the leakage into or out of the mated oven assemblies other than through the input and output frits shall be no more than 10% of the carrier gas flow.  4025. The TA shall be capable of heating a sample over the range -53 ºC to 930 ºC.  During high temperature runs goal shall be to reach maximum oven temperature attainable( approximately 1100 ºC. ). 4028. The Inst4 control electronics shall provide a means to measure and downlink the housekeeping parameters to the indicated range, resolution, and accuracy as defined in the Inst4 Housekeeping Definition Document. Issue: The linked L4 requirements do not address the intent of the parent L3 requirement.",7/29/05ProjectE - TIM - 1259,L3 Science and Payload Requirement 3C2135-1 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3C2135-1. The Payload shall be capable of detecting SO2 evolved from sulfate-bearing phases to an abundance of 1% and to an accuracy of 10% of the amount evolved. L4 Requirements: 4022. When the oven assembly is being heated, the leakage into or out of the mated oven assemblies other than through the input and output frits shall be no more than 10% of the carrier gas flow.  4025. The TA shall be capable of heating a sample over the range -53 ºC to 930 ºC.  During high temperature runs goal shall be to reach maximum oven temperature attainable( approximately 1100 ºC. ). Issue: The linked L4 requirements do not address the intent of the parent L3 requirement in that they focus on ""heating"" not detecting SO2.",7/29/05ProjectE - TIM - 1258,L3 Science and Payload Requirement 3C2132-5 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,L3 Requirement: 3C2132-5. The Payload shall be capable of detecting gaseous species and organic molecules with masses ranging from 2 to 140 Da. L4 Requirement: 4006. The GEC shall consist of a volume suitably sized to provide up to 10000s of analysis containing a non-evaporable getter to remove 99% of the CO2 and N2. The GEC shall provide a minimum sample enrichment of the rare atmospheric constituents of 40. Issue: The linked L4 requirement does not address the intent of the parent L3 requirement as it focuses on the GEC and removal of CO2 and N2.,7/29/05ProjectE - TIM - 1257,L3 requirements L3Sci-238 through L3Sci-246 Have Not Been Been Targeted To Any Instrument,2,L3 requirements L3Sci-238 through L3Sci-246 Have Not Been Been Targeted To Any Instrument.,7/29/05ProjectE - TIM - 1256,L3 Science and Payload Requirement 3SN1-21 Is Not Fully Addressed by the Linked Inst4 L4 Requirement,4,"L3 Requirement: 3SN1-21. The Payload shall be capable of analyzing 8 regolith samples via thermal and evolved gas- analysis. L4 requirement: 4055. Provide ability to analyze up to 8 samples. Issue: The L4 requirement does not capture the requirement for ""regolith samples. As it stands, any 8 samples would suffice. The",7/29/05ProjectE - TIM - 1255,L3 Science and Payload Requirement 3SN18-1 Is Not Addressed by the Linked Inst4 L4 Specification,4,"L3 Requirement: 3SN18-1. The Payload shall support surface phase health checks and calibrations of science instruments. Issue: Although Inst4 is the target instrument for this requirement, there are no linked L4 requirements.",7/29/05ProjectE - TIM - 1254,L3 Science and Payload Requirement 3SN9-1 Is Not Addressed by the Inst4 L4 Specification,3,"L3 Requirement: 3SN9-1. The Payload shall be capable of acquiring LIDAR/Inst4 atmospheric measurements within 15 minutes of one another. Issue: Although Inst4 is the target instrument for this requirement, there are no linked L4 requirements.",7/29/05ProjectE - TIM - 1253,L3 Science and Payload Requirement 3B11-1 Is Not Fully Addressed by the Linked Inst4 L4 Specification Requirements,4,"L3 Requirement: 3B11-1. The Payload shall be capable of measuring the heat flux to an accuracy of 0.3 mW and temperatures of the sample in the T range 265-273.5 K with a precision 0.1 K. L4 Requirements: 4028. The Inst4 control electronics shall provide a means to measure and downlink the housekeeping parameters to the indicated range, resolution, and accuracy as defined in the Inst4 Housekeeping Definition Document. 4003. The Inst4 instrument shall be capable of sensing the Current, Voltage, and Pulse Width such that the power on any single measurement can be calculated to an absolute accuracy of 10% or better. The noise on any single power measurement shall be less than 0.5mW over a region where the baseline is stable and well characterized. Issue: The linked L4 requirements do not reflect the L3 requirement to measure over the T range of 265-273.5K.",7/29/05ProjectE - TIM - 1252,L3 Science and Payload Requirement 3C2131-3 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3C2131-3. The Payload shall be capable of measuring the heat flow to the sample every 3K in the T range 220-400K and every 20K in the T range 400-1200K. L4 Requirements: 4023. The Inst4 shall be able to ramp the oven assemblies at variable rates. A zero ramp rate ( Hold ) shall maintain the oven at the setpoint +- 0.5 ºC. 4023.2. Inst4 shall be able to heat a sample at rates between 1 to 25 ºC/minute in the range -53 ºC to 930 ºC. Rate Parameter shall be settable in approximately 1 ºC steps. 4023.3. Inst4 shall be able to maintain a sample at a steady temperature in the range -53 ºC to 930 ºC. 4025. The TA shall be capable of heating a sample over the range -53 ºC to 930 ºC.  During high temperature runs goal shall be to reach maximum oven temperature attainable( approximately 1100 ºC. ). Issue: None of the linked L4 requirements appear to address the requirement to ""measure heat flow to the sample.",7/29/05ProjectE - TIM - 1251,L3 Science and Payload Requirement 3A21111-3 Is Not Consistent With the Linked Inst4 L4 Specification Requirement,3,"L3 Requirement: 3A21111-3. The Payload shall be capable of measuring Ne, Kr, and Xe in the atmosphere with the following accuracies (relative to the amount present): Ne to 5% expected value 2.5 ppmv Kr to 20% expected value 0.3 ppmv Xe to 20% expected value 0.08 ppmv. L4 Requirement: 4054. The dominant peak of a sample (N2 for evolved gas and CO2 for an atmospheric measurement) shall be maximized at 10mB for the atmospheric case and 15 mB for the evolved gas sample case by adjusting the controlled leak. Issue: The linked L4 requirement does not reflect the intent of the parent L3 requirement.",7/29/05ProjectE - TIM - 1250,L3 Science and Payload Requirement 3A2114-2 Is Not Completely Addressed by the Linked Inst4 L4 Specification Requirements,3,L3 Requirement: 3A2114-2. The Payload shall be capable of measuring the water content of the Mars atmosphere at a frequency of at least once per hour over diurnal cycle. L4 Requirements: 4005. The EGA shall have the capability of sampling the atmosphere with and without the use of a Gas Enrichment Cell (GEC). 4008. The direct atmospheric sampling configuration shall allow a measurement within 2% of the final value within 30 minutes of opening the sampling valves to the atmosphere. Issue: The L4 requirement to measure water content and to sample at least once per hour over diurnal cycle have not been reflected in the Inst4 L4.,7/29/05ProjectE - TIM - 1249,L3 Science and Payload Requirement 3A2114-1 Is Not Completely Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3A2114-1. The Payload shall be capable of measuring the water content of the Mars atmosphere over the expected mixing ratios of 50-3000 ppm to an accuracy of 10% of the value. L4 Requirement: 4011.The Mass Spectrometer Assembly shall be assembled and baked to allow the minimum background to be achieved. The maximum allowable background shall be 600 counts per second integrated from peak 2 to 48 Da .  Issue: The L4 focuses on the ""minimum background"" and does not capture part of the intent of the parent L3 which is, ""measuring the water content of the Mars atmosphere over the expected mixing ratios of 50-3000 ppm"".",7/29/05ProjectE - TIM - 1247,Inst9 L4 FRD Does Not Fully Capture All L3 Science & Payload Requirements,3,"Artifacts: L3_Sci_Payload_RQMT_RevA_4-14-05.pdf Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Issue: The following L3 Science & Payload Requirements have no linked children in the Inst9 Functional Requirements Document (FRD). These requirements can impact both hardware and software requirements and therefore should be linked to L4 and L5 requirements. L3 Requirement 3B14-2: The payload shall be capable of positioning a humidity sensor at any height from 50 cm below the top surface of the deck to 125 cm above the top surface of the deck to an accuracy of +/- 5 cm, not necessarily in a vertical line. L3 Requirement 3C2133-26: The Payload shall be capable of acquiring and delivering up to 3 samples from a volume that is less than 10 cm (scoop width direction) x 20 cm (trenching direction) x 1.5 cm (vertical direction). L3 Requirement 3G2124-11: The Payload shall be capable of acquiring (scraping, scooping, and delivering) an icy sample within 1 operational sol. L3 Requirement 3SN1-2: The Payload shall be capable of placing the TECP instrument at 10 cm intervals from surface through 1.5 m above surface. L3 Requirement 3SN18-1: The Payload shall support surface phase health checks and calibrations of science instruments.",7/29/05ProjectE - TIM - 1246,No Inst6 L4 and L5 Requirements for L3 Science & Payload requirement 243,4,"Artifacts: L3_Sci_Payload_RQMT_RevA_4-14-05.pdf Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L3 Requirement 243: The ProjectE instruments shall be able to survive power cycling at any time during their operation. Issue: The L3 parent requirement has no linked children in the Inst6 FRD or the Inst6 SRS. This requirement can impact both hardware and software requirements; therefore, there should be companion (children) requirements in the Inst6 L4 and L5 specifications.",7/29/05ProjectE - TIM - 1244,Inst5 FSW SRS - 7.3.1.1 Missing reference to HSICD,4,The requirement refers to the power board attributes but does not reference the relevant ICD.,7/25/05ProjectE - TIM - 1243,Inst9 L4 Requirement 30 is Incomplete,4,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 30: The Inst9 shall be capable of operating for [373 464 763 3380] joint output revolutions and for 90 Martian sols. Issue: The number of joint output revolutions (373 464 763 3380) stated in the L4 is ambiguous in that it does not relate the operating requirement output revolutions to specific joints (e.g., 373 applies to which joint) and that it does not state if these four numbers are minimum values, values where the specification accuracy can be met before degrading, etc). This leads to an incomplete and untestable requirement.",7/25/05ProjectE - TIM - 1242,"Lack of Traceability Artifacts (PIP 11.1, PSMP 4.1)",3,An RTM was not available to trace the FSW SRS (L4) to the the DPD (L3) and Exhibit III artifacts (or higher). The traceability data between the DPD and Exhibit III artifacts were not complete and contain some errors. This made the traceability to its parents difficult/impractical.,7/25/05ProjectE - TIM - 1241,"Lack of Detail for FSW Single Point Failure (SRS 3.1.1-au, ...)",3,"The PDR material (Q1 - Flight System Engineering) has some details as to how the hardware intends to meet the single-point failure requirement, but there is little information and vague requirements on how software will meet this in the SRS.",7/25/05ProjectE - TIM - 1240,Single Point Failure Circular Reference (PIP 11.4.1 & L2PSR-85),3,"The current PIP references the L2PSR and the L2PSR references the PIP for a list single-point failure exceptions, but neither provide this list. There is a list of exceptions in the PDR material (D - Project System Engineering), but the PDR material is generally not considered a governing artifact (i.e., requirements specification).",7/25/05ProjectE - TIM - 1239,Inst5 FSW SRS - 8.1.1.1 Requirement is in conflict with itself and contains TBD reference,4,"Requirement is in conflict with itself. The requirement states constraints, but notes indicate these are estimates. The actual constraints should be specified, and the relevant ICD cited.",7/24/05ProjectE - TIM - 1238,Inst5 FSW SRS - 7.1.1.1 Missing reference to HSICD,4,The requirement refers to CME attributes but does not reference the relevant ICD.,7/24/05ProjectE - TIM - 1237,Inst5 FSW SRS - 7.2.1.1 Missing reference to HSICD,4,The requirement refers to the Analog Board attributes but does not reference the relevant ICD.,7/24/05ProjectE - TIM - 1236,Inst5 FSW SRS - 6.2.1.4 Missing reference to HSICD,4,"The requirement refers to the FPGA's expected response time, but does not reference the relevant ICD.",7/24/05ProjectE - TIM - 1235,Inst5 FSW SRS - 6.2.1.3 Missing requirement to identify HW intitialization limitations,3,The requirement implies that there are cases where HW initialization is not possible or applicable.,7/24/05ProjectE - TIM - 1234,Inst5 FSW SRS - 6.2.1.1 Requirement implies a non-viable scenario of performing actions prior to unscheduled power loss,3,"This appears to be an nonviable scenario; in the case of unscheduled power-down, it’s too late to save anything.",7/24/05ProjectE - TIM - 1233,Inst5 FSW SRS - 5.2.1.7 Ambiguous and untestable requirement,4,Inst5 FSW SRS - 5.2.1.7 is ambiguous and untestable as written.,7/24/05ProjectE - TIM - 1232,Inst5 FSW SRS - 4.6.1.4 Missing requirement to downlink instrument parameters,4,Missing requirement to downlink instrument parameters in addition to software parameters.,7/24/05ProjectE - TIM - 1231,Inst5 FSW SRS - 4.5.2.3 Missing reference to Inst9 ICD,5,Inst5 FSW SRS - 4.5.2.3 is missing a reference to the related (Inst9) ICD.,7/24/05ProjectE - TIM - 1230,Inst5 FSW SRS - 4.4.5.1 TBD reference to ES manual,5,Inst5 FSW SRS - 4.4.5.1 contains a TBD reference to the Easy Scan manual.,7/24/05ProjectE - TIM - 1229,"Inst5 FSW SRS - 4.4.4.1 ""reapproach"" value is TBD",4,Inst5 FSW SRS - 4.4.4.1 contains a TBD reference to the number of times FSW will reapproach the AFM.,7/24/05ProjectE - TIM - 1228,"Inst5 FSW SRS - 4.4.3.6 ""tip-test function"" is TBD",3,Inst5 FSW SRS - 4.4.3.6 contains a TBD reference to a tip-test function.,7/24/05ProjectE - TIM - 1227,"Inst5 FSW SRS - 4.3.2.2 contains TBD ""algorithm""",4,"4.4.3.2 states: The Inst5 FSW shall implement a commandable option to be able to perform a limited prescan on a sample to determine the maximum scan range possible, and determine the correct scan settings for a full scan (algorithm TBD) [FRD 2.5.3]. Issue - The algorithm for determining the correct scan settings is TBD.",7/24/05ProjectE - TIM - 1226,Inst5 FSW SRS - 4.3.2.1 requirement is at too high level,3,Requirement refers to undefined global variables.,7/24/05ProjectE - TIM - 1225,Inst5 FSW SRS - 4.2.6.2 in conflict with 4.2.2.15,3,"4.2.6.2 states: No Stage rotation shall take place when the AFM is powered and enabled AND the AFM NEAR signal is engaged [FRD 2.2.4.6, FRD 2.5.1] 4.2.2.15 states: The Inst5 FSW shall override the AFM proximity limit switch when executing an AFM tip breaking operation [FRD 2.2.1.16, FRD 2.2.4.5] Issue: These might be in conflict, depending on how 4.2.2.14 is implemented (see TIM 1265). Also, 4.2.6.2 is negatively-stated.",7/24/05ProjectE - TIM - 1224,Inst5 FSW SRS - 4.2.5.3 Multiple TBD values,4,This requirement has multiple TBD values and no shall statements.,7/24/05ProjectE - TIM - 1223,Inst5 FSW SRS - 4.2.5.2 - missing shall statement(s),4,The requirement is missing one or more shall statements.,7/22/05ProjectE - TIM - 1222,Inst5 FSW SRS - 4.2.5.1 - missing shall statement(s),4,The requirement is missing one or more shall statements.,7/22/05ProjectE - TIM - 1221,"Inst5 FSW SRS - 4.2.4.1 - stage ""position"" is TBD",4,The requirement refers to leaving the stage in a TBD position.,7/22/05ProjectE - TIM - 1220,Inst5 FSW SRS - 4.2.2.16 TBD reference to related HSICD paragraph,4,4.2.2.16 states: The Inst5 FSW will take into account the hysteresis in the Stage mechanism through appropriate commanding of a final motion [HSICD TBD]. Issue: The reference to the relevant ICD (HSICD) is TBD.,7/22/05ProjectE - TIM - 1219,Inst5 FSW SRS - 4.2.2.7 Limit switch transition margin is TBD,4,The margin for the the expected limit switch transitions is TBD.,7/22/05ProjectE - TIM - 1218,Inst5 FSW SRS - 4.1.5.5 - TBR value in requirement,4,The temperature of the wet chemistry cell water tank is TBR,7/22/05ProjectE - TIM - 1217,"Inst5 FSW SRS - 4.1.5.3 Ambiguous wording ""previously enabled""",4,"The requirement refers to a cell that has ""previously been enabled."" This wording could be confusing as it implies the software has knowledge of previously enabled, versus what is the currently (and mutually exclusive to other cells) enabled cell.",7/22/05ProjectE - TIM - 1216,Inst5 - Missing flow-down to SRS from Inst5 FRD 2.5.11,2,"FRD 2.5.11 specifies that the experiment components are to be disabled when not in use, and also specifies that they be enabled prior to executing any other commands (for the component). The functional requirements stating the conditions/events/states under which the listed instruments (each WCL cell, the TECP, the AFM, the SWTS, and the OM) are ENABLED, have not been flowed down to the SRS.",7/22/05ProjectE - TIM - 1215,Inst5 FSW SRS 4.1.2.16 - Incorrect requirement refers to sensors instead of WCL cell,4,"Requirement 4.1.2.16 states: The Inst5 FSW shall be capable of suppressing stirring on a per sensor basis during sensor operations [HSICD 4.3, FRD 2.5.9]. Issue: The requirement is incorrect. Stirring applies to cells, not individual sensors.",7/21/05ProjectE - TIM - 1214,"Inst5 FSW SRS 4.1.2.15 - Ambiguous requirement regarding interleaved stirring, heating, etc.",3,Unclear if this is commanded or controlled by software.,7/21/05ProjectE - TIM - 1213,High Level Fault Protection (SRS 3.7.5) refers to deleted subcomponents (ARPM & MCPM),4,"The High Level Fault Protection component (3.7.5) is decomposed in 16 subcomponents according to the SRS, but 2 of them do not have any requirements: the Articulation Performance Monitor (ARPM) (3.7.5.7) and the Momentum Control Performance Monitor (MCPM) (3.7.5.10).",7/21/05ProjectE - TIM - 1212,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The OS Boot S/W (3.3.2) requires a CPU speed of 10MHz (3.2.2.b) instead of the 20MHz required for the inherited S/W; this component cannot be fully credited as reuse and will require full testing.",7/21/05ProjectE - TIM - 1211,Inst9 L5 Requirement 13 is Unclear,4,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 13: The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command. This is defined as a command overrun state. If this occurs the RAE will be shutdown if it is powered. Issue: The L5 states that the Inst9 will be ""shutdown"" if certain conditions are met. It is unclear if ""shutdown"" means to stop Inst9 motion, to safe the Inst9 above the ground (if scraping or digging) and then stop Inst9 motion, or to power off the Inst9 and its associated electronics.",7/21/05ProjectE - TIM - 1210,Inst9 L5 Requirement 12 is Incomplete,3,Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 12: The RAFSW shall provide the capability to update parameters by command. Issue: The specific parameters (or tables) to be updated by command are not defined. This results in an incomplete and untestable requirement.,7/21/05ProjectE - TIM - 1209,Inst9 L5 Requirement 9 is Incomplete,3,Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 9: The RAFSW shall verify the size of the message received from the low-speed PACI serial interface. Issue: The L5 requirement does not state the criteria or parameters to be used for verifying the message size nor the software's response should the message size fail these criteria.,7/21/05ProjectE - TIM - 1208,Inst9 L4 Requirement 59 Has No Linked SRS Requirements,3,Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 59: The Inst9 subsystem shall be capable of performing a health check of the Inst9 actuators and sensors after the Inst9 is enclosed in the microbial barrier and mounted on the Lander. Issue: The Inst9 L4 parent requirement has no linked children in the SRS. The L4 appears to be software related and therefore should be linked to L5 requirements in the Inst9 SRS.,7/21/05ProjectE - TIM - 1207,Inst9 L5 Requirement 17 is not Linked to Parent L4 Requirement 34.,5,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 34: The Inst9 shall be capable of detecting the following faults and safing the arm in response: encoder failure, temperature sensor failure, heater failure, motor failure, potentionmeter failure, PACI-RAE communications failure, joint runaway. Issue: L5 requirement 17 captures the full intent of this L4, but is not linked to the L4 in the SRS. L5 Requirement 17: The RAFSW shall support detection of the following faults by monitoring engineering data and safing the arm in response: encoder failure, temperature sensor failure, heater failure, motor failure, potentionmeter failure, PACI-RAE communications failure, joint runaway.",7/21/05ProjectE - TIM - 1206,Inst9 L4 Requirement 33 is Unclear,3,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 33: The Inst9 shall ensure no single failure shall impact the rest of the payload or the spacecraft. Issue: The term ""impact"" is not sufficiently defined. Without a better definition of impact, it will be difficult to verify compliance with this requirement.",7/21/05ProjectE - TIM - 1205,Inst9 L5 Requirements Do Not Capture the Intent of the Linked L4 Parent Requirement 26,3,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 26: The Inst9 shall be capable of being stowed in and releasing itself from its launch restraints. L5 Requirement 26: The RAFSW shall implement a joint-interpolated path generator. L5 Requirement 46: The RAFSW joint-interpolated path generator shall provide the capability to specify move arguments in absolute joint angles, incremental moves relative to the current joint angles, or time-based moves. L5 Requirement 47: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the distance between via points is less than the specified allowable distance, ä_d, for spatial joint moves. L5 Requirement 48: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the time between via points is less than the specified allowable time, ä_t, for timed moves. Issue: None of the L5 requirements (26, 46, 47 & 48) linked to this L4 captures the intent of this requirement. While they may provide for the motion needed to reach the launch restraints there is no mention of the need to ""stow in and release from"" such restraints.",7/21/05ProjectE - TIM - 1204,Inst9 L5 Requirement 41 Does Not Capture the Full Intent of Parent L4 Requirements 22 and 23,3,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 22: The Inst9 shall be capable of limiting compressive loading on the TECP during insertion to 150 Newtons. L4 Requirement 23: The Inst9 shall be capable of limiting the side loading on the TECP during insertion to 50 Newtons. L5 Requirement 41: The RAFSW shall stop all motion if any joint torque exceeds its absolute threshold. Issue: L4 Requirements 22 & 23 refer to limiting compressive loading and side loading on the TECP, respectively; however, the linked SRS requirement does not distinguish between compressive loading and side loading. It simply states that Inst9 motion will cease if the computed joint torque exceeds a threshold. This will be a problem if the insertion and side loads cannot be translated into joint torque thresholds.",7/21/05ProjectE - TIM - 1203,Inst9 L5 Requirement 8 Does Not Capture the Full Intent of the L4 Parent Requirement 21,3,Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 21: The Inst9 shall be capable of reporting that the sample was delivered to the Inst4 within 60 seconds. L5 Requirement 8: The RAFSW shall report command completion by setting a sequence global variable. Issue: The L4 requires sample delivery status within 60 seconds of completion. The linked L5 does not acknowledge the 60 second time requirement.,7/21/05ProjectE - TIM - 1202,Inst9 L4 Requirement 18 Has No Linked SRS Requirements,5,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 18: The Inst9 shall be capable of digging a trench with one command. Issue: The Inst9 L4 parent requirement has no linked children in the SRS. There is a possible linkage between this parent requirement and SRS requirement 37, which is given below. L5 Requirement 37: The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location.",7/21/05ProjectE - TIM - 1201,Inst9 L5 Requirement 40 is Incomplete,4,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 40: The RAFSW shall be capable of setting the joint torque thresholds for accommodation, free-space, contact and absolute maximum. Issue: The SRS requirement is incomplete in that it does not define the difference between the various threshold parameters: accommodation, free-space, contact and absolute maximum. In the absence of these definitions there is a potential for incorrect software implementation.",7/21/05ProjectE - TIM - 1200,Inst9 L5 Requirement 37 is incorrectly mapped to Inst9 L4 Requirement 17,5,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 17: The Inst9 shall be capable of protecting itself from damage due to excessive joint torques. L5 Requirement 37: The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location. Issue: Inst9 L5 requirement 37 is incorrectly mapped/linked to the L4 requirement.",7/21/05ProjectE - TIM - 1199,Inst9 L4 Requirement 16 Has No Linked SRS Requirements,3,Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 16: The Inst9 shall be capable of delivering a sample from the sample pile location to the instrument input port within 10 min. Issue: The Inst9 L4 parent requirement has no linked children in the SRS. The L4 appears to have software impact (in that software needs to support the 10 minute requirement) and therefore should be linked to L5 requirements in the Inst9 SRS.,7/21/05ProjectE - TIM - 1198,Inst9 L5 Requirements Do Not Capture the Intent of the Linked L4 Parent Requirement 13,3,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 13: The Inst9 shall be capable of incremental relative motion of the end-effector tools less than or equal to 1.5 cm. L5 Requirement 21: The RAFSW shall provide a functionality to select the tool whose location the Cartesian and orientation coordinates in subsequent commands describe. L5 Requirement 22: The RAFSW shall derive and implement the forward kinematics of the Inst9 using homogeneous coordinates and homogeneous transformations from the Inst9 base frame to the tool frame based on Denavit-Hartenberg conventions. L5 Requirement 23: The RAFSW shall derive and implement the inverse kinematics of the Inst9 using closed-form solutions based on Denavit-Hartenberg conventions. L5 Requirement 24: The RAFSW shall implement the inverse kinematics such that the function will compute the joint position that will locate a selected tool frame at the desired Cartesian pose (x,y,z,pitch) if the tool is not the Inst8. L5 Requirement 26: The RAFSW shall implement a joint-interpolated path generator. L5 Requirement 27: The RAFSW shall implement a Cartesian path generator such that the currently selected tool moves in a straight line. L5 Requirement 28: The RAFSW shall implement PID control of the Inst9 joints. L5 Requirement 46: The RAFSW joint-interpolated path generator shall provide the capability to specify move arguments in absolute joint angles, incremental moves relative to the current joint angles, or time-based moves. L5 Requirement 47: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the distance between via points is less than the specified allowable distance, ä_d, for spatial joint moves. L5 Requirement 48: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the time between via points is less than the specified allowable time, ä_t, for timed moves. L5 Requirement 49: The number of via points generated by the RAFSW Cartesian path generator shall satisfy two conditions: 1) the deviation from the Cartesian straight-line path is less than the specified error bound, å_p, and 2) the Cartesian distance between via points is less than the specified allowable distance, ä_d. L5 Requirement 50: The RAFSW Cartesian path generator shall provide the capability to specify move arguments in absolute coordinates with respect to the Inst9 base frame, relative coordinates with respect to the Inst9 base frame, or relative coordinates with respect to the chosen tool frame. Issue: L5 requirements 21, 22, 23, 24, 26, 27, 28, 46, 47, 48, 49 & 50 are linked to L4 Requirement 13; however, none of these L5 requirements state that the Inst9 software will support controlling incremental motion of the end-effector tools to less than or equal to 1.5 cm.",7/21/05ProjectE - TIM - 1196,Inst9 L5 Requirements 40 and 43 do not capture the full intent of their parent Inst9 L4 Requirement 10,3,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 10: The Inst9 shall be capable of moving the end-effector scraping, digging, and brushing tools over a surface that undulates with an amplitude of 25 cm at 50 cm depth with a period of 35 cm. L5 Requirement 40: The RAFSW shall be capable of setting the joint torque thresholds for accommodation, free-space, contact and absolute maximum. L5 Requirement 43: The RAFSW shall implement a scheme to limit the torques on each joint by modifying the arm trajectory when accommodation torque thresholds are reached. Issue: Both of these L5 requirements do not capture the full intent of their parent L4 requirement.",7/21/05ProjectE - TIM - 1195,Full Intent of Inst9 L4 Requirement 6 Not Captured in the Linked L5 Requirements,4,"..................................................................................................................................Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 6: The Inst9 shall be capable of moving the end-effector tools except the Inst8 in straight-line Cartesian motion in 4 degrees of freedom (x, y, z, and pitch) with a deviation of less than 1 cm in translation and 0.08 radians in pitch over a distance of 0.2 m. Linked L5 Requirements: L5 Requirement 27: The RAFSW shall implement a Cartesian path generator such that the currently selected tool moves in a straight line. L5 Requirement 49: The number of via points generated by the RAFSW Cartesian path generator shall satisfy two conditions: 1) the deviation from the Cartesian straight-line path is less than the specified error bound, å_p, and 2) the Cartesian distance between via points is less than the specified allowable distance, ä_d. L5 Requirement 50: The RAFSW Cartesian path generator shall provide the capability to specify move arguments in absolute coordinates with respect to the Inst9 base frame, relative coordinates with respect to the Inst9 base frame, or relative coordinates with respect to the chosen tool frame. Issue: The full intent of the L4 Requirement has not been captured by these linked L5 requirements, in particular the deviation requirement of less than 1 cm in translation and 0.08 radians in pitch over a distance of 0.2 m.",7/21/05ProjectE - TIM - 1194,Inst9 L5 Requirement 39 is Incomplete and Does Not Capture the Full Intent of Inst9 L4 Requirement 5,4,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 5: The Inst9 shall be capable of scraping 3 cc of material per hour from icy soil with a compressive strength up to 8 MPa at a depth of at least 50 cm. L5 Requirement 39: The RAFSW shall implement a single command to scrape the surface at a specified location. Issue: The command arguments for the ""scraping"" command is missing from the L5 requirement (e.g., L5 requirement 37 gives a good description of the command arguments for digging. For reference, L5 requirement 37 is given at the end of this TIM description). In addition, the full intent of the L4 has not been captured by the L5, in particular supporting the scraping rate of 3 cc of material per hour. L5 Requirement 37 (For Reference Only): The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location.",7/21/05ProjectE - TIM - 1193,Inst9 L5 Requirement 37 is Incomplete,4,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 37: The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location. Issue: A description of the reference frame and coordinate system is missing from the L5 requirement. In the absence of specific coordinate definitions there is the potential for incorrect software implementation.The full intent of the L4 has not been captured by the L5, in particular support for the excavation rate of 0.0021 m^3 of soil per hour.",7/21/05ProjectE - TIM - 1191,Inst9 L4 Requirement 3 is Unclear,4,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls L4 Requirement 3: The Inst9 workspace is divided into 3 surface workspaces and 1 deck workspace. The Inst9 shall be capable of performing the following within each workspace: 1) Surface workspace 1: A swept volume of outer radius 1.65 m and inner radius of 0.50 m, from z = 0.850 m to z = 1.571 m, from THETAaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.65 m, the Inst9 shall be capable of orienting the scoop in the range of at least 2PI/3 to PI. For a radial distance between 0.5 to 1.3 m, the Inst9 shall be capable of orienting the scoop in the range of at least -2PI/3 to PI. The Inst9 shall be capable of orienting the secondary blades and tines in the range of at least -5PI/6 to 5PI/6 radians and position the Inst8 within 0.5 m of a specified target. 2) Surface workspace 2: A swept volume of outer radius 1.8 m and inner radius of 0.5 m, from z = 0.850 m to z = 1.4 m, from THETAaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.8 m, the Inst9 shall be capable of orienting the scoop to at least 2PI/3 to PI. For a radial distance between 0.50 to 1.55 m, the Inst9 shall be capable of orienting the scoop to at least -2PI/3 to PI. For a radial distance between 1.2 to 1.8 m, the Inst9 shall be capable of orienting the TECP to at least 2PI/3 to 5PI/6. For a radial distance between 0.85 to 1.8 m, the Inst9 shall be capable of orienting the TECP to a range of at least 3PI/4 to 5PI/6. 3) Surface workspace 3: A swept volume of outer radius 1.4 m and inner radius of 0.85 m, from z = 1.071 m to z = -0.65 m, THETAaz = -3.178 to -1.956 radians. The Inst9 shall be capable of positioning the TECP in the air at some orientation. 4) Deck workspace: A swept volume of outer radius 1.55 m and inner radius of 0.4 m from z = -0.05 m to z = -0.6 m, from THETAaz = -1.571 to -2.967 radians. The Inst9 shall be capable of orienting the scoop in the range of at least -3PI/4 to PI/2 radians. Issue: The textual description of workspace, in the absence of a diagram showing the coordinate systems and angle references, can lead to implementation errors.",7/21/05ProjectE - TIM - 1190,Inst9 L5 Requirement 50 is Incomplete,3,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 50: The RAFSW Cartesian path generator shall provide the capability to specify move arguments in absolute coordinates with respect to the Inst9 base frame, relative coordinates with respect to the Inst9 base frame, or relative coordinates with respect to the chosen tool frame. Issue: A description of absolute/relative coordinates and base/tool frames is missing from this L5 requirement. In the absence of specific coordinate definitions there is the potential for incorrect software implementation.",7/21/05ProjectE - TIM - 1189,Inst5 FSW SRS 4.1.2.13 - Verification method is TBD,3,"Requirement 4.1.2.13 has a specification that is TBD. 4.1.2.13: Inst5 FSW shall raise the drawer temperature to at least -20°C before opening or closing the drawer, to prevent damage (verification TBD).",7/21/05ProjectE - TIM - 1188,Inst5 FSW SRS 4.1.2.12 - Missing requirement to specify expected fault responses,3,"The requirements to handle time-outs, limit switch failure, etc., are missing. A design to handle this fault tree has been developed, but there are no FP requirements for it.",7/21/05ProjectE - TIM - 1187,Inst5 FSW SRS 4.1.2.10 - Events/Conditions to trigger automatic cycling of heaters are missing,3,The events/conditions that trigger the automatic cycling are missing.,7/21/05ProjectE - TIM - 1186,Inst5 FSW SRS 4.1.2.9 - Command(s) to begin temperature monitoring and software response are unclear,3,The requirement as-written is ambiguous. It seems the intent is to send a command that starts the software to monitor and control temp. The commands to be implemented and the required software responses are unclear.,7/20/05ProjectE - TIM - 1185,Inst5 FSW SRS 4.1.2.8 - Intent unclear for monitoring 'any or all' temperature sensors in a single WCL,4,"The intent of the wording, “any or all,” is unclear. It could be interpreted that the FSW reads any single sensor, and also all the sensors. Conversely, the intent could be for the FSW to read any number, up to and including all of them.",7/20/05ProjectE - TIM - 1184,Inst5 FSW SRS 4.1.2.7 - Negatively-stated requirement,4,Requirement 4.1.2.7 is a negatively-stated requirement.,7/20/05ProjectE - TIM - 1183,"Inst5 FSW SRS 3.3.2.4 - time-out value for Alive/Idle discrete lines set ""failed"" is TBD",4,Requirement 3.3.2.4 does not yet have a value for the Alive/Idle discrete lines time-out,7/20/05ProjectE - TIM - 1182,Missing FSW Power To TCM Cat Bed Heater Requirements (DPD 2.6.14),3,The Power To TCM Cat Bed Heater requirement is missing in the SRS. The DPD allocates this requirement to the FSW.,7/19/05ProjectE - TIM - 1181,Missing FSW Power To RCS Cat Bed Heaters Requirement (DPD 2.6.4),3,The Power To RCS Cat Bed Heater requirement is missing in the SRS. The DPD allocates this requirement to the FSW.,7/19/05ProjectE - TIM - 1178,Clock Format Requirement Excludes Epoch Time (SRS 3.1.1-dh & DPD 2.3.7.3),3,The SRS requirement does not include the epoch requirement contained in the DPD.,7/19/05ProjectE - TIM - 1177,Missing FSW Frames Requirement (DPD 2.3.5.14),3,"The Frames requirement is missing in the SRS. The requirement is allocated to the FSW by the DPD. The term ""long frames"" is not specified.",7/19/05ProjectE - TIM - 1176,"Inconsistent X-Band Downlink Data Rates (SRS 3.1.1-cu, DPD 2.3.5.3, Exhibit III 3.1.4 & 3.3.11)",3,"The X-Band downlink data rates are not consistently listed in the SRS, DPD, and Exhibit III specifications.",7/19/05ProjectE - TIM - 1175,"Inconsistent X-Band Uplink Data Rates (SRS 3.1.1-ct, DPD 2.3.5.2, Exhibit III 3.1.3 & 3.3.10)",3,"The X-Band uplink data rates are not consistently listed in the SRS, DPD, and Exhibit III specifications.",7/19/05ProjectE - TIM - 1173,Missing FSW Payload Packet Time Tag and Accuracy Requirement (DPD 2.3.3.3),3,The Payload Packet Time Tag and Accuracy requirement is not accounted for in the SRS. This requirement is allocated to FSW in the DPD.,7/19/05ProjectE - TIM - 1172,Execution Sequence Requirements Inconsistent (SRS 3.1.1-ca & DPD 2.3.1.2),3,The SRS and DPD requirements are not consistent.,7/19/05ProjectE - TIM - 1171,"Inconsistent Wording for Emergency Downlink Rate Requirement (SRS 3.11-bt, DPD 2.2.1.12, Exhibit III 3.4.3) - Entry into Safe Mode vs Fault Detection",3,"The SRS wording of the requirement for the Emergency Downlink Rate is not consistent with the DPD and Exhibit III. Entering into ""safe mode"" and detecting when a fault occurs can be two very different times that could prevent the intent of the requirement.",7/19/05ProjectE - TIM - 1170,"Inconsistent Wording for Emergency Uplink Rate Requirement (SRS 3.11-br, DPD 2.2.1.10, Exhibit III 3.4.2",3,"The SRS wording of the requirement for the Emergency Uplink Rate is not consistent with the DPD and Exhibit III. Entering into ""safe mode"" and detecting when a fault occurs can be two very different times that could prevent the intent of the requirement.",7/19/05ProjectE - TIM - 1168,"Inconsistent Safe Commandable State Requirement in the SRS (3.1.1-bj, DPD 2.2.1.2, Exhibit III 3.4.1 & 3.4.6)",3,The SRS requirement does not include the EDL exception as do the DPD and Exhibit III requirement.,7/19/05ProjectE - TIM - 1167,Inconsistent Failed Spacecraft Clock Requirement (SRS 3.1.1-bg & DPD 2.2.0.7),3,The SRS and DPD requirements are not consistent. The SRS requirement does not have the swap requirement.,7/19/05ProjectE - TIM - 1163,Missing FSW Requirement for Backshell Jettison (DPD 1.4.33),3,There is no requirement in the SRS for this capability as allocated by the DPD. The rational for the backshell jettison indicates this capability will be triggered by software.,7/19/05ProjectE - TIM - 1162,Missing FSW Requirement for Heatshield Jettison (DPD 1.4.29),3,There is no requirement in the SRS for this capability as allocated by the DPD. The rational for the heatshield jettison indicates this capability will be triggered by software.,7/19/05ProjectE - TIM - 1161,Missing & Inconsistent FSW Requirements (DPD 1.4.15 & Exhibit III 4.3),3,There is a requirement allocated to FSW in the DPD (1.4.15) that is not accounted for in the SRS. The details of the requirement in the DPD and Exhibit III are also not consistent.,7/19/05ProjectE - TIM - 1158,"Inconsistent Autonomous Survival Exception Requirements (SRS 3.1.1-s, DPD 1.3.16, & Exhibit III 3.4.1)",3,The requirements are not consistent between the three specifications. The SRS does not include the EDL exception. The Exhibit III requirement specifies all mission phases (excluding EDL) where the DPD only includes the cruise phase.,7/19/05ProjectE - TIM - 1152,"Table Referenced Incorrect (SRS 3.1.1-l, DPD 1.3.4)",4,The table in the requirement is not consistent with the table referenced in the DPD.,7/19/05ProjectE - TIM - 1151,Science Performance Monitor (3.7.5.16) is TBD,3,The Science Performance Monitor requirements in section 3.7.5.16.2 are TBD.,7/15/05ProjectE - TIM - 1149,Inst4 SRS Requirement 5081 Is Incomplete,3,"L5 Requirement: 5081 Inst4 electronics Power. TEFSW shall be capable of controlling Inst4 electronics power. 5081-1 Shall notify 386 of impending power down 5081-2 MAIN2 shall not be ON if MAIN1 is OFF. Issue: Given page 7 in the Inst4 CDR Software Backup Briefing, it is unclear if this requirement completely states the requirements for TEFSW power control.",7/14/05ProjectE - TIM - 1148,Inst4 SRS Requirement 5068 is Incomplete,3,"L5 Requirement: 5068 Sequence Message handling. The TEFSW shall handle the following sequence level messages: a) PASS_THRU b) FILE_LOAD c) MAIN1_POWER d) MAIN2_POWER e) REPLACEMENT_HEATER_POWER (may be going away) f) BOOT_SELECT g) APID_SELECT (currently listed as APID_SWITCH Issue: The term ""handle"" does not specify what actions are to be performed by the software. A such, this requirement is incomplete and untestable. Also, the ""(may be going away)"" under e) is effectively a TBD.",7/14/05ProjectE - TIM - 1147,Inst4 SRS Requirement 5845 Is Incomplete and Is Inconsistent with the Linked Parent L4 Requirement,3,"L4 Requirement: 4050 Inst4 shall be able to recover from an unexpected loss of Lander power. L5 Requirement: 5845 At periodic times, the condition of an experiment will be saved in EEPROM for the restart of the experiment, in case a shutdown is received. Issue: The parent requirement requires recovery from an ""unexpected"" loss of Lander power while the SRS requirement expects a ""shutdown notice"". Requirement 5845 does not identify what data is to be save, how often the save should be scheduled, or any requirements for restarting.",7/14/05ProjectE - TIM - 1146,Inst4 SRS Requirement 5840 Is Incomplete,3,"L5 Requirement: 5840 The software will perform a CRC on all memory devices that contain a resident program (PROM, EEPROM). If a CRC fault is found within the PROM, an error will be reported to the ground, and the EEPROM will be used as a download source. If a CRC fault is found on the EEPROM, an error report will be sent to the ground; this would require a search to determine the bad memory location, and a new load generated relocating the code segment around the bad memory location, to be uploaded to the EGA. Issue: The requirement does not state how often a CRC is to be performed. Also, the search to determine ""the bad memory location"" appears to be allocated to the ground. If the EGA software is to perform this function, the requirement is incomplete.",7/14/05ProjectE - TIM - 1145,Inst4 SRS Section 5.3.6 Is Does Not Address the Intended L4 Parents,3,"Issue: The section shows that there are intended links to L4 requirements 4045 and 4052 but no SRS children are actually linked to these parents. Also, all four L5 requirements within this section use the term ""will"" instead of ""shall"".",7/14/05ProjectE - TIM - 1144,Inst4 SRS Requirement 5841 Is Incomplete,4,L5 Requirement: 5841. The software shall provide a table defined scheme to identify up to TBD engineering items to be output for health and status telemetry reporting. Issue: The requirement contains a TBD.,7/14/05ProjectE - TIM - 1143,Inst4 SRS Requirement 5840-1 Is Incorrect and Incomplete,3,"L5 Requirement: 5840-1 The software shall not downlink lower priority packetized data until all higher priority packetized data has been downlinked. The following is the priority for downlink: Highest priority: Science data, Engineering data, Messages. Lowest priority: Memory dump data. Issue: The priority seems to be incorrect as there is no distinction between engineering and science data in terms of priority. Normally, engineering data (particularly health, EVRs, etc.) is given priority over science data. The parent reference in this requirement should be to 4057, not 4046.",7/14/05ProjectE - TIM - 1142,Inst4 SRS Requirement 5830-4 Does Not Fully Address the Linked Parent L4 Requirement,3,L4 Requirement: 4045 The time bases within the Inst4 PEB electronics and EGA subsystems shall be correlatable to within 5 seconds. L5 Requirement: 5830-4 The software shall put a time tag on each data set. Issue: The SRS requirement does not state that the software will support the 5 second time correlation requirement.,7/14/05ProjectE - TIM - 1141,Inst4 SRS Requirement 5830 Does Not Fully Address the Linked Parent L4 requirement,3,"L4 Requirement: 4056 The Inst4 control system shall transmit all selected science data in all operating modes. L5 Requirement: 5830 The Inst4 shall detect, measure, and telemeter concentration data of gases evolved from heated soil. The concentrations of gases released by the soil sample are measured as a function of time (temperature). Issue: The SRS requirement does not include the requirement to transmit science data in all modes.",7/14/05ProjectE - TIM - 1140,Inst4 SRS Section 5.3.4 Is Incomplete,4,L5 Requirements: 5830-1 The software shall collect evolved gas measurements from MS to be telemetered. 5830-2 The temperatures of each heater shall be measured and telemetered. 5830-3 The software shall also collect and telemeter calibration gas measurements. Issue: It is unclear if the three sub-requirements under 5830 identify all science data to be collected and downlinked. It is noted that Requirement 5820 identified the engineering data through a reference to the Telemetry List.,7/14/05ProjectE - TIM - 1139,Inst4 SRS Requirement 5820-3 Does Not Fully Address the Linked Parent L4 Requirement,3,L4 Requirement: 4045 The time bases within the Inst4 PEB electronics and EGA subsystems shall be correlatable to within 5 seconds. L5 Requirement: 5820-3 An engineering packet shall be followed by a time sync packet. Issue: The SRS requirement does not state that the software will support the 5 second time correlation requirement.,7/14/05ProjectE - TIM - 1138,Inst4 SRS Requirement 5820-1 Does Not Fully Address the Linked Parent L4 Requirement,3,"L4 Requirement: 4047 The Inst4 control system shall packetize and transmit all selected engineering data in all operating modes. L5 Requirement: 5820-1 The software shall telemeter the items identified in the Engineering Data Telemetry List (See Appendix B). One engineering data set shall down linked by the EGA flight software every time unit, which is a configurable amount. Issue: The SRS requirement does not include the requirement to transmit engineering data in all modes.",7/14/05ProjectE - TIM - 1135,Inst4 SRS Requirement 5801 Is Incomplete,4,"L5 Requirement: 5801 Command Verification and Acknowledgement. The software is responsible for receiving, verifying, and executing commands for the EGA instrument. Command data is placed into an input buffer queue for interrogation and verification. All information packets (command, requests, and status) exchanged in either direction between the TA and EGA will be transmitted twice. This is to resolve any communications errors. Issue: This section appears to contain software requirements that are not captured by shall statements in the sub-requirements.",7/13/05ProjectE - TIM - 1134,Inst4 SRS Requirement 5800-1 Does Not Fully Address the Linked L4 Parent Requirement,3,"L4 Requirement: 4004. The EGA subsystem shall provide up to 256 programmable modes with the following minimum modes preprogrammed for analysis. Mass ranges, specific mass numbers, dwell, and scan times shall be programmable where possible. L5 Requirement: 5800-1 The software is responsible for implementing seven modes of analysis as provided in the FRD requirement 4004. Issue: Requirement 4004 requires 256 programmable modes with certain specific ones stated. The SRS does not require 256 programmable modes. The L4 does not define a """"programmable mode"""". How a mode is initiated is not defined.",7/13/05ProjectE - TIM - 1133,Inst4 SRS Requirement 5554 Is Incomplete and Inconsistent with the Linked Parent L4 Requirement,3,"L4 Requirement: 4052 The following conditions shall be defined as a nominal Experiment Halt or Quick Shutdown state (QS). This state shall be achievable within 5 seconds (TBR) after notification from the spacecraft of an impending shutdown. 4052.1 The instrument shall place all valves and mechanisms in a safe or closed state. 4052.2 The instrument shall not heat the Oven sample more than 20 ºC above the last controlled temperature point after notification of an impending power loss. 4052.3 All data and control parameters not previously transmitted to the S/C will be transferred to S/C before power is lost. L5 Requirement: 5554 Upon receipt of a shutdown command, the FSW shall close all valves, forward the command on the EGA, abort any in progress thermal analysis, and transmit all telemetry. Issue: The SRS does not address L4 requirement 4052-2 and for supporting the 5 second time limit. The L5 does not fully specify the state of the system at completion of the shutdown. It is unclear if 5554 fully identifies all actions the software must take in performing a ""quick"" shutdown. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05ProjectE - TIM - 1132,Inst4 SRS Requirement 5551 Is Incomplete,3,"L5 Requirement: 5551 The software shall check the Inst4's RAM upon application of power to the instrument and before using the RAM for data storage. Issue: The requirement does not state the software's response should the RAM check fail. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05ProjectE - TIM - 1131,Inst4 SRS Requirement 5550-2 Is Incomplete,4,"L5 Requirement: 5550-2 During program execution a checksum shall be run in the background. In the event of a failed checksum, an error message shall be sent to the C&DH. Issue: The code or sequence that the checksum is applied to is not defined. Just sending an error message seems to be an incomplete response to such a failure. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05ProjectE - TIM - 1130,Inst4 SRS Requirement 5550-1 Is Incomplete,4,"L5 Requirement: 5550-1 At instrument start, when commands or command sequences are copied form EEPROM to RAM, a checksum shall be calculated to ensure data integrity. In the event of a failed checksum, an error message shall be sent to the C&DH. Issue: Just sending an error message seems to be an incomplete response to such a failure. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05ProjectE - TIM - 1129,Inst4 SRS Requirement 5541 Is Misplaced and Incomplete,4,"L5 Requirement: 5541 The software shall provide a table defined scheme to identify up to TBD engineering items to be output for health and status reporting. Issue: It is unclear why this requirement is found in Section 5.2.5 as it deals with engineering data which is the subject of Section 5.2.3. Also, the requirement contains a TBD.",7/13/05ProjectE - TIM - 1128,Inst4 SRS Requirement 5540-1 Is Incomplete,3,"L5 Requirement: 5540-1 The software shall not downlink lower priority packetized data until all higher priority packetized data has been downlinked. The following is the priority for downlink:Highest priority: Science data, Engineering data, Messages. Lowest priority: Memory dump data. Issue: The priority seems to be incompletely and/or incorrectly defined as there is no specific distinction between engineering and science data in terms of priority. Normally, engineering data (e.g., health, EVRs) is given priority over science data.",7/13/05ProjectE - TIM - 1126,Inst4 SRS Section 5.2.4 Is Incomplete,3,"Section 5.2.4. Inst4 Electronics Board Science Data Processing and Telemetry Requirements. This section delineates the functional and detail level requirements for the processing and down linking of science data. It describes what science data the software is responsible for gathering and down linking and how often this information should be placed into the telemetry stream. The Inst4 science data consists primarily of ovens power, ramp value, and pressure. Issue: The requirements in this section are focused on specific science data. It is unclear if these few requirements address all the science data to be processed and sent for downlink. The L5 requirements do not state ""how often"" the data is sent. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05ProjectE - TIM - 1125,Inst4 SRS Requirements 5020-1 and 5020-2 Are Incorrect,4,L5 Requirements: 5020-1 The software shall telemeter the items identified in the Engineering Data Telemetry List (See Inst4_Engieering_dict.doc). One engineering data set shall be down linked by the Inst4 flight software a configurable amount of time. 5020-2 The collected engineering data shall be sent by the software to the Lander C&DH for down linking. The software shall transmit raw binary data without converting the data into engineering units. Issue: These two requirements seem to address the TEFSW software rather than the 386 software. The latter sends engineering data to the TEFSW which then sends it on to the Lander C&DH for downlink.,7/13/05ProjectE - TIM - 1123,Inst4 SRS Section 5.2.2 Does Not Adequately Specify the Electronics Board Hardware Control Requirements.,3,"Section 5.2.2. Inst4 Electronics Board Hardware Control Requirements. This section delineates the functional and detail level hardware control requirements for FSW in the Inst4 electronics board. Issue: All the requirements in this section are of the form ""accept -- execute commands"" as such they are more associated with Section 5.2.1 rather than Section 5.2.2 and therefore do not fully ""delineate the functional and detailed level hardware control requirements"".",7/13/05ProjectE - TIM - 1122,"Inconsistent DSN Initial Acquisition Requirement (DPD 1.2.16, SRS 3.1.1-j, Exhibit III 3.1.6)",3,The DPD and SRS requirements do not include the 1.5 hour requirement necessary to support tracking for subsequent DSN acquisitions as specified in the Exhibit III spec.,7/13/05ProjectE - TIM - 1121,"Inst4 SRS Requirements 5504-6, 5504-7 and 5504-8 Are Incomplete",3,"L5 Requirements: 5504-6 The software shall be able to halt Inst4 operation at any time. 5504-7 The software shall be able to resume Inst4 operation from the last halted state. 5504-8 The software shall be able to abort Inst4 operation at any time. Issue: It is unclear if these actions are directed by the ground (e.g., by command or sequence) or autonomously by the 386 software. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0.",7/12/05ProjectE - TIM - 1120,Inst4 SRS Requirements 5504-3 and 5004-4 Are Inconsistent with the Linked L4 Parent Requirement,3,"L4 Requirement: 4043 Inst4 shall be able to continue a Thermal/Evolved Gas run based on preprogrammed criteria if nominal starting conditions are not met. An example would be to continue a run after one, several or zero additional attempts as getting additional sample to fill an oven not indicating “full.” L5 Requirements: 5504-3 The software shall be capable of checking status of the oven full sensor. If the oven full sensor does not indicate full after sample dumped from Robotic Arm, the software may ask for another delivery. 5504-4 The number of refills shall be able to be changed before running a sample. If the oven full sensor is still not turned on after a pre-set number of delivery attempts, the software shall be programmed to run the sample or wait for further commands. Issue: The parent L4 seems to state a general requirement for ""continue a Thermal/Evolved Gas run based on preprogrammed criteria if nominal starting conditions are not met"". The parent contains an example concerning ""oven refills"". However, the linked SRS requirements are entirely focused on this example and do not state a general requirement to ""continue a run based on preprogrammed criteria"". Artifacts: 1. Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. 2. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/12/05ProjectE - TIM - 1119,Inst4 SRS Requirement 5504-4 Is Incomplete.,4,"L5 Requirement: 5504-4 The number of refills shall be able to be changed before running a sample. If the oven full sensor is still not turned on after a pre-set number of delivery attempts, the software shall be programmed to run the sample or wait for further commands. Issue: 5504-4 does not specify how it communicates that ""further commands"" will be needed. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/12/05ProjectE - TIM - 1118,Inst4 SRS Requirement 5504 Contains Sub-Requirements That Are Not Operating Commands,4,"L5 Requirements: 5504-2 The software shall receive and store all data from the C&DH before starting an experiment. 5504-3 The software shall be capable of checking status of the oven full sensor. If the oven full sensor does not indicate full after sample dumped from Robotic Arm, the software may ask for another delivery. 5504-4 The number of refills shall be able to be changed before running a sample. If the oven full sensor is still not turned on after a pre-set number of delivery attempts, the software shall be programmed to run the sample or wait for further commands. 5504-9 The software shall provide a mechanism to correlate the time of a gas-release event detected in the EGA to the time of a phase transition in the TA to within less than 5 seconds. Issue: Sub-requirements 5504-2, 5504-3, 5504-4 and 5504-9 appear to be function type requirements, not operating commands. Also, there is no reference in this section to the Spacecraft to Inst4 ICD or to the Command List/Dictionary for definition of Operating Commands. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/12/05ProjectE - TIM - 1115,Inst4 SRS Requirement 5081 Is Incomplete,3,"L5 Requirement: 5081 Inst4 electronics Power. TEFSW shall be capable of controlling Inst4 electronics power. 5081-1 Shall notify 386 of inpending power down. 5081-2 MAIN2 shall not be ON if MAIN1 is OFF. Issue: Although this requirement was changed in Ver 2.3 it still appears to be incomplete considering the material on Page 7 of the CDR Software Backup Slides. As such, the requirement does not completely specify the actions and outputs for controlling power. Artifacts: Inst4 CDR Software Backup Slides, May 19-20 2005 Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005",7/12/05ProjectE - TIM - 1114,Inst4 SRS Structure is Fractured Across Topics,4,"Issue: Like requirements (e.g., fault response) are distributed across the document. Specific requirements are identified in the Corrective Action field. Artifacts: Inst4 Software Requirements Specifications, Ver. 3.0, August 16, 2005",7/12/05ProjectE - TIM - 1113,Inst4 SRS Section 5.1 Is Incomplete,2,"Section 5.1 provides requirements for the Inst4 software that resides in the Lander. This software interfaces with the C&DH in the Lander and with the 386 software in the Inst4 electronics board. Based on the Inst4 CDR material and on statements made in the Inst4 SRS, requirements for the following functionality appears to be missing from this section: (1) produce specific commands for the 386 (in addition to passing commands), (2) perform task initialization, (3) handle the four types of commands (power, safing, discrete, command) and (4) handle file load. In addition, the Inst4 to Spacecraft ICD contains software requirements in Section 3.2 that should be referenced to fully specify TEFSW functionality. The intent of this issue is not to suggest that design type material be placed in the SRS but rather that all functional and performance requirements be captured. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005",7/12/05ProjectE - TIM - 1112,Thermal Differential Control Requirements (3.7.3.3) are not defined,3,There are no requirements for Thermal Differential Control in section 3.7.3.3.,7/7/05ProjectE - TIM - 1111,No L5 Requirement for Inst6 L4 Requirement 5.21 - Tilt Uncertainty,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 5.21, which states ""The Inst6 shall be capable of determining its tilt with an uncertainty of no more than ± 1 degree relative to the lander deck within the first week of surface operations."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1110,No L5 Requirement for Inst6 L4 Requirement 5.20 - Azimuth Uncertainty,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 5.20, which states ""The Inst6 shall be capable of determining its azimuth with an uncertainty of no more than ± 1 degree relative to the lander deck within the first week of surface operations."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1109,No L5 Requirement for Inst6 L4 Requirement 5.13 - Digital Elevation Models,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 5.13, which states ""The Inst6 shall be capable of measuring distance to an object at 3 m to an accuracy of 1 cm. The Inst6 shall be capable of measuring position of the lander deck fiducials to within 3 mrad in an image."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1108,No L5 Requirement for Inst6 L4 Requirement 4.10 - EMC/EMI Compatibility,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 4.10, which states ""The Inst6 instrument shall be designed to meet the EMC/EMI requirements specified in the ProjectE Payload ERD. The instrument shall not be required to operate when the UHF antenna is transmitting or receiving."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1107,No L5 Requirement for Inst6 L4 Requirement 4.3 - Fault Protection,4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) In the given artifacts there is no Inst6 L5 requirement that links to Inst6 L4 requirement 4.3. However, there is a possible link between this L4 requirement and Inst6 L5 requirements 9.1 (Fault Modes), 9.1.1 (Fault Mode Notification) and 9.1.2 (Fault Mode Reset).",7/7/05ProjectE - TIM - 1106,Ambiguous Inst6 L4 Requirement 4.2.8.4 - CCD Image Data Processing Coordination,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) The intent of Inst6 L4 requirement 4.2.8.4 is unclear. The L4 simply states ""Coordination of image data acquisition, processing and downlink activities.""",7/7/05ProjectE - TIM - 1105,No L5 Requirement for Inst6 L4 Requirement 4.2.8.1 - CCD Camera Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that links to Inst6 L4 requirement 4.2.8.1, which states ""The Inst6 instrument control software shall provide for full control of the MER CCD cameras via the Inst6 control electronics."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1104,No L5 Requirement for Inst6 L4 Requirement 4.2.5 - Software Initialization,4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) In the given artifacts there is no Inst6 L5 requirement that links to Inst6 L4 requirement 4.2.5. However, there is a possible link between this L4 requirement and Inst6 L5 requirement 5.6 Inst6 L4 requirement 4.2.5 states ""Upon initialization of the Inst6 flight software by the lander FSW the Inst6 software shall allocate dynamic memory needed and set constant value parameters as required."" Inst6 L5 requirement 5.6 states that the software shall request dynamic memory at initialization from the S/C FSW to allow for the creation of buffers for data processing and compression.",7/7/05ProjectE - TIM - 1103,No L5 Requirement for Inst6 L4 Requirement 4.1.8.3 - DC Power Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to L4 requirement 4.1.8.3 which states ""DC power shall be controlled by the lander under command by the Inst6 flight software."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1102,No L5 Requirement for Inst6 L4 Requirement 4.1.6.17 - Data Rate Requirements,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to L4 requirement 4.1.6.17, which states ""The Inst6 electronics shall be capable of transferring image and housekeeping data between the PEB and the lander control computer through a 2 MHz synchronous interface."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1100,No L5 Requirement for Inst6 L4 Requirement 4.1.6.14 - CCD Exposure Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 4.1.6.14, which states ""The Inst6 control electronics shall provide the ability to start exposures from both CCD cameras for stereo imaging within 1 millisecond of each other."" The parent L4 requirement seems to require software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1099,No L5 Requirement for Inst6 L4 Requirement 4.1.2.3 - Pointing Accuracy,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to L4 requirement 4.1.2.3, which states ""The pointing shall be accurate to ± 17.5 mrad at any position and temperature."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05ProjectE - TIM - 1098,Incomplete Inst6 L5 Requirement 6.3.2.12 - Inst6 Valid Motion Range,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.2.12 requirement does not capture the full intent of Inst6 L4 requirements 4.1.2.1 and 4.1.2.2. L4 requirement 4.1.2.1 addresses pointing the camera in 354 degrees of azimuth and L4 requirement 4.1.2.2 addresses pointing the camera in 180 degrees of elevation . The L5 (which is mapped to both of these L4s) refers to checking the new position value for valid range and issuing an error message if the position exceeds a threshold.,7/7/05ProjectE - TIM - 1097,Incomplete Inst6 L5 Requirement 7.7.3.2 - Inst6 Stereo Pair Acquisition,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.1.9 states ""the Inst6 shall have the capability of taking either stereo pairs or separate images from each CCD"". However, Inst6 L5 requirement 7.7.3.2 (which is directly mapped to this L4) addresses the ability to take stereo images only. It makes no mention of taking separate images from each CCD.",7/7/05ProjectE - TIM - 1096,Inst4 SRS Requirement 5504-2 Is Ambiguous,3,"Inst4 SRS Requirement 5504-2. The software shall receive and store all data from the C&DH before starting an experiment. Issue: This statement gives the impression that the software somehow has the knowledge to check ""all data"" to ensure completeness before starting an experiment. It is unclear if the software or the ground has the responsibility for ""checking data completeness"". In either case, this requirement does not completely state the requirement. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/6/05ProjectE - TIM - 1095,Inst4 SRS Requirement 5500-4 Is Incomplete,3,"Inst4 SRS Requirement 5500-4. The software shall be capable of storing up to 50 command sequences. Each command sequence can contain unto 20 commands. Issue: The requirement for delayed commanding is missing. Page 50 in the CDR Software backup slides shows this functionality. Artifacts: Inst4 SRS, Ver. 2.2, 2-4-05. Inst4 CDR, Software Backup Slides, May 19-20, 2005",7/6/05ProjectE - TIM - 1094,L5 Requirements not mapped to Inst6 L4 Requirement 4.1.6.9 - Heater Fall-Back Method,5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) The Inst6 SRS document does not map any L5 requirements to Inst6 L4 requirement 4.1.6.9. However, L5 requirements 6.2.3 and 9.4 should be mapped to this L4 requirement. Inst6 L4 requirement 4.1.6.9 states ""The Inst6 control electronics shall provide the ability to utilize a fall-back capability to preheat a particular motor under software control by energizing only a single phase winding, or opposite phase windings, without inducing motion by software command."" Inst6 L5 requirement 6.2.3 states ""Each Inst8 actuator shall be capable of utilizing a preheat mode wherein one coil of a selected actuator is energized without inducing motion."" Inst6 L5 requirement 9.4 states ""In the event that an Inst6 actuator heater element should fail the Inst6 software shall attempt to utilize a back-up mode wherein at least one of the stepper motor phase windings is energized without causing motor operation.""",7/6/05ProjectE - TIM - 1093,No L5 Requirement for Inst6 L4 Requirement 4.1.6.8 - Heater Current Consumption,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.6.8 which states ""The Inst6 control electronics shall provide the ability to detect the current consumed during heater activity and return the data back to the instrument control computer when commanded to do so."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/6/05ProjectE - TIM - 1092,No L5 Requirement for Inst6 L4 Requirement 4.1.6.6 - Stepper Motor Current Limiting,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 4.1.6.6 that requires providing the ability to limit the maximum current to any actuator to 0.7 Amperes over the nominal operating temperature range.The parent L4 requirement potentially requires software implementation and therefore should be addressed in the SRS.,7/6/05ProjectE - TIM - 1091,No L5 Requirement for Inst6 L4 Requirement 4.1.6.3 - Stepper Motor Current Sense,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.6.3, which states that the Inst6 control electronics shall provide the ability to sense the current consumed during motor operation and return the data back to the instrument control computer when commanded to do so.",7/6/05ProjectE - TIM - 1090,No L5 Requirement for Inst6 L4 Requirement 4.1.5.2 - Mast Deployment Control,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.5.2 stating that the redundant pyro devices be controlled by the lander computer.,7/6/05ProjectE - TIM - 1089,Incomplete Inst6 L5 Requirement 6.1.1 - Global Motion Control Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.4 states: 4.1.4.1 The Inst6 stepper motor actuators shall be capable of operation from -60 C to 50 C. 4.1.4.2 Each Inst6 stepper motor actuator shall have a heater element attached to the body of the motor. 4.1.4.3 Each actuator heater shall be capable of bringing the motor to a minimum operating temperature of -65 C within 30 minutes from a starting temperature of -90 C degrees. 4.1.4.4 Each actuator heater shall be current limited to 0.7 Amperes. 4.1.4.5 Software shall not command motor operation unless the motor is at the minimum operating temperature. However, Inst6 L5 requirement 6.1.1 (which is mapped to 4.1.4) does not directly address this requirement. Inst6 L5 requirement 6.1.1 states ""The following configurable motion control parameters shall be utilized for all instrument actuators: Actuator Preheat Time: The maximum time in seconds to heat an actuator when it is below the preheat set point: 16-bit Integer (unsigned) Actuator Preheat Set Temperature: The temperature, in non-fractional degrees C, below which the motor heating activity shall be invoked when in automatic mode: 16-bit Integer (signed)""",7/6/05ProjectE - TIM - 1088,No L5 Requirement for Inst6 L4 Requirement 4.1.3.9 - Filter Wheel Index Illumination Source Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.3.9 that states ""The illumination source for the filter wheel optical index sensor shall be controllable by software command."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/6/05ProjectE - TIM - 1087,No L5 Requirement for Inst6 L4 Requirement 4.1.3.7 - Filter Wheel Filter Spacing,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.3.7 of defining the center position of each filter position to be at 30 step intervals. The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.,7/6/05ProjectE - TIM - 1086,Inst4 SRS Requirement 5500-3 Is Incomplete and Inconsistent with the Linked L4 Parent Requirement,3,"Inst4 SRS Requirement 4041. Inst4 shall be capable upon power up of determining compliance with certain starting criteria and beginning the execution of a preprogrammed analysis covering both thermal and mass spectrometry without requiring up linked commands. Inst4 SRS Requirement 5500-3. The software shall check Mars environmental conditions before starting an experiment. If the condition is not in the pre-set operation condition allowance range, the experiment will be scrubbed and a message will be sent to the ground. Issue: The L4 requirement for ""covering both thermal and mass spectrometry"" is not addressed in the linked SRS requirement. The SRS requirement does not identify the Mars environmental conditions to be checked, the pre-set conditions (probably table values) nor the message(s) to be sent to the ground. Artifacts: 1. Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. 2. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/6/05ProjectE - TIM - 1085,Process Speed Requirement Conflicts Between Several SRS and DPD Requirements,4,Their are several processor speed requirements that are in conflict with each other.,7/6/05ProjectE - TIM - 1084,Requirement 3.1.1-en Referencing Wrong DPD Figure Number,5,The SRS requirement in 3.1.1-en is referencing an incorrect figure in the DPD.,7/6/05ProjectE - TIM - 1083,Requirement 3.1.1-em Referencing Wrong DPD Figure Number,5,The SRS requirement in 3.1.1-em is referencing an incorrect figure number in the DPD.,7/6/05ProjectE - TIM - 1082,Conflicting Inst6 L4 Requirement 5.22 - Inst4 Imaging,4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) Inst6 L4 Requirement 4.12 states that the camera and mast shall be mounted such that it can view the Inst4 without obstructions from other components. However, Inst6 L4 Requirement 5.22 states that IF VISIBLE TO THE Inst6, the Inst6 shall be capable of imaging each of the Inst4 Thermal Analyzer screens and doors. These two requirements seem to be in conflict with each other with regards to the requirement of the Inst4 instrument being obstructed from the Inst6 field of view.",7/6/05ProjectE - TIM - 1081,Incomplete L5 Requirements Mapped to L4 Requirement 4.3.2 (CCD Fault Protection),3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirements (5.5.1.2, 5.5.1.3, 9.5, 9.6, 9.7, 9.9) have been mapped to Inst6 L4 requirement 4.3.2 (CCD Fault Protection). However, none of these L5 requirements fully capture the intent of the L4. The requirements in question are given below. Inst6 L4 requirement 4.3.2: In the event of a failed CCD or its associated electronics in the Inst6 camera head, the camera electronics shall be able to shut off power to the failed CCD under software control and continue to acquire images with the remaining CCD. Inst6 L5 requirement 5.5.1.2: The software shall incorporate the capability to command the CCD control logic to read and return the values of commanded discrete outputs (discrete state read-back). Inst6 L5 requirement 5.5.1.3: The software shall utilize the internal discrete read-back capabilities of the CCD control logic (where applicable) to verify commanded discrete output functions. Inst6 L5 requirement 9.5: If the busy signal does not become inactive in the parameter specified time then the software will activate the reset line to reset the electronics and issue an EVR (Event Report). Inst6 L5 requirement 9.6: If there is a mismatch between the commanded output and the internal CCD control electronic discrete state read-back, the software shall reset the hardware using the reset signal and generate an EVR (Event Report) to note the event. Inst6 L5 requirement 9.7: The software shall have the capability of declaring an error condition when an analog input is outside of predefined operational parameters for a configurable period of time. Inst6 L5 requirement 9.9: The MIS SW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the MIS SW ICD and implemented in accordance with referenced LMA FSW requirements documents.",7/6/05ProjectE - TIM - 1080,Incomplete Inst6 L5 Requirement 7.7.1 - Exposure Operation Monitoring,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.2.8 states ""The Inst6 instrument control software shall be capable of commanding every operational mode provided by the MER CCD electronics and by the Inst6 control electronics."" Inst6 L5 requirement 7.7.1 (which is mapped to 4.2.8) states ""The software shall monitor the operation of the camera control electronics for correct operation during CCD exposures by utilizing the discrete BUSY signal line."" Inst6 L5 requirement 7.7.1 does not address Inst6 L4 4.2.8. The L5 mentions monitoring the operation of the camera control electronics for correct operation, but it never addresses commanding.",7/6/05ProjectE - TIM - 1079,Incomplete Inst6 L5 Requirement 7.7.1 - Exposure Operation Monitoring,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.6.11 states ""The Inst6 control electronics shall provide the ability to pass through commands from the flight software to the CCD cameras."" Inst6 L4 requirement 4.1.6.12 states ""The Inst6 control electronics shall provide the ability to return command responses from the CCD cameras directly to the flight software."" Inst6 L5 requirement 7.7.1 (which is directly mapped to both of these L4 requirements) states ""The software shall monitor the operation of the camera control electronics for correct operation during CCD exposures by utilizing the discrete BUSY signal line."" The L5 does not specifically address the L4 requirements of passing commands between the FSW and CCD cameras. The L5 requirement only addresses monitoring the discrete busy signal line.",7/6/05ProjectE - TIM - 1078,Incomplete Inst6 L5 Requirement 6.1.4 - Inst6 Filter Wheel Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Although the capability to control the filter wheel motion has been addressed in Inst6 L5 requirement 6.1.4, it is unclear if the L4 requirement of 1 degree/step has been captured. The allocation of data types for the control function have been captured but the L5 does not specifically address the slew rate.",7/6/05ProjectE - TIM - 1077,Incomplete Inst6 L5 Requirement 6.1.2 - Inst6 Azimuth Axis Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Although the capability to control the azimuth motion has been addressed in Inst6 L5 requirement 6.1.2, it is unclear if the L4 requirement of 0.288 degrees/step, with a maximum backlash of +/- 5.7 mrads has been captured. The allocation of data types for the control function have been captured but the L5 does not specifically address the slew rate.",7/6/05ProjectE - TIM - 1076,Incomplete Inst6 L5 Requirement 6.1.3 - Inst6 Elevation Axis Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Although the capability to control the evelation motion has been addressed in Inst6 L5 requirement 6.1.3, it is unclear if the L4 requirement of 0.288 degrees/step, with a maximum backlash of +/- 5.7 mrads has been captured. The allocation of data types for the control function have been captured but the L5 does not specifically address the slew rate.",7/6/05ProjectE - TIM - 1075,"The term ""Partially Blocked"" is undefined for Inst6 L4 Requirements 4.1.2.5 and 4.1.2.6",4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirements 4.1.2.5 and 4.1.2.6 deem it acceptable for the view from the Inst6 to be ""partially blocked"" by the lander gimbal and the deployable boom assembly tip plate at certain azimuth and elevation angles. However, the term ""partially blocked"" is not sufficiently defined.",7/6/05ProjectE - TIM - 1074,Unlinked Inst6 L5 Requirement 9.4 - Inst6 Heater Element Failure,5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) At present this L5 requirement (Inst6 9.4) is not linked to any L4 requirement, but should be linked to Inst6 L4 requirement 4.1.6.9. Inst6 L4 requirement 4.1.6.9 states ""The Inst6 control electronics shall provide the ability to utilize a fall-back capability to preheat a particular motor under software control by energizing only a single phase winding, or opposite phase windings, without inducing motion by software command."" Inst6 L5 requirement 9.4 states ""In the event that an Inst6 actuator heater element should fail the Inst6 software shall attempt to utilize a back-up mode wherein at least one of the stepper motor phase windings is energized without causing motor operation.""",7/6/05ProjectE - TIM - 1073,Incomplete Inst6 L5 Requirement 9.1 - Fault Modes,3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 9.1 states that the MIS software shall incorporate backup modes of operation to provide an equivalent functionality in the event of a failure of a primary mode of functionality. However, a description of these backup modes have been omitted.",7/6/05ProjectE - TIM - 1072,Ambiguous Inst6 L5 Requirement 6.3.1.1.5 - Motion Direction (Elevation),3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 reqirement 6.3.1.1.5 states that motion direction for the elevation axis shall be automatically determined from the value and sign of the step count parameter. However, the direction of motion for positive values and negative values of step count is missing from this requirement (e.g. positive step counts correspond to an increase in elevation angle).",7/6/05ProjectE - TIM - 1070,Inst4 SRS 5080 Is Incomplete in Stating Requirements for Safing,3,"Inst4 SRS Requirement 5080. Safing. TEFSW shall be capable of safing the Inst4 electronics. Issue: This statement does not define the ""safe state"" in terms of the states/status of the Inst4 components (e.g., e.g., power control, valve positions, thermal control, tasks executing, etc.). Artifacts: Inst4 Subsystem Software Requirements Specification",7/6/05ProjectE - TIM - 1069,Missing Requirements for EDL Kalman Filter (EDL-2) in section 3.6.6,3,The Kalman Filter requirements for the EDL phase are not defined.,7/6/05ProjectE - TIM - 1068,Inst4 SRS Requirement 5063 is Inconsistent with the Spacecraft to Inst4 ICD,3,"Inst4 SRS Requirement 5063. Invalid Command Handling. Invalid commands (incomplete, invalid or corrupted) shall cause the software to issue an error message via the LMA FSW EVR facility, increment a fault protection error counter for interrogation by the LMA FSW and cease processing the current command. Spacecraft to Inst4 ICD, Section 3.2.4.8.1.1. Perform Command Interface Error Checking. Once per command sent the TEFSW will execute the following steps: If the Command Interface detection is enabled and an error is returned on a command sent to Inst4, the TEFSW shall increment the Command Interface error counter and set the fault protection condition to Suspect. If the Command Interface response is enabled, and this is the first fault, (exceeded configurable number of consecutive Command Interface errors), the TEFSW shall record Command Interface in fault in the Fault History Table (FHT) and set its condition to Failed. Note – this Failed condition “latches” and can only be reset via TEFSW initialization. Else, (no error was returned from the command sent or detection is disabled), the TEFSW shall reset the Command Interface error counter and set its condition to Good. Issue: The two requirements for command interfacing error checking appear to be inconsistent. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05ProjectE - TIM - 1067,Inst4 SRS Requirerment 5067 is Incomplete,3,"Inst4 SRS Requirement 5067. The TEFSW shall handle the following system level messages: a)SYS_INIT b)SYS_PING c)SYS_FP_ENAB d)EPSO_COMP_STATE e)Inst4_RESET f)Inst4_SAFING g)Inst4_POWER_DOWN Issue: Requirement 5067 does not state what the response to these messages should be. It is noted that the Spacecraft to Inst4 ICD defines several of them; however, the ICD definitions also appear incomplete. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05ProjectE - TIM - 1066,Inst4 SRS Requirement 5062 Is Incomplete and Potentially Incorrect,3,"Inst4 SRS Requirement 5062. Error Detection. Error detection and handling shall be in accordance with referenced Contractor3 FSW requirements documents: LMA ProjectE Payload FSW API Guide, Section 3.5 and LMA ProjectE Payload FSW API Guide, Section 3.9. Issue: It is unclear why the SRS only points to the LMA document for error detection and handling as the Spacecraft to Inst4 ICD also contains such requirements. Also, IV&V understands that the Project will develop a Fault Protection Performance Specification that will document error detection and handling requirements and design. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05ProjectE - TIM - 1065,Inst4 SRS Requirement 5061 is Inconsistent with the Spacecraft to Inst4 ICD,4,"Inst4 SRS Requirement 5061. The TEFSW shall provide a callback to the Contractor3 for power consumption data. ICD 3.2.4.3 Modeled Power. Upon request, the TEFSW shall return its parameterized value for power consumption. This value will be different for each distinct power state of the Inst4 instrument. Issue: The SRS and ICD requirements are not completely consistent in stating the requirement for returning power consumption data. Artifacts: Inst4 SRS, Ver. 2.2, 2-4-05. ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05ProjectE - TIM - 1064,Inst4 SRS Requirement 5060 Is Incomplete and Potentially Incorrect,4,"Inst4 SRS Requirement 5060. The TESW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the TESW ICD and implemented in accordance with referenced LMA FSW requirements documents. Issue: The definition of the two referenced documents is incomplete and incorrect in that the specific document and revision numbers are not stated and the TESW ICD is unknown to IV&V (possibly this is the Spacecraft to Inst4 ICD). Moreover, neither document is found in the SRS, Section 3.0. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05ProjectE - TIM - 1063,Inst4 SRS Requirement 5050-4 Is Inconsistent with the Linked Parent FRD Requirement,3,"Inst4 L4 Requirement 4040. The control system shall be able to boot and run from at least two code sources stored in EEPROM. The designated bank shall be externally selectable using a S/C driven control line. Inst4 SRS Requirement 5050-4. During initialization of the TEFSW, the BOOT_SELECT discrete shall be set low. Issue: The SRS requirement does not state that the TEFSW shall be able to drive the discrete line to select one of the two 386 code sources in EEPROM, if this is the intent of 4040. If the default is ""low"" then this fact should be stated. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. Inst4 SRS, Ver. 2.2, 2-4-05.",7/6/05ProjectE - TIM - 1062,Inst4 Requirement 5050-3 Is Unclear in Stating the Response to a Failed State,4,"Inst4 Requirement 5050-3. If the Inst4 heartbeat recovery sequence fails, as measured by a second failed state, the flight software shall downlink a notice the Inst4 was powered off, the time of the last Inst4 heartbeat, the current time, and the Inst4 heartbeat count. Issue: This requirement seem to imply that the response to a second failed state is """"power off Inst4""""; however, the text does not directly state this. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver 3.0, August 16, 2005",7/6/05ProjectE - TIM - 1061,Incomplete Inst6 L4 Requirement 7.0 - Investigation / Operations,5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 7.0 claims compliance to the Level 3 Science Requirements document; however, the version and date of the Science Requirements document that it references is marked as TBD.",7/6/05ProjectE - TIM - 1060,Incomplete Inst6 L5 Requirements,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) The Inst6 L5 requirements (5.2.1, 5.2.2, 5.2.3, 5.2.4, 5.2.5, 5.2.6, 5.2.7, 5.5.2.1, 5.5.2.2, 8.1, 8.3, 8.4) are directly mapped to Inst6 L4 requirement 4.2.4, which includes 4.2.4.1, 4.2.4.2, and 4.2.4.3. However, it is unclear from these L5 requirements if the full intent of L4 requirement 4.2.4 has been captured. In particular, L4 requirement 4.2.4.3 (calling for 1024x1024x12 bit uncompressed images) and L4 requirement 4.2.4.2 (imposing that all packetized data contain enough information so that the packets can arrive to the flight computer in any order) have not been addressed by the linked L5 requirements.",7/6/05ProjectE - TIM - 1059,Incorrect Mapping of L5 Requirement 7.6 - Image Processing Tables and Models,5,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 7.6 is incorrectly mapped to Inst6 L4 requirement 4.2.3. Instead it should be mapped to Inst6 L4 requirements 4.2.9.2 (Hot Pixel Corrections) and 4.2.9.3 (Bad Pixel Corrections).,7/6/05ProjectE - TIM - 1058,Incomplete Inst6 L5 Requirement 5.6 - Memory Functions,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 5.6 does not address the non-volatile storage requirements of Inst6 L4 requirement 4.2.3.,7/6/05ProjectE - TIM - 1057,Ambiguous Inst6 L5 Requirement 6.4.3 - Inst8 Shutdown Procedure (Focus),4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.4.3 states that the Inst8 shutdown procedure shall be to move the focus motor to near the switch position to minimize the focus travel to detect the switch. The term ""near the swith position"" is ambiguous",7/6/05ProjectE - TIM - 1056,Incomplete Inst6 L5 Requirement 6.4.1 - Inst8 Focus Motor Park Position,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.4.1: The Inst8 focus motor shall be left in a parked position that is not within 3 steps of either end of travel. This is to prevent the thermal contraction of the case from jamming the focus leadscrew. Issue: A description of ""parked position"" is missing from this SRS requirement. It is not clear from this requirement what position the Inst8 focus motor must be in to be considered ""parked"". Without a clear definition there is the potential for incorrect software implementation.",7/6/05ProjectE - TIM - 1055,Ambiguous L5 Requirement 6.3.2.20 - Inst6 Shutdown State Verification,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.3.2.20 (Inst6 Shutdown State Verification): In order to reduce the overall time required for shutdown the software shall check that each axis of the Inst6 is in the safe position before powering off the electronics and shutting down the software. If the Inst6 is already in a safe mode (position-wise), then no motion is necessary. Issue: The last sentence of this L5 requirement (if the Inst6 is already in a safe mode, then no motion is necessary) leads one to believe that the nominal Inst6 shutdown procedure will leave the Inst6 in the same position as the safe mode shutdown procedure. This assumption, if true, is contradictory to the following L5 requirements which capture nominal shutdown and safemode shutdown procedures: L5 Requirement 6.3.2.14 (Inst6 Safe Mode): Upon receipt of a safe mode command or safe mode signal from the lander FSW the Inst6 shall be rotated into the stowed (down) position and power to the actuators and CCD sensors disabled. The azimuth shall remain at its last position. L5 Requirement 6.3.2.16 (Inst6 Shutdown Position): The shutdown position for the Inst6 shall be with the AZ axis driven into the hard stop pin and EL axis driven to the down (nadir) position hard stop.",7/6/05ProjectE - TIM - 1054,Incomplete Inst6 L5 Requirement 6.3.2.13 - Filter Wheel Positions,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.3.2.13 (Filter Wheel Positions): Each filter position shall be counted in the CW direction from the index home position. Issue: A definition of ""home position"" and a coordinate system defining the CW direction are missing from the SRS requirement. In the absence of specific coordinate definition there is the potential for incorrect software implementation.",7/6/05ProjectE - TIM - 1052,Incomplete Inst6 L5 Requirement 6.3.1.1.7 - Motion Sequence Order,3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.3.1.1.7 (Motion Sequence Order): A motion sequence shall consist of either azimuth, elevation, and filter wheel, or filter wheel, azimuth, and elevation. Issue: It is assumed that the sequence order to be used is determined on the ground and not by the flight software. However, the requirement does not state how the flight software determines which motion sequence is currently being used by the ground.",7/6/05ProjectE - TIM - 1051,Incomplete Inst6 L5 Requirement 6.3.1.1.3 - Motion Target Position (Filter Wheel),4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1.3 states that all filter wheel motion shall be specified as either an absolute number of steps or as a filter number. However, there is no mention of any position feedback into the control laws (e.g. determining the current position of the filter wheel).",7/6/05ProjectE - TIM - 1050,Ambiguous Inst6 L5 Requirement 5.3.1.3 - Modification of Configuration Files,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 5.3.1.3 states ""Normal instrument operation shall not directly alter uploaded configuration files"". It is unclear what is meant by ""normal instrument operation"" and ""directly alter"". The commands and/or states under which configuration files can be altered are missing.",7/6/05ProjectE - TIM - 1049,Inst4 SRS Requirements 5050-1.4 and 5050-2 Are Unclear,4,"Inst4 SRS Requirements: 5050-1.2 The TEFSW shall define a failed state as when the flight software has failed to receive a Inst4 heartbeat or when commanded to perform an instrument reset. 5050-1.4 In the case of a failed state, TEFSW shall run a Inst4 heartbeat-failure command sequence no more that 10 commands in length. 5050-2 The TEFSW shall be able to reset Inst4 electronics board in case that it has not seen a heartbeat from the Inst4 electronics in a configurable period of time. Issue: Based on these requirements it is unclear if the software is to run a heartbeat failure command sequence or reset the Inst4 electronics. Artifacts: Inst4 SRS, Ver. 2.2, 2-4-05",7/6/05ProjectE - TIM - 1048,Missing Requirements 3.6.5.2 Terminal Descent Guidance Controller (EDL-3),3,The Terminal Descent Guidance Controller (EDL-3) section is TBD.,7/6/05ProjectE - TIM - 1047,Missing Requirements 3.6.5.1 Aeromaneuvering Guidance,3,The Aeromaneuvering Guidance section 3.6.5.1 is TBD.,7/6/05ProjectE - TIM - 1046,Inst4 L4 FRD Missing Definition of Nominal Recoverable State,3,"L4 FRD. 4048 Inst4 shall be able to recover from reasonably anticipated failure modes by achieving the specification of a Nominal Recoverable State. Issue: The L4 does not define this state in terms of Inst4 component states/status, e.g., power control, valve positions, thermal control, etc. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS.",7/6/05ProjectE - TIM - 1045,Unclear requirement for maximum change in roll command during terminal descent (section 3.1.1 aa.),3,"Paragraph 3.1.1 aa states ""The FSW shall control the maximum change in commanded roll orientation less than 20 degrees during terminal descent."" It is unclear whether aa refers to maximum change in commanded roll from one cycle to another or from the start to the end of terminal descent, or something else. Additionally, 3.1.1 aa appears to be missing the word ""to"" between ""orientation"" and ""less"".",7/6/05ProjectE - TIM - 1044,"Inst4 SRS Section 5.1.5, Fault Recovery Requirments, is Splintered, Inconsistent and Potentially Incomplete",3,"Apparently, there are five sources for Inst4 fault recovery requirements: (1) the Inst4 SRS, (2) the Spacecraft to Inst4 ICD,(3) the LMA ProjectE Payload FSW API Guide Sections 3.5 and 3.9,(4) a ProjectE fault recovery document and (5) the Inst4 L4 FRD. It is noted that: (1) the IV&V Team did not receive a copy of document 4; therefore, the types of fault recovery requirements in these document are unknown to IV&V, (2) fault recovery requirements in the ICD are similar in format and scope as those found in the SRS and it appears that all of them apply to the TEFSW and (3) the SRS references the L4 FRD but the FRD made available to IV&V does not reference the ICD. It is also noted that ICD Section 3.2.4.8.3 identifies requirements for the Aliveness Check. If this check is the same as the Heartbeat Check, then the SRS is inconsistent with the ICD. For example: (1) the SRS does not require being ""disabled for a configurable period of time after power up or reset"", (2) the error checking steps defined in ICD section 3.2.4.8.3.1 are not consistent with requirements 5050-1, 5050-2 and 5050-3 and (3) ICD section 3.2.8 defines error checking for commanding and telemetry. Paragraph 5.1.5 refers to a ""ProjectE recovery document"" but this document is not specifically defined and therefore could not be located by the IV&V team. Given this situation, there is no single place (or a consistent linking of fault recovery requirements across documents) where the TEFSW fault recovery requirements are completely and consistently defined. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/5/05ProjectE - TIM - 1043,Inst4 SRS Requirement 5004-1 Is Inconsistent with the Linked Parent L4 Requirement 4039,3,"L4 requirement 4039. Inst4 electronics shall be capable of being reset by a command directly from the TEFSW. SRS Requirement 5004-1. TEFSW shall reset its operating parameters upon command. Issue: The L4 requirement deals with resetting the Inst4 electronics based on a TEFSW command; however, 5004-1 addresses resetting the TEFSW operating parameters. The two requirements are inconsistent. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. Inst4 SRS, Ver. 2.2, 2-4-05.",7/5/05ProjectE - TIM - 1042,Inst4 SRS Requirement 5003-1 Does Not Fully Address the Linked Parent L4 Requirement,3,"Inst4 L4 Requirement 4046. The time base between the Inst4 PEB electronics and S/C system clock shall be correlatable to within 1 second. Inst4 SRS Requirement 5003-1. TEFSW shall send the spacecraft time to the Inst4 instrument. Issue: The L4 requires that the time be correlated to within 1 second. The SRS requirement only requires that time be sent to the Inst4. It is likely that the software has a role in ensuring that the one second correlation is met. It is noted that the Spacecraft to Inst4 ICD , Section 3.2.3, addresses time requirements but is not linked to the SRS.",7/5/05ProjectE - TIM - 1041,Inst4 SRS Requirement 5002-1 is Incomplete,3,"Inst4 SRS Requirement 5002-1. TEFSW shall calculate and add checksums to certain instrument commands. Issue: The specific commands requiring checksums are not defined. This results in an incomplete and untestable requirment. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005",7/5/05ProjectE - TIM - 1040,Ambiguous Inst6 L5 Requirement 6.3.1.1.4 - Motion Direction (Azimuth),4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1.4 states that the azimuth axis shall be specified by a command parameter (clockwise or counter-clockwise). However, it is not clear what is meant by clockwise or counter-clockwise without defining a reference frame.",7/5/05ProjectE - TIM - 1039,Incomplete Inst6 L5 Requirement 6.3.1.1.2 - Motion Target Position,3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1.2 states that all azimuth/elevation motion shall be specified in either an absolute number of steps from the home position, or as a relative number of steps from the current position. However, there is no mention of position feedback into the control laws (e.g. determining the current position) or the method of determining direction (e.g. clockwise or counter-clockwise motion).",7/5/05ProjectE - TIM - 1038,Indistinct Inst6 L5 Requirement 6.3.1.1 - Motion Commanding,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1 does not clarify what is meant by the term composite, when referring to the software supporting the use of a composite command to define the motion parameters for all three axes.",7/5/05ProjectE - TIM - 1037,"Unlinked Inst6 L5 Requirement 6.2.3 - Preheat Activation, Inst8",5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) At present this L5 requirement (Inst6 6.2.3) is not linked to any L4 requirement, but should be linked to Inst6 L4 requirement 4.1.6.9. Inst6 L4 requirement 4.1.6.9 states the Inst6 control electronics shall provide the ability to utilize a fall-back capability to preheat a particular motor under software control by energizing only a single phase winding, or opposite phase windings, without inducing motion by software command. Inst6 L5 requirement 6.2.3 states each Inst8 actuator shall be capable of utilizing a preheat mode wherein one coil of a selected actuator is energized without inducing motion.",7/5/05ProjectE - TIM - 1036,Ambiguous Inst6 L5 Requirement 6.2.1 - Automatic Preheat,4,Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.2.1 states that the MIS software shall support the ability to automatically perform a closed-loop actuator preheat. It is unclear from this requirement if the actuator preheat is obtained from a heater or obtained from energizing a single coil. (Heater Fall-Back Method),7/5/05ProjectE - TIM - 1035,Inst4 SRS Requirments 5001 and 5002 Do Not Fully Address the Linked Parent L4 Requirement,4,"Inst4 SRS Requirements: 5001 TEFSW Command and Command Sequence 5002 TEFSW Command Verification and Acknowledgement Inst4 L4 FRD Requirement: 4036 The Inst4 electronics shall communicate to the ProjectE Lander through a low speed bi-directional interface specified in the Instrument Interface Control Document. Issue: The two referenced SRS requirements (including their sub-requirements) do not refer to the Instrument ICD (presumably this is the same as the Spacecraft to Inst4 ICD) for commanding and telemetry related requirements as does the linked parent FRD requirement 4036. It is noted that the Spacecraft to Inst4 ICD, section 3.2.5, contains ground commanding type requirements and a reference to the Command Dictionary; therefore, the specific definition of commands to be handled is not addressed in the SRS. Artifacts: Inst4 L4, 5-14-05, CDR-ECRBaseline for DOORS Inst4 SRS, Ver. 2.2, 2-4-05 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/5/05ProjectE - TIM - 1034,Inst5 - Software Configuration Management of AFM Microcode,3,"At the Inst5 CDR held on 16/17 Jun 2005, the project disclosed that instrument testing anomalies were attributed to different software versions being run on the Atomic Force Microscope (AFM). Tests were not run using Inst5 FSW. No configuration management of the AFM software was identified during the review. An RFA (# TBD) was submitted by IV&V during the CDR.",7/5/05ProjectE - TIM - 1033,Incomplete Inst6 L5 Requirement 6.3.2.6 - Inst6 Elevation Position Reset,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.2.4 mentions zero degrees elevation reference being at the midpoint of the elevation range of motion. However, Inst6 L5 requirement 6.3.2.6 (which is directly mapped to the L4) states an initialization of -90 degrees.",7/2/05ProjectE - TIM - 1032,"Requirements 3.1.1-eb, 3.3.4.6.2-a, & 3.6.4.4.2-d Have Inconsistent Jitter Requirements",3,"There are three jitter requirements that are in conflict with each other. The first requirement (3.1.1-eb) is in conflict with itself. The second requirement (3.3.4.6.2-a) is the O/S requirement and may be too loose to meet the Propulsion/Gas Jet requirement. The third requirement (3.6.4.4.2-d) looks like it contains the intent. 3.5.6.1 Telemetry Layout e. Attitude control encounters no greater than 5 milliseconds of jitter when providing telemetry data measurements. Requirement 3.3.4.6.2 The flight software shall provide the capability to perform discrete operations at precise interval execution with jitter less than 2 milliseconds. Requirement 3.6.4.4.2 d. The Propulsion/Gas Jet processing flight software shall invoke the PVDM card execute command once every 10 Hz cycle with 100 Hz precision (as specified by the minor frame offset) with no greater than 1 millisecond jitter 3-sigma, and not to exceed 2 milliseconds jitter, when there are active PVDM card clients.",7/1/05ProjectE - TIM - 1031,Inconsistent Identification of Global Variables in Input/Output List (sections 3.6 and 3.7),4,"In paragraphs 3.6 and 3.7 the Global Variables are sometimes identified as an input/output in the modules where they are used, but not always. For example: In sections 3.6.6.1, 3.6.6.3, 3.7.2.3.2, 3.7.5.3 and 3.7.5.12 the global varables used are identified in the input/output list. In sections 3.7.2.2.1.3, 3.7.2.2.2 and 3.7.2.2.4 global variables used are not identified in the input/output list.",7/1/05ProjectE - TIM - 1030,Inst4 L5 SRS Does Not Fully Capture All Software Related L4 FRD Requirements,3,"The following Inst4 L4 parent requirements have no linked children in the Inst4 SRS: 4020.1, 4023, 4025, 4028, 4031, 4033, 4034, 4037, 4049, 4051. These requirements appear to be software related and therefore should have children in the Inst4 SRS. Artifacts: Inst4 L4, 5-14-05, CDR-ECRBaseline for DOORS Inst4 SRS, Ver. 2.2, 2-4-05",6/30/05ProjectE - TIM - 1025,Requirements 3.4.2.9.2 a & b Are Conflicting - With or Without Parallel I/F,3,The pair of requirements listed below conflict with each other: 3.4.2.9.2 a & b. The first requirement says the software needs to configure itself with or without an interface. The second requirement says it needs to configure itself without the interface.,6/30/05ProjectE - TIM - 1024,Requirements 3.4.2.8.2 a & b Are Conflicting - With or Without SASI I/F,3,The pair of requirements listed below either appear to conflict with each other or redundant: 3.4.2.8.2 a & b. The first requirement says the software needs to configure itself with and without an interface. The second requirement says it needs to configure itself without the interface.,6/30/05ProjectE - TIM - 1022,Requirements 3.4.1.14.2 a & b Are Redundant - 1553 support,4,The pair of requirements listed are redundant: 3.4.1.14.2 a & b. Both requirements say the same thing in slightly different ways.,6/30/05ProjectE - TIM - 1021,Unclear PDC I/F Requirements (SRS 3.4.1.12.2 a & b),3,"The pair of requirements listed below either appear to conflict with each other or redundant: 3.4.1.12.2 a & b. The first requirement says the software needs to support zero, one, or two interfaces. The second requirement says it only needs to support one requirement. It is unclear why both requirements are needed.",6/30/05ProjectE - TIM - 1020,Unclear PIM I/F Requirements (SRS 3.4.1.11.2 a & b),3,"The pair of requirements listed appear to conflict with each other or redundant: 3.4.1.11.2 a & b. The first requirement says it needs to support zero, one, or two interfaces. The second requirement says it only needs to support two interfaces. It is unclear why both requirements are needed. 3.4.1.11.2 a) The flight software IOC driver shall support interfacing to zero, one, or two PIMs. 3.4.1.11.2 b) The flight software IOC driver shall support interfacing to two PIMs.",6/30/05ProjectE - TIM - 1019,Unclear Requirements for EMIC Switches (SRS 3.4.1.9.2 c & d),3,"The pair of requirements listed below are in conflict with each other: 3.4.1.9.2 c & d. The first requirement says the software needs to command type 2 and 3 switch (assumption is being made that ""2/3"" is not in itself a unique type). The second requirement says it needs to command a type 1, 2, and 3 switch. It is not clear why both requirements are needed.",6/30/05ProjectE - TIM - 1018,Requirements 3.4.1.9.2 a & b Are Conflicting - Number of EMICs,3,"The following requirements conflict with each other: 3.4.1.9.2 a & b. The first requirement (a) has at least two interpretations and therefore ambiguous (See Excerpt): 1) provide any one of the three capabilities listed 2) provide all three capabilities listed If item 2) was the intent, then the requirement should have specified the list as ""A, B, and C"" rather than ""A, B, or C"". The second requirement (b) is not ambiguous by specifying only one capability. If the coder implements (b), then there is a chance that the first requirement may conflict depending on how its interpreted.",6/30/05ProjectE - TIM - 1017,Night Time Mode In Requirement 3.4.1.3.2-b Not Specified,3,"The ""Night Time Mode"" functionality is not specified.",6/30/05ProjectE - TIM - 1015,Requirements 3.3.4.4.2-a & 3.3.4.4.2-b Are In Conflict - Floating Point Exceptions,3,The requirements listed in 3.3.4.4.2-a conflicts with the requirement in 3.3.4.4.2-b. The first requirement specifies the exceptions have to be disabled. The second requirement specifies that exceptions have to be monitored. It is unclear what has to be monitored considering the exceptions are disabled.,6/30/05ProjectE - TIM - 1013,Requirements 3.3.2.2-b & 3.3.2.2-l-1-c Are Redundant - 10MHz,4,The requirements in 3.3.2.2-b. are duplicated in the requirement in 3.3.2.2-l-1-c.,6/30/05ProjectE - TIM - 1012,Requirements 3.3.2.2-g & 3.3.3.2-g Are Redundant - OS Init To Copy Files,4,"The requirements in 3.3.2.2-g are duplicated in 3.3.3.2-g. 3.3.2.2-g. The OS Init software shall copy files contained in the Flash file system into the DRAM file system after copying files contained in the EEPROM file system, overwriting any existing files in the DRAM file system. 3.3.3.2-g. The OS Init software shall copy files contained in the Flash file system into the DRAM file system after copying files contained in the EEPROM file system, overwriting any existing files in the DRAM file system.",6/30/05ProjectE - TIM - 1011,Requirements 3.3.2.2-a & c Are Redundant - Establish and Initalize FSW,4,The requirement in 3.3.2.2-a is duplicated in requirement 3.3.2.2-c.,6/30/05ProjectE - TIM - 1008,Missing Requirement for generating Reaction Wheel Commands in section 3.6.4,3,"Refer to paragraphs 3.6.4.1 PIID Controller, 3.6.4.2 Actuater Suite Reaction wheels are mentioned in the reference documents (section 2.2) and in the following sections: 3.6.1 GN&C Exec, 3.6.3.3 All Stellar Attitude Determination, and 3.7.5.12 Safe Mode Executive. However there is no attitude control requirement identified in section 3.6.4 to convert torque commands to the reaction wheel commands required to achieve that torque.",6/29/05ProjectE - TIM - 1007,Inconsistent Terminology in section 3.6.4.3,3,"Refer to Paragraph 3.6.4.3, Thruster Suite. In 3.6.4.3.2 d 1) the torque null vector[0] is used in the following equation: K = pwCmd[0]/torque null vector[0], In d2) the following loop exists: Loop through indx equal to 1 through 3 performing the following: If pwCmd[indx]/torque null vector[indx] is greater than K, then set K equal to pwCmd[indx]/torque null vector[indx]. In d3) pwCmd = pwCmd - K*torque null vector d1 through d3 implies that both pwCmd and the torque null vector have 4 elements (0-3). The name ""torque null vector"" implies a vector with 3 elements.",6/29/05ProjectE - TIM - 1006,Possible use an unnormalized vector as a row in a direction cosine matrix (DCM) in section 3.6.7.5.2,3,Refer to Paragraph: 3.6.7.5.2 Vector Tracking Reference Requirements In b. the first row of the Body to Target frame direction cosine matrix (DCM) is set to the configurable body frame aligned vector. In c. the first row of the Inertial to Target frame DCM is set to the inertial frame aligned target vector. The DCM row is not normalized.,6/29/05ProjectE - TIM - 1005,Use of an undefined parameter in slew_cmd (section 3.6.7.2.2),3,"In paragraph 3.6.7.2.2 the slew_cmd is determined in step m as the omega vector multiplied by slew_timer/t1. Slew_timer is not defined. It should be the cycle timer mentioned in step k (Each cycle, the absolute slew reference software shall increment the cycle timer by the cycle period.)",6/29/05ProjectE - TIM - 1004,Error in slew acceleration time (sections 3.6.7.2.2 & 3.6.7.4.2),3,"Paragraph: 3.6.7.2.2 & 3.6.7.4.2 In the Absolute Slew Requirements and the Relative Slew Requirements the equation for acc_time in 3.6.7.2.2f and 3.6.7.4.2c is give as follows: ""accel_time = (slew_dur - sqrt(slew_dur2 - 4*abs(rot_ang) / accel_cmd)) / 2"" The parameter slew_dur2 in the square root should be slew_dur ^2 (squared). A check of the SRS revealed that slew_dur2 only shows up twice in the SRS and is never defined as slew_dur^2.",6/29/05ProjectE - TIM - 1003,Inconsistent Quaternion Convention in section 3.6,3,"Most quaternions in section 3.6 appear to contain the vector part in the first three elements and the scalar in the last element. For example 3.6.7.7.2 q_offpoint(0), (1), (2) contain the vector part of the quaternion. q_offpoint(3) contains the scalar part. However in 3.6.3.2.1 - 1)b the test ""or imu_Qi2b[0] > 1 when in all stellar state"" implies that the scalar is in the first element.",6/29/05ProjectE - TIM - 1002,Inconsistent definition of units for input and outputs in section 3.6,4,Units are not consistently defined for GN&C SW input and output parameters. Example: 3.6.4.1.1 Inputs Current attitude quaternion. Current rate vector. Reference attitude quaternion. Reference rate vector. Feedforward torque per axis (may be a dynamic input or a configurable parameter).,6/29/05ProjectE - TIM - 1001,Vague Configurable Parameters in section 3.6,3,"Throughout section 3.6 configurable parameters are used to specify constants, flags, gains, coefficients, limits, etc. However, the configurable parameters are mentioned with vague references which do not specifically identify the parameter. There is insufficient information given in the SRS to enable the definition of the complete set of configurable parameters. Examples of vague references to configurable parameters: --The addition of each torque contribution may be disabled or enabled by configurable parameters (3.6.3.3.2e), --Feedforward torque per axis (may be a dynamic input or a configurable parameter) (3.6.4.1.1 2), --If the zero position error flag (configurable parameter) is true, then set the position error vector equal to zero (3.6.4.1.2f).",6/29/05