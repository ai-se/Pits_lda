TIM_Id,Subject,Severity,Description,Initiation_Date
ProjectD - TIM - 1180,Coding Error in EMC,2,"IV&V participated in an EMC Code Review at Contractor2 on January 31, 2007. During the review, IV&V noted that code was contained within an â€œifâ€ù statement and would only be executed during that logical branch, even though the code was intended to be executed in the more general case outside of the â€œifâ€ù statement. The error was discovered when comparing the code presented to the design documentation also provided.",4/27/07
ProjectD - TIM - 1182,Possible Inconsistenct in WheelControl RWA selection,3,"In wheel_control.cpp at lines 300-322, the value of locGoodWheelSum (number of ""good"" RWAs) is determined based on the contents of array WheelStatusBad. At lines 349-367, if locGoodWheelSum is 3 (i.e., one wheel is ""not good"") the ""wheels to be used"" (locTorqSelect) are determined based upon the contents of array UseWheel. WheelStatusBad (at this point) appears to reflect the contents of UseWheel (i.e., wheel selected and available) as well as any ""bad wheel data"" indicators received (when so enabled). Thus, if a wheel is selected, available, but has a ""bad data"" indication (and ""detection"" enabled), it will apparently be ""OK"" in UseWheel but ""not OK"" in WheelStatusBad. In such a case, the locGoodWheelSum==3 logic in lines 349-366 will execute, but apparently do nothing (i.e., the torque distribution matrix, etc., will remain at the setting for ""4 good wheels""). It would seem that a wheel with ""bad data"" should probably not received control commands, or, alternately, that the count of wheels to be used for control commanding be computed using the actual term used to differentiate between wheels to be used for control commanding and wheels not so used.",5/17/07
ProjectD - TIM - 1181,Inconsistent Response to Persistent Coarse-to-Fine Pointing Transition Error,3,"In attitude_error.cpp, within method Compute at lines 453-460, term MyGo2AcqSun appears to be set unconditionally if respond2CoarseAttFault is set. In attitude_error.cpp within method Compute at lines 756-761, term MyGo2AcqSun appears to be set when respond2CoarseAttFault is set only if term CoarseAttErrRespEnab (in the Tbl structure for class AttitudeError) is set (and when the vehicle is in ADCS_POINT state). Term respond2CoarseAttFault appears to be set true only in logic in Compute which executes prior to the logic which set MyGo2AcqSun (at line 290 of attitude_error.cpp). Term CoarseAttErrRespEnab in the Tbl structure appears to be used only at the point cited above. It appears that the intent is for CoarseAttErrRespEnab to allow the ground (etc.) to disable ""automatic"" reversion to ACQUIRE_SUN when an excessive amount of time is required to transition from coarse pointing to fine pointing due to persistent inability to meet the initial pointing accuracy limit. If so, the logic does not appear to operate as intended. The logic at lines 453-460 would appear to trigger this reversion regardless of the value of CoarseAttErrRespEnab, and the subsequent logic at lines 756-761 is meaningless (with respect to respond2CoarseAttFault). Even if this supposition is incorrect, it appears that CoarseAttErrRespEnab has essentially no function (the code effectively works the same no matter how it is set). Thus, if the code is correct, the term should presumably be removed or commented out.",5/16/07
ProjectD - TIM - 1176,Possible Unset Data in FFI Status Packet,3,"The output status packet for the FFI Manager (pktdef_ffim_out_status) appears to contain locations for dataSetTimestampSecStart and dataSetTimestampFractionStart, but there appears to be no provision to store any values into these variables. If the ground or some other user of FFI Manager status data expects to find meaningful values there, this would be a problem.",1/22/07
ProjectD - TIM - 1175,Initialization of myCadenceDetected in ffiManager,3,"In FFI manager, it appears that the value of myCadenceDetected is set or altered only in method isrPixelDataReady (to true upon receipt of a long cadence interrupt while ffi processing is active) and in method scienceDataHandler (to false during actual processing of FFI data). It would appear that it would be appropriate to initialize this term (presumably to false), either in the constructor or (perhaps preferably) the Initialize method, as it appears to be within the realm of possibility that its user (method scienceDataHandler) could be entered prior to receiving the first FFI â€œlongâ€ù cadence interrupt, leaving it to use a value which has not been formally initialized.",1/22/07
ProjectD - TIM - 1174,"Missing default case in function TelemetryManager::ProcessCommand - file tlm.cpp, line 773",3,"This function has a large switch statement that lacks a default. The field being evaluated is a 16 bit unsigned integer as opposed to an enumeral, which means the compiler is unable to evaluate the range of the discrete variable being evaluated. In cases like this it is valuable to provide a default case to catch out-of-range values. The logic depends on each case being handled by the switch statement. The code also violates violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",1/22/07
ProjectD - TIM - 1173,Corrections to Short Cadence Collateral Binning,3,"In scManagerScience.cpp, at lines 942-946, in method processTargetTable, the pixel picked up for â€œbinningâ€ù using pixelGet will be from column locCol. The value of locCol at this point appears to have been set at line 739 reflecting the column obtained for the â€œtarget centerâ€ù from the target file. It appears that the intent of the logic between lines 924 and 1002 is to sum (â€œbinâ€ù) the pixel values across all â€œmasked rowsâ€ù for each column in which an aperture pixel for the target exists. It would appear that the existing logic will always give the â€œbinnedâ€ù value for the column of the â€œtarget centerâ€ù, and that the intent would be satisfied by instead using the pixels in locColumn in the call to pixelGet. A similar comment applies to the pixelGet invocation at lines 1028-1023 of scManagerScience.cpp (for â€œsmear rowsâ€ù).",1/22/07
ProjectD - TIM - 1172,Improvements to FPADM Verify Logic,3,"There appear to be two additional checks that could be added to the verifyTargetTable method in lcManagerScience to protect against and/or identify table anomalies / corruptions: - if the â€œnumber of targetsâ€ù value for a given module/output (extracted from the module/output header record into locNumTargets) was excessive, it appears to be possible for the â€œmiddle loopâ€ù in this method (and in method processTargetTable) to run off the end of the table (i.e., for pTargetTable to reach or exceed locEndAddress) and there does not appear to be any protection against this possible occurrence (note that pTargetTable is checked against locEndAddress in the outer loop, but not in the middle loop) - if the particular aperture referenced for a given target (extracted term locAperture in the middle loop) was never defined in the associated aperture file, its extracted pixel count (term locNumApPixels) should be zero (note that processTableApertureBgCmd and processTableApertureSciCmd in fpaDataManager both zero out their pointer tables before populating them). It would appear that no â€œlegitimately usedâ€ù aperture should contain zero pixels. Although use of a zero pixel aperture would not cause internal software anomalies such as running off the ends of tables, it would appear worthwhile to in some way report that this is occurring, as it would presumably indicate the presence of corrupt or inconsistent target / aperture files. Analogous comments would appear to apply to the short cadence logic.",1/22/07
ProjectD - TIM - 1171,Possible FPADM Inconsistencies Due to Phasing,3,"Long cadence science processing appears to be enabled by receipt of a Science Mode command which requests a transition from IDLE mode to LC or LC_SC mode. When this occurs, it appears that lcManager.cpp method scienceProcessingEnable will permit long cadence science data processing on the next subsequent long cadence termination but not before (sets processingEnabled true and myCadenceBoundaryDetected false), and initializes the terms used to determine the momentum-dump and fine-point indicators for the configId returned with the next long cadence science data (myFinePoint and myMomentumDump) to the last reported statuses from ADCS. Any drop out of fine point or initiation of momentum dump subsequent to receipt of the Science Mode command and prior to cadence end should be reflected in the indicators via method processStatusSystemCmd. It does not appear that the Science Mode command precipitates any hardware commands in FPA Data Manager, and it appears that all cadence interrupts will occur without direct effect from this command. Thus, it would appear possible (at least within the purview of FPA Data Manager) that a Science Mode command initiating long cadence processing could occur at any point during a long cadence (i.e., at any point between two long cadence interrupts), and that the initial long cadence whose science data is processed following such initiation of long cadence science processing will, in general, involve some photometer data gathered before long cadence science processing was in effect in lcManager (i.e., before receipt of the Science Mode command). If fine point had not been in effect and/or momentum dump had been in effect at the beginning of that initial long cadence, but fine point had been entered and momentum dump completed prior to receipt of the â€œenablingâ€ù Science Mode command, then the reported configId would apparently not contain flags indicating the â€œmomentum dumpâ€ù warning or the â€œout of fine pointâ€ù warning, even though some of the data had been gathered when those â€œwarningâ€ù conditions had been in effect. For long cadences after the initial following â€œscience data processing enableâ€ù, the logic seems to be carefully designed so that a momentum dump or out of fine point status at any point during the long cadence results in the setting of the associated â€œwarningâ€ù bits in the configId. Thus, the effective definition of these â€œwarningâ€ù bits appears to differ on such an â€œinitialâ€ù long cadence and subsequent long cadences. Analogous comments would appear to apply to the short cadence logic, and perhaps FFI manager as well. In addition, it would appear that short cadence processing would initiate at the same time as long cadence processing if the new science mode is LC_SC. If, as supposed above, this could occur at any time during the hardware long cadence, then any number of short cadences (up to, of course, the number of short cadences in a long cadence) could be processed by the short cadence manager before the processing of the first long cadence by the long cadence manager. Thus, the short cadence managerâ€™s cadenceCount counter-term, at each long cadence termination point, would be (ai + (nl-1) * nsl), where nl is the number of long cadence completions since entering LC_SC science mode, nsl is the number of short cadences per long cadence, and ai (representing cadenceCount at the time of the first long cadence end since entering LC_SC) could be any number between 0 and nsl. The logic in the scienceDataHandler method of scManagerScience appears to clear mypPreviousDataSet whenever cadenceCount reaches an integer multiple of nsl, and to process a baseline whenever cadenceCount reaches an integer multiple of nsl * nb (where nb is the long cadence baseline interval). The intent here appears to phase the clearing of mypPreviousDataSet with the clearing of SDA/SFDA accumulators upon a long cadence and to phase the short cadence baseline with the long cadence baseline. However, it appears that this would only actually occur as intended if ai were either 0 or nl, neither of which appears to be guaranteed by looking at the logic strictly within the purview of FPA Data Manager. We are aware that the appropriate command sequences, which we do not have, might make it impossible for a momentum dump or out-of-fine-point condition to exist during the pre-moding part of such an â€œinitialâ€ù long cadence, or for short cadence processing to initiate in the â€œmiddleâ€ù of a hardware long cadence; but based on what we have, it appears to be possible. It may also be the case that the ground always treats such an â€œinitialâ€ù long cadence as suspect, making the dump/finepoint warning bits moot in such a case. However, barring some such relevant fact of which we are unaware, there appear to be inconsistencies here.",1/22/07
ProjectD - TIM - 1170,Possible Inaccurate Setting of SFDA Telemetry Item in FPADM,3,"In lines 1031-1032 of fpaDataManager.cpp, in method processDataCollectionSfda: mypCvt->telemStatusSfda.sdrcBStatus.lcLdeOosDetected = locSfdaStatus.sdrcAMemoryStatusRegister1.lcLdeOutOfSyncDetected; it appears that a status indicator obtained from the SFDA driver for SDRC A is being stored in the output packet for SFDA engineering data in a slot for SDRC B.",1/22/07
ProjectD - TIM - 1169,Mode Manager Data Checking on PositionValueSpeci Data in PKTID_MOM_IN_REPLACE_ESI message,3,"When a PKTID_MOM_IN_REPLACE_ESI message is received by processUpdates, the uint8 Position elements of the position_value_pair objects PositionValueSpeci are placed in the created EventStateIdentity object (in ArrayWithSize<Identity> myIdentity) without bounds/reasonableness checking within processUpdates. The values of these elements may subsequently be used to index the â€œarrayâ€ù within the myEventTruth ArrayWithSize element. Hard to locate anomalies could result if these values are sufficiently unreasonable to cause the protective provisions for the ArrayWithSize [] operator to be triggered due to an invalid â€œindexâ€ù.",10/6/06
ProjectD - TIM - 1168,FSW86 Incorrect Code Trace Column,3,"ModeManager::Process (sets myEventTruth[INITIALIZATION_COMPLETE], supervises processing), ModeManager::updateAllEventTruthEvts (sets other relevant myEventTruth entries), and ModeManInitializer (defines conditions for â€œdefault transitionâ€ù) all appear to be involved in fulfilling this requirement. In the DOORS flight software requirements, it would appear that these references should be cited in the Code Trace column for FSW86.",10/6/06
ProjectD - TIM - 1167,FSW82 Incorrect Code Trace Column,3,"The default Flight Segment Mode appears to be routed by ModeManager::setFirstTransition, invoked (normally) by ModeManager::ProcessUpdates. In the DOORS flight software requirements, it would appear that these references should be cited in the Code Trace column for FSW82.",10/6/06
ProjectD - TIM - 1166,FSW2111 Has Blank Code Trace Column,3,"In the DOORS flight software requirements, the Code Trace column appears to be blank for FSW2111.",10/6/06
ProjectD - TIM - 1165,Protection Against Potential ModeManager Attempt to Access a Zero-Size ArrayWithSize,3,"In ArrayWithSize.cpp, it would seem desirable to protect against attempting to access items in a zero-size array with the [] operator (it would apparently now attempt to return the [-1] element of an array based on a possibly null pointer). It might also be desirable to issue an event report if an attempt is made to resize an array to 0 or copy a zero-sized array.",10/6/06
ProjectD - TIM - 1164,FSW1487 Inconsistency Between CSC and Code Trace Columns,3,"In the DOORS flight software requirements, FSW 1487 has â€œData Encoder Managerâ€ù as its entry in the â€œCSCâ€ù column, but all of the classes and methods listed for it in the â€œcode traceâ€ù column appear to be FPA Data Manager elements.",10/6/06
ProjectD - TIM - 1163,DataEncoder Response to Failure to Obtain New Packet from Pool,3,"If a failure is returned in the attempt to obtain a new CCSDS packet from the packet pool using the get method of object_pool.h as invoked at line 488 of data_encoder.cpp in method pushPacketAndPrepareNext, the initial responses are to increment the engineering data error counter and to return a failure, which will be passed through the user call which invoked the logic back to the caller. This seems reasonable. However, in addition, the last valid science data packet, whose pointer was just sent to (presumably) the SSR, has all of its data cleared (see lines 537-549 of data_encoder.cpp). It is not clear why a failure to obtain a new CCSDS packet should cause the erasure of the (presumably perfectly valid) previous science data packet which has just been submitted to (presumably) the SSR for storage, but not yet utilized and/or returned to the object pool for reuse.",10/6/06
ProjectD - TIM - 1162,"Mechanism Manager Public Functions Exposing Protected Data (sam_hg_antenna.cpp - lines 963, 967, 971 & 975)",3,"sam_hg_antenna.cpp - Lines 963, 967, 971 & 975 are public functions exposing pointers to protected data of MyYGimbal, MyYPotentiometer, MyZGimbal & MyZPotentiometer.",10/6/06
ProjectD - TIM - 1161,Mechanism Manager Hiding Non-Virtual Member (sam_imp_impl.h - lines 127 & 141),3,"sam_imp_impl.h - Lines 127 and 141, Functions initRelations & cleanUpRelations are overwriting their base class (SAM_ImplBase) functions which are not virtual functions.",10/6/06
ProjectD - TIM - 1160,Inconsistent Use/Definition of DataEncoder Variable myCurrent32BitWord,3,"The logic in method pushPacketAndPrepareNext to determine the number of meaningful bytes (locSourceDataLength) in the data block associated with the CCSDS package about to be transmitted to (presumably) the SSR, at lines 367-395 of data_encoder.cpp, appears to assume that the input value of myCurrent16BitWord or myCurrent32BitWord (whichever is applicable) represents the C-index (zero based) of the first unused element in array mypPacket16BitData or array mypPacket32BitData (whichever is applicable), unless the 32-bit case applies and myBitPosition has been altered by method encode from its initial setting (32), in which case the input value of myCurrent32BitWord is assumed to be the C-index of the last used element in array mypPacket32BitData. Some examples: (16-bit case) if myCurrent16BitWord is 20, then myCurrent32BitWord is set to 10, and locSourceDataLength is set to 40 bytes, which covers the c-index values 0 through 19 in mypPacket16BitData (32-bit case with myBitPosition == 32) if myCurrent16BitWord is 15, then locSourceDataLength is set to 60 bytes, which covers the c-index values 0 through 14 in mypPacket32BitData (32-bit case with myBitPosition != 32) if myCurrent32BitWord is 15, then myCurrent32BitWord is incremented by 1 to 16, and locSourceDataLength is set to 64 bytes, which covers the c-index values 0 through 15 in mypPacket32BitData This logic appears to match well with the logic in method encode, and works for data loaded by put16 or put32 if the science data is output via an external call to pushPacketAndPrepareNext (e.g., by calling cadenceComplete). However, if the science data is output by put16 or put32 internally calling pushPacketAndPrepareNext due to filling of the science data buffer, the value of myCurrent16BitWord or myCurrent32BitWord (whichever is applicable) appears to represent at that point the C-index of the last used element in array mypPacket16BitData or array mypPacket32BitData (whichever is applicable), since the value of myCurrent16BitWord or myCurrent32BitWord is not incremented between the storage of the last data element and the calling of pushPacketAndPrepareNext. This appears to be inconsistent with the assumption made by pushPacketAndPrepareNext, and will apparently result in a value of locSourceDataLength which is 4 bytes too low from put32, and from put16 when the last C-index value is even.",10/6/06
ProjectD - TIM - 1159,Mechanism Manager Hiding Non-Virtual Member (sam_fb_impl.h - lines 158 & 184),3,"sam_fb_impl.h - Lines 158 and 184, Functions initRelations & cleanUpRelations are overwriting their base class (SAM_ImplBase) functions which are not virtual functions.",10/6/06
ProjectD - TIM - 1158,Mechanism Manager Possible Null Pointer (sam_fp_mon_agent.cpp - line 179),3,"sam_fp_mon_agent.cpp - Line 179, pointer *Impl has potential to evaluate to null due to the dynamic cast operation. Impl is used to assign on lines 180, 198 & 199",10/6/06
ProjectD - TIM - 1155,Memory Manager Missing Condition if Case (log.cpp - line 452),3,"log.cpp - Line 452, ""if"" case is missing condition.",10/6/06
ProjectD - TIM - 1154,"Functions may throw exceptions within ~Messaging () (messaging.cpp Lines 296,302,303,304,305,308)",3,"File: messaging.cpp The destructor ~Messaging, defined at Line 281 of messaging.cpp, contains 6 function calls that may possibly throw exceptions. *********************** Code Excerpt: messaging.cpp /////////////////////////////////////////////////////////////////////////////// // // FUNCTION NAME: Messaging::~Messaging() ... ... // // NOTES: The destructor is not context safe. This should not be run while // tasking is active. On DI/OE, Messaging objects are only // destructed in unit tests, after tasking has ended. // /////////////////////////////////////////////////////////////////////////////// Messaging::~Messaging() /****LINE 281****/ { if (NULL != itsCommunicationPacket) { delete itsCommunicationPacket; } itsCommunicationPacket = NULL; // Decrement instance count, we use this to determine when we can // close gvutils_vio1Standard ourInstanceCount--; if (ourInstanceCount == 0) { // Get rid of our semaphore semDelete(ourBufferSemaphore); /****LINE 296****/ // We only redirect output if not REAL_GSE #ifndef REAL_GSE // We are the last Messaging class in the system. Time to restore // the I/O. ioGlobalStdSet(STD_IN,ourOldStdIn); /****LINE 302****/ ioGlobalStdSet(STD_OUT,ourOldStdOut); /****LINE 303****/ ioGlobalStdSet(STD_ERR,ourOldStdErr); /****LINE 304****/ logFdSet(ourOldStdOut); // Output logMsg to stdout. /****LINE 305****/ // Close the file descriptor close(gvutils_vio1Standard); /****LINE 308****/ gvutils_vio1Standard = 0; #endif // And set our one-time setup flag ourOneTimeSetupDone = FALSE; } }",10/6/06
ProjectD - TIM - 1153,Pointer member mypMessaging not freed by the destructor (table_manager.cpp Line 135),3,"File: table_manager.cpp Function: ~TableManager() The pointer member 'TableManager::mypMessaging', defined at Line 405 of table_manager.h, does not get freed nor zeroed by ~TableManager (Lines 135-143). Determine whether the pointer member should be freed or assign it to 0. ****************************** Code Excerpt: table_manager.cpp TableManager::~TableManager ( void ) /****LINE 135****/ { // Deallocate memory from the table if (mypStartAddress != NULL) { delete(mypStartAddress); mypStartAddress = NULL; } } ****************************** Code Excerpt: table_manager.h /** * Messaging Class to use for EVRs. This class does not have its own * messaging object. This class uses the messaging object of the * application that creates it. */ Messaging* mypMessaging; /****LINE 405****/",10/6/06
ProjectD - TIM - 1146,Memory Manager - Array Deletion in Log Destructor (log.cpp - line 464),3,log.cpp - Line 464 myLogEntries is an array and should be deleted via delete [].,10/6/06
ProjectD - TIM - 1145,SUROM Inadvertent Commenting (strfn.h - line 10),3,"strfn.h - The function strupr() is commented out in the header file, while still being defined in strfn.c at Line 16 and being called twice (Line 294 and Line 485) of emcAsm.c. The other functions commented out (strrev and itoa) are not used elsewhere in the Build. The file does not contain any descriptor comments (name, purpose, author, etc.), bad coding practice, violating 13.2.2 (File Level Documentation) and 13.3 (Documentation Descriptions for Implementation Files) of the ProjectD FSW Coding Standard (ProjectD.FSW.DFM.087 7/22/02).",10/6/06
ProjectD - TIM - 1142,"Incorrect or ambiguous error-handling in routine CommunicationPacket::Send (communication_packet.cpp, line 665)",3,"The error-handling code beginning on line 665 of CommuncationPacket::Send (communication_packet.cpp), is apparently intended to protect against divide-by-zero (an erroneous case where the CCSDS header length and total packet length are the same - in other words a zero-length packet). The code actually checks for either zero or one, and reports either case as the same error ""SEND_DEFAULT_ERROR."" The code sets an error flag, but keeps processing as though there is no problem. While this helps maintain a single entry/exit point in the routine, and reduces the amount of nesting, to continue processing in the presence of an error seems counter-intuitive to the maintainer. The logic works by happenstance, as when it checks for a reminder (sic) of packet data, the modulus operation results in zero (because any-integer modulus zero or one results in zero) and so an erroneous Send is avoided. Relevant code snippet: (line 664...) // check for divide by zero if(((dest_pkt_size - CCSDS_HEADER_SIZE) - 1) > 0) { // Calculate the number of segment to send the entire data. MessageNum = src_data_size/(dest_pkt_size - CCSDS_HEADER_SIZE) - 1; } else { // don't send any messages, there was an error MessageNum = 0; ret_val = SEND_DEFAULT_ERROR; } /// to keep track of a reminder bool8 reminder_flag = false; // keep track of the data size previously send out uint32 prev_data_len = 0; CopyDataLength = 0; // Check if the last packet will be smaller (if a reminder exist) if( (src_data_size % (dest_pkt_size - CCSDS_HEADER_SIZE)) != 0 ) { // there is a reminder, add one more packet for the left over. MessageNum++; reminder_flag = true; } // repeat this for each segment for( int32 segm_no = 0; segm_no <= MessageNum; segm_no++ )",10/2/06
ProjectD - TIM - 1141,Missing CSC Trace for FSW216,3,The DOORs CSC field is blank for FSW216 â€œThe FSW shall route the start and end address of data stored in CTB Engineering Data Storage memory in Engineering Data.â€ù (the â€œDetailed Design Traceâ€ù is to NIM-TIM).,7/19/06
ProjectD - TIM - 1140,Missing CSC Trace for FSW2079,3,"The DOORs CSC and â€œDetailed Design Traceâ€ù fields are blank for FSW2079 â€œThe FSW shall store fault log data in CTB EDS in a circular buffer fashion such that in the event of an overflow the newest fault information is kept and the oldest data is discarded.â€ù. A similar comment applies to FSW2111, FSW2113, FSW2114, FSW2104, FSW2106, FSW2107, and FSW1845.",7/19/06
ProjectD - TIM - 1139,Questionable CSC Tracing for FSW1392,3,"The DOORs Detailed Design Traceâ€ù for FSW1392 â€œThe FSW shall control the power enables to the LDE LVPS (LPS) on command. NOTE: This is controlled via the NIC.â€ù implies the associated LDE power function is performed by the FPA Data Manager, while the traced DOORs CSC is Power. LDE power seems to be discussed in the NIM-FPA (see setLdeCcdPower and setLdeAdcPower methods) but not in the Power CSC Detailed Design.",7/19/06
ProjectD - TIM - 1138,Possible Omitted CSC Trace for FSW1355/1386,3,"The DOORs â€œDetailed Design Traceâ€ù for FSW1355 â€œThe FSW shall collect health and status data from the LDE and make them available in Engineering Data.â€ù and FSW1386 â€œThe FSW shall be able to detect errors generated by the LDE in support of Fault Protection, as defined in the SP0039-903 (FPDD).â€ù references the PEDM Design Document (apparently correctly), but Photom Eng Data Mgr does not appear to be listed as a CSC in DOORs for either. In both cases, FPA Data Manager is listed in both the trace (presumably correctly) and as a CSC.",7/19/06
ProjectD - TIM - 1137,Missing CSC Trace for FSW449,3,The entry for FSW449 â€œThe FSW shall enable or disable sending commands to the Reaction Wheel control hardware on command.â€ù in the â€œCSCâ€ù field is blank. It would appear that ADCS should be listed in the â€œCSCâ€ù field for this requirement.,6/22/06
ProjectD - TIM - 1136,Questionable CSC Trace for FSW1992,3,"FSW1992 â€œThe FSW shall packetize all science data in CCSDS format prior to storage in the Solid State Recorder in accordance with the KP-116 (FS-GS ICD).â€ù has a blank â€œDetail Design Traceâ€ù, but is traced in the â€œCSCâ€ù field to the FPA Data Manager. It appears from the design documentation (e.g., Figure 16 of ProjectD.DFM.FSW.068.doc and Section 1 of ProjectD.DFM.FSW.076.doc) that CCSDS packetization of photometric science data is done in the Data Encoder Manager, and the â€œCSCâ€ù field should therefore contain Data Encoder Manager.",6/22/06
ProjectD - TIM - 1135,Questionable CSC Trace for FSW1552/1553,3,"The entries for FSW1552 â€œThe FSW shall collect operational heater current, voltage and status from the EDHC and make it available in the ancillary engineering data.â€ù and FSW1553 â€œThe FSW shall collect operational heater setpoint status from the EDHC and make it available in health and status engineering data.â€ù in the â€œDetail Design Traceâ€ù field indicate that the actual reporting of the associated data is performed by the Photometer Engineering Data Manager. However, the only reference in the â€œCSCâ€ù field is to the NIM FPA. It would appear that â€œPhotom Eng Data Managerâ€ù should also be listed in the â€œCSCâ€ù field for these requirements.",6/22/06
ProjectD - TIM - 1134,Questionable CSC Trace for FSW1898,3,"(Analogous comments apply to FSW1899, FSW1900, FSW1901, FSW1902, FSW1903, FSW1904, FSW2048, FSW2050, FSW2051, FSW1432, FSW1434, FSW1435, and FSW1988) The entry for FSW1898 â€œThe FSW shall maintain two Target Aperture Definiton Tables. NOTE: Two tables are required. One is being used, while the other can be updated.â€ù references (only) TargetFS and Memory Manager in its â€œDetail Design Traceâ€ù field, but references only FPA Data Manager in its â€œCSCâ€ù field. The â€œDetail Design Traceâ€ù appears to be correct, in that the FPA Data Manager Detailed Design does not appear to directly address the maintenance of multiple tables (nor does it appear to address the updating of the actual table; it does appear to address the processing of the selected one of the two tables into a format it finds useful).",6/12/06
ProjectD - TIM - 1133,Missing CSC Trace for FSW1548,3,"The entry for FSW1548 â€œThe FSW shall turn power to the operational heaters on and off, on command.â€ù in the â€œCSCâ€ù field is blank. However, the â€œDetail Design Traceâ€ù field traces (apparently properly) to a method in the NIM FPA detailed design. It would appear that NIM FPA should be listed in the â€œCSCâ€ù field for this requirement. Note there is no indication in the NIM FPA design document that it directly processes any commands, and its section 2.7.1 indicates that it does not receive commands directly. Assuming that this is the case, presumably some application processes such a command, so that application should apparently also be listed in the â€œCSCâ€ù field for this requirement.",6/12/06
ProjectD - TIM - 1132,Questionable CSC Trace for FSW2097,3,"Requirements FSW2097 â€œThe FSW shall bin all black level pixels from each virtual smear row selected for binning, into a single black level measurement to obtain the virtual smear measurement for short cadence targets. NOTE: If eight rows are used to measure virtual smear, and eight columns are used to calculate black level for long cadences, then for short cadences, 64 pixels must be added together to obtain the short cadence black level for virtual smear. The same columns should be used as for calculating black level for long cadences.â€ù and FSW2098 â€œThe FSW shall bin all black level pixels from each masked smear row selected for binning, into a single black level measurement to obtain the masked smear measurement for short cadence targets. NOTE: If eight rows are used to measure masked smear, and eight columns are used to calculate black level for long cadences, then for short cadences, 64 pixels must be added together to obtain the short cadence black level for masked smear. The same columns should be used as for calculating black level for long cadences.â€ù appear not to be traced to any CSC. It does not appear that they are â€œgeneralâ€ù requirements not traceable to specific CSCs, and that they would be appropriately traced to FPA Data Manager.",6/12/06
ProjectD - TIM - 1131,Questionable CSC Trace for FSW2014,3,"The entry for FSW2014 â€œThe FSW shall set the number of co-additions for the Full Field Image (FFI) accumulation period on command.â€ù in the â€œCSCâ€ù field is â€œNIM FPAâ€ù. However, there is no indication in the NIM FPA design document that it directly processes any commands, and its section 2.7.1 indicates that it does not receive commands directly. Assuming that this is the case, presumably some application (presumably FPA Data Manager) processes such a command, that application should apparently also be listed in the â€œCSCâ€ù field for this requirement.",6/12/06
ProjectD - TIM - 1130,Questionable CSC Trace for FSW2093,3,"The entry for FSW2093 â€œThe FSW shall set the number of short cadence periods in a long cadence accumulation period on command.â€ù in the â€œCSCâ€ù field is â€œNIM FPAâ€ù. However, the command to perform this function is apparently processed by the FPA Data Manager, which then calls a method in NIM FPA (according to the â€œDetail Design Traceâ€ù field). It would appear that FPA Data Manager should also be listed in the â€œCSCâ€ù field for this requirement.",6/12/06
ProjectD - TIM - 1129,Questionable CSC Trace for FSW1443,3,"The entry for FSW1443 â€œThe FSW shall set the number of co-additions for the short cadence accumulation period on command.â€ù in the â€œCSCâ€ù field is â€œNIM FPAâ€ù. However, the command to perform this function is apparently processed by the FPA Data Manager, which then calls a method in NIM FPA (according to the â€œDetail Design Traceâ€ù field). It would appear that FPA Data Manager should also be listed in the â€œCSCâ€ù field for this requirement.",6/12/06
ProjectD - TIM - 1128,Questionable CSC Trace for FSW1441,3,"The entry for FSW1441 â€œThe FSW shall set the integration period of the science CCDs on command.â€ù in the â€œCSCâ€ù field is â€œNIM FPAâ€ù. However, the command to perform this function is apparently processed by the FPA Data Manager, which then calls a method in NIM FPA (according to the â€œDetail Design Traceâ€ù field). It would appear that FPA Data Manager should also be listed in the â€œCSCâ€ù field for this requirement.",6/12/06
ProjectD - TIM - 1127,"Returning private data via pointer - cmd_seq_extra.cpp, line 41",3,cmd_sequence_status_block* CommandSequence::getSeqStatBlkPtr() { //#[ operation getSeqStatBlkPtr() return(&SeqStatBlk); //#] } SeqStatBlk is private data returned via a pointer by a public function.,2/17/06
ProjectD - TIM - 1126,"Shallow copy in assignment operator - tlm_subscription.cpp, line 236",3,The assignment operator: void Subscription::operator=(pktdef_tlm_in_modify_subscription_list Mod) {... does not assign a value to Subscription::Message,2/16/06
ProjectD - TIM - 1125,"Shallow copy in assignment operator - tlm_subscription.cpp, line 271",3,The assignment operator: const Subscription & Subscription::operator=(const Subscription & Sub) {... does not assign values to the following member data: Message unSubscribe,2/16/06
ProjectD - TIM - 1123,Downward Trace from KAV-3449,3,"The avionics requirement KAV-3449 ""The NIC shall monitor the ADCS at 10Hz or faster."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1122,Downward Trace from KAV-3444,3,"The avionics requirement KAV-3444 ""The NIC shall monitor the flight processor with a watchdog timer."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1121,Downward Trace from KAV-3268,3,"The avionics requirement KAV-3268 ""The Avionics shall select pixels of interest from the co-added CCD frame data for processing, upon command."" appears to be traced downward only to FSW1447, which specifies that LDE data collection start on command. This would not appear to cover much of the content of the requirement, e.g., â€œselect pixels of interestâ€ù. It would appear that some additional downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1120,Downward Trace from KAV-2960,3,"The avionics requirement KAV-2960 ""The Avionics shall co-add a minimum of 400 CCD frames without rollover."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1119,Downward Trace from KAV-3847,3,"The avionics requirement KAV-3847 ""The Avionics shall transmit real-time engineering data after the Flight Segment has entered the Safe Attitude Hold Mode."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1118,Downward Trace from KAV-1567,3,"The avionics requirement KAV-1567 ""The Avionics shall transition from Avionics Off mode to Idle mode in a controlled, repeatable sequence during Flight Segment Bootup Mode."" appears to have no downward trace (except to KAV requirements, which do not appear to trace downward to hardware or software requirements). It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1117,Downward Trace from KAV-3199,3,"The avionics requirement KAV-3199 ""The Avionics shall have a pixel data interface with the LDE."" appears to have no downward trace (except to two KAV requirements, which themselves have no downward traces beyond KAV). It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1116,Downward Trace from KAV-3373,3,"The avionics requirement KAV-3373 ""The Avionics shall provide data buffering for two rate sensors."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1115,Downward Trace from KAV-4055,3,"The avionics requirement KAV-4055 ""The resolution of the Photometer temperatures used for engineering data shall be less than 1Â° C."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1114,Requirement SC524 appears to be childless,3,"The spacecraft requirement SC524, ""Upon entering Emergency Mode, the spacecraft fault detection and response process shall autonomously configure the Flight Segment to receive and execute commands from the ground."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1113,Requirement SC523 appears to be childless,3,"The spacecraft requirement SC523, ""The Flight Segment shall be capable of entering a designated safe configuration via ground command."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1112,Requirement SC422 appears to be childless,3,"The spacecraft requirement SC422, ""Survival heater circuits shall remain on during undervoltage occurrences"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1111,Requirement SC2467 appears to be childless,3,"The spacecraft requirement SC2467, ""The Flight Segment shall provide onboard autonomous operations of:- command verification - command execution - momentum management - thermal control - onboard memory management."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1110,Requirement SC2465 appears to be childless,3,"The spacecraft requirement SC2465, ""No single fault shall cause the Spccecraft to prevent the activation of its attitude control system following launch vehicle separation."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Updated on Sept 28, 2005 with links to Ref1021.",10/6/05
ProjectD - TIM - 1109,Requirement SC2455 appears to be childless,3,"The spacecraft requirement SC2455, ""The Spacecraft software shall tolerate multiple indications of a single fault."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Updated Sept 28 with links to Ref 1016 and Ref1023",10/6/05
ProjectD - TIM - 1108,Requirement SC2454 appears to be childless,3,"The spacecraft requirement SC2454, ""The Spacecraft shall respond only when a failed test meets prescribed persistence criteria."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Updated Sept 28, 2005 with links to Ref1023, Ref1021 and Ref1016.",10/6/05
ProjectD - TIM - 1107,Requirement SC2453 appears to be childless,3,"The spacecraft requirement SC2453, ""When a mission critical event requires initiation or termination via autonomous event detection, physically or functionally redundant event detectors shall be used."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1106,Requirement SC2452 appears to be childless,3,"The spacecraft requirement SC2452, ""When an autonomously detected error causes a severe response (e.g. downlink loss, large use of expendables), physically or functionally redundant error detectors shall be used."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1105,Requirement SC2451 appears to be childless,3,"The spacecraft requirement SC2451, ""Monitors used by Flight Segment fault protection shall be available for downlinking in engineering telemetry."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1104,Requirement SC2450 appears to be childless,3,"The spacecraft requirement SC2450, ""The Spacecraft shall perform limit checks on sensed or computed data that is to be subsequently checked for limit violations."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Spec updated Sept 28, 2005 with links to REf1016, Ref1021, Ref1023 and Ref1031.",10/6/05
ProjectD - TIM - 1103,Requirement SC2448 appears to be childless,3,"The spacecraft requirement SC2448, ""The Spacecraft shall monitor engineering data points for limit violations."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Spec updated Sept. 28 with links to Ref1023, Ref1031, Ref1016 and Ref1021.",10/6/05
ProjectD - TIM - 1102,Requirement SC2446 appears to be childless,3,"The spacecraft requirement SC2446, ""Flight Segment fault protection shall be designed to assure safe and verifiable testing of the entire Flight Segment, including the Flight Segment Fault Protection."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1101,Requirement SC2445 appears to be childless,3,"The spacecraft requirement SC2445, ""Inadvertent activation of a fault protection response during flight operations shall not have any lasting adverse effects on the Flight Segment."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. This requirement was changed from shall to should.",10/6/05
ProjectD - TIM - 1100,Requirement SC2443 appears to be childless,3,"The spacecraft requirement SC2443, ""Flight Segment fault protection shall ensure the Flight Segment can survive pointing faults."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Requirement was deleted from spec prior to Sept 2005.",10/6/05
ProjectD - TIM - 1099,Requirement SC2442 appears to be childless,3,"The spacecraft requirement SC2442, ""Flight Segment fault protection should conserve non-renewable resources (e.g., hydrazine, EEPROM writes, ON/OFF cycles, battery cycles, etc.,) during autonomous fault responses."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1098,Requirement SC2426 appears to be childless,3,"The spacecraft requirement SC2426, ""Spacecraft fault protection shall detect the loss of fine pointing lock and operate in coarse pointing."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1097,Requirement SC2421 appears to be childless,3,"The spacecraft requirement SC2421, ""Safe Mode shall provide the capability for both autonomous and ground initiated momentum unloading."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1096,Requirement SC2420 appears to be childless,3,"The spacecraft requirement SC2420, ""The Spacecraft shall provide the capability to establish and maintain communications with the ground during Safe Mode."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. The spec was updated on Sept 28 with links to Ref1021 and Ref1023",10/6/05
ProjectD - TIM - 1095,Requirement SC2419 appears to be childless,3,"The spacecraft requirement SC2419, ""The Spacecraft shall be capable of autonomously maintaining Safe Mode."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1094,Requirement SC2417 appears to be childless,3,"The spacecraft requirement SC2417, ""Once the Spacecraft enters Safe Attitude Hold Mode, the Spacecraft shall remain in this mode until commanded."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1093,Requirement SC2415 appears to be childless,3,"The spacecraft requirement SC2415, ""Once the Spacecraft enters Safe Attitude Hold Mode, the Spacecraft shall remain in this mode until ground commanded or until faults result in the need to transition to Safe Mode or Emergency Mode."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1092,Requirement SC2250 appears to be childless,3,"The spacecraft requirement SC2250, ""The Photometer shall send a record of all faults and actions taken to the Spacecraft."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics and Photometer implications.",10/6/05
ProjectD - TIM - 1091,Requirement SC2179 appears to be childless,3,"The spacecraft requirement SC2719, ""ADCS shall be designed to change from Point-Fine to Point-Coarse, perform a 90 degree roll maneuver, and change from Point-Coarse to Point-Fine within 30 minutes."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1090,Requirement SC2172 appears to be childless,3,"The spacecraft requirement SC2172, ""The Spacecraft shall be placed in Safe Attitude Hold if a scheduled roll maneuver is not initiated at the expected time."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1089,Requirement SC2165 appears childless,3,"The spacecraft requirement SC2165, ""The Spacecraft shall process and transmit science data during the Commissioning Phase on command"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1088,Requirement SC2136 appears to be childless,3,"The spacecraft requirement SC2136, ""The Spacecraft shall have Fault Protection during Commanded Spacecraft Initialization Mode as documented in Contractor2 SP0039-903, Fault Protection Design Document"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1087,Requirement SC2076 appears to be childless,3,"The spacecraft requirement SC2076, ""The Spacecraft shall have Fault Protection during Commanded Photometer Initialization Mode as documented in Contractor2 SP0039-903, Fault Protection Design Document"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1086,Requirement SC2075 appears to be childless,3,"The spacecraft requirement SC2075, ""The Spacecraft shall have Fault Protection during Autonomous Spacecraft Initialization as documented in Contractor2 SP0039-903, Fault Protection Design Document"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1085,Requirement SC2074 appears to be childless,3,"The spacecraft requirement SC2074, ""The Spacecraft shall be capable of autonomously transmitting real-time engineering data after the Flight Segment has entered the Safe Mode"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1084,Requirement SC184 appears to be childless,3,"The spacecraft requirement SC184, ""The Spacecraft shall shed power to the Non-Essential Bus and Payload Bus during safe mode"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1083,Requirement SC1475 appears to be childless,3,"The spacecraft requirement SC1475, ""The status of enable/disable parameters and other pertinent parameters shall be telemetered."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1082,Requirement SC1474 appears to be redundant,3,"The spacecraft requirement SC1459, ""Fault detection enable/disable, trigger, and persistence values should be selected to ensure safety but not â€œhair triggeredâ€ù to cause inadvertent F/P entry/ execution."" appears to be redundant with SC1460.",10/6/05
ProjectD - TIM - 1081,Downward Trace from SC2453,3,"The spacecraft requirement SC2453 ""When a mission critical event requires initiation or termination via autonomous event detection, physically or functionally redundant event detectors shall be used."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1080,Downward Trace from SC2452,3,"The spacecraft requirement SC2452 ""When an autonomously detected error causes a severe response (e.g. downlink loss, large use of expendables), physically or functionally redundant error detectors shall be used."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1079,Downward Trace from SC2641,3,"The spacecraft requirement SC2641 ""The Spacecraft shall prevent frozen thruster firings."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1078,Downward Trace from SC431,3,"The spacecraft requirement SC431 ""No single failure in the command and telemetry data bus electrical interface circuit on either the Photometer side of the interface or the Spacecraft data bus side of the interface shall cause the Photometer to lose the capability to communicate with either the primary or redundant data buses. (TBD)"" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1077,Downward Trace from SC2064,3,"The spacecraft requirement SC2064 ""Hardware and software state and status that affect photometer performance shall be acquired. (TBD)"" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1076,Downward Trace from KAV-3204,3,"The avionics requirement KAV-3204 ""When a pixel co-add value reaches its rollover value, the Avionics shall truncate the overflow value, store the remainder, then continue co-adding from that result."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/3/05
ProjectD - TIM - 1075,Downward Trace from SC208,3,"The spacecraft requirement SC208 ""The Attitude Control Subsystem shall be sized to perform momentum dumps no less than every 6 (TBR) days."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1074,Downward Trace from SC2112,3,"The spacecraft requirement SC2112 ""The Spacecraft shall be capable of transmitting to the ground Alternate Playback photometric data upon failure of the HGA boom articulation."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1073,Downward Trace from SC2111,3,"The spacecraft requirement SC2111 ""The Spacecraft shall be capable of transmitting to the ground Alternate Playback photometric data upon failure of the HGA gimbal."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1072,Downward Trace from SC145,3,"The spacecraft requirement SC145 ""The Spacecraft shall be designed to communicate with the DSMS without impacting the gathering or precision of Photometric data."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1071,KAV-3270 Statement May Need Improvement.,3,"For avionics requirement KAV-3270 â€œThe Avionics shall bin overclocked pixels into 1100 one-pixel targets, per channel, as part of the long cadence masked smear data.â€ù, the upward trace is to SC2293 â€œThe Spacecraft shall process smear level plus dark current on each column per channel as part of the long cadence collateral data.â€ù and the downward trace is to FSW2003 â€œThe FSW shall bin masked pixels into 1100 one-pixel targets, per channel, as part of the long cadence masked smear data.â€ù; should the KAV requirement reference â€œmaskedâ€ù pixels rather than â€œoverclockedâ€ù pixels?",9/30/05
ProjectD - TIM - 1070,More Complete Downward Trace from KAV-2128,3,"The avionics requirement KAV-2128 â€œThe Avionics shall utilize the LDE short cadence timing signal to signal to FSW that short cadence data is ready for processing."" appears only to be traced downward to two KAV requirements which require the SDA/SFDA to generate associated interrupts. It would appear that this KAV requirement also implies a software response.",9/30/05
ProjectD - TIM - 1069,More Complete Downward Trace from KAV-3855,3,"The avionics requirement KAV-3855 â€œWhile maneuvering into the safe state attitude, the Avionics shall maintain Sun avoidance constraints at all times.â€ù, apparently has a single existing downward trace (FSW377). This FSW requirement appears to be about computing a modeled sun vector, while the KAV requirement seems to be mainly about a particular use of modeled sun vector, which is not addressed in the FSW trace.",9/30/05
ProjectD - TIM - 1068,More Complete Downward Trace from KAV-3853,3,"The avionics requirement KAV-3853 â€œThe Avionics shall be capable of autonomously maintaining Standby Mode.â€ù appears to have a single existing downward trace (FSW1757), which is about changing the mode (it requires that the Flight Segment mode be changed upon command - but does not say â€œonly on commandâ€ù). The KAV requirement seems to be about not changing the mode. Thus, it appears the only existing FSW trace does not entirely cover the KAV requirement. A similar comment would seem to apply to KAV-3858 â€œOnce the Spacecraft enters Safe Mode, the Avionics shall remain in Standby mode until commanded.â€ù, also traced (only) to FSW1757.",9/30/05
ProjectD - TIM - 1067,More Complete Downward Trace from KAV-3836,3,"The avionics requirement KAV-3836 â€œThe Avionics shall collect, process, and store engineering data after the Avionics are booted up.â€ù apparently has a single downward trace (FSW86), which seems only to require that the â€œdefaultâ€ù mode be entered following boot-up. Presumably some other downward trace should cover the requirement to collect, process, and store engineering data in â€œdefaultâ€ù mode.",9/30/05
ProjectD - TIM - 1066,More Complete Downward Trace from KAV-3857,3,"For avionics requirement KAV-3857 â€œThe Avionics shall support the capability for both autonomous and ground initiated momentum dumping in all modes which have ADCS sensing and control available.â€ù, the two existing FSW traces mandate the determination of current and desired momentum states, but do not appear to actually trigger/implement any momentum dumping. Perhaps a trace to FSW1806 would at least partially solve this apparent omission.",9/30/05
ProjectD - TIM - 1065,More Complete Downward Trace from KAV-4002,3,"The avionics requirement KAV-4002 â€œThe Avionics shall provide thruster on/off commanding status and commanded thruster fire duration, per firing, monitoring for 8 thrusters.â€ù, appears to currently have only a single FSW trace, FSW465 â€œThe FSW shall enable or disable commanding of the Thrusters on command. NOTE: A software command can be sent to enable or disable the commanding of the thrusters.â€ù. This does not appear to address thruster monitoring, which seems to be the main subject of the KAV requirement. Possibly FSW464 and/or FSW1329 would be appropriate additional traces.",9/30/05
ProjectD - TIM - 1064,Downward Trace from KAV-2900,3,"The avionics requirement KAV-2900 â€œThe Avionics shall timestamp all science and collateral data with VTC.â€ù does not appear to be traced downward to FSW. It would appear that traces to FSW1458 and FSW1459, and possibly additional traces to cover collateral data, would be appropriate.",9/30/05
ProjectD - TIM - 1063,More Complete Downward Trace from KAV-3242,3,"The avionics requirement KAV-3242 â€œThe Avionics shall store a FGS target aperture table, a ""small aperture"" target definition table, and a ""large aperture"" target definition table.â€ù has two existing downward traces to FSW, both of which appear to be concerned with apertures. It would appear that the apparent lack of traces to target definition tables could be rectified by also tracing FSW2077 and FSW503.",9/30/05
ProjectD - TIM - 1062,More Complete Downward Trace from KAV-3127,3,"The avionics requirement KAV-3127 â€œBinning for collateral data shall be performed after data has been digitized.â€ù has five existing downward traces, none of which cite long cadence masked smear. It would appear that this apparent omission could be rectified by a downward trace to FSW2003 â€œThe FSW shall bin masked pixels into 1100 one-pixel targets, per channel, as part of the long cadence masked smear data.â€ù.",9/30/05
ProjectD - TIM - 1061,Downward Trace from KAV-2274,3,"The avionics requirement KAV-2274 â€œThe Avionics shall protect against a single lost data element causing the loss of multiple data elements which violate the contiguous data stream requirement.â€ù does not appear to be traced downward. It would appear that a trace to some FSW requirement, perhaps FSW1492, would be appropriate.",9/30/05
ProjectD - TIM - 1060,More Complete Downward Trace from KAV-3171,3,"The avionics requirement KAV-3171 â€œThe target identification data shall survive a loss of power.â€ù has existing downward traces which appear to be only concerned with long cadence, short cadence, background, and utility target definition tables . It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS target definition data, perhaps to FSW1409.",9/29/05
ProjectD - TIM - 1059,More Complete Downward Trace from KAV-3170,3,"The avionics requirement KAV-3170 â€œThe target identification data shall be updatable.â€ù has existing downward traces which appear to be only concerned with long cadence, short cadence, background, and utility target definition tables, and the CCD Channel Pixel Offset Table. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS target definition data, perhaps to FSW500 and/or FSW503.",9/29/05
ProjectD - TIM - 1058,More Complete Downward Trace from KAV-3075,3,"The avionics requirement KAV-3075 â€œThe Avionics shall store and utilize target identification data.â€ù has existing downward traces which appear to be only concerned with long cadence, short cadence, background, and utility target definition tables . It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS target definition data, perhaps to FSW503.",9/29/05
ProjectD - TIM - 1057,More Complete Downward Trace from KAV-3168,3,"The avionics requirement KAV-3168 â€œData required to process focal plane data shall be stored such that loss of power does not erase it.â€ù has existing downward traces which appear to be only concerned with science and background aperture data. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS aperture data, perhaps to FSW1409.",9/29/05
ProjectD - TIM - 1056,More Complete Downward Trace from KAV-2553,3,"The avionics requirement KAV-2553 â€œThe target aperture data shall be formatted and stored such that it can be updated.â€ù has existing downward traces which appear to be only concerned with science and background aperture data. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS aperture data, perhaps to FSW2068 and/or FSW500.",9/29/05
ProjectD - TIM - 1055,More Complete Downward Trace from KAV-3232,3,The avionics requirement KAV-3232 â€œThe Avionics shall tag science and collateral data for unique identification by the ground segment.â€ù has existing downward traces which appear to be only concerned science data. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the portion of the requirement referencing collateral data.,9/29/05
ProjectD - TIM - 1054,More Complete Downward Trace from KAV-4360,3,"The Avionics requirement KAV-4360 â€œThe Avionics shall process & store short cadence data in at least 60 equally spaced data samples per hour.â€ù is apparently currently traced downward only to FSW1465 ""The FSW shall process all science data within the shortest supported integration period as defined in the 569800 (FS ICD). NOTE: Supported CCD integration intervals range from 2.5 +/-0.25 seconds to 8.0 +/-0.25 seconds."". It would appear that FSW1475 â€œThe FSW shall be capable of supporting a minimum short cadence memory accumulation of 49 (TBR) seconds.â€ù should also be traced.",9/29/05
ProjectD - TIM - 1053,More Complete Downward Trace from KAV-4338,3,"The Avionics requirement KAV-4338 â€œThe Avionics shall process & store long cadence target data in at least 4 equally spaced data samples per hour.â€ù is currently traced downward only to FSW1465 ""The FSW shall process all science data within the shortest supported integration period as defined in the 569800 (FS ICD) NOTE: Supported CCD integration intervals range from 2.5 +/-0.25 seconds to 8.0 +/-0.25 seconds."". It would appear that FSW1469 â€œThe FSW shall be capable of supporting a minimum long cadence memory accumulation of 795 (TBR) seconds.â€ù should also be traced.",9/29/05
ProjectD - TIM - 1052,Possible Inconsistency Between KAV-2966 and its Downward Trace,3,"The avionics requirement KAV-2966 â€œThe Avionics shall configure the LDE short cadence time periods. Note: Each cadence accumulation period shall be made up of integration periods of between 2.5 and 8.0 +/- 0.2 seconds each, per ProjectD.DFM.SYS.031.â€ù appears to have a tighter tolerance on integration periods than its downward traced requirement FSW1465 â€œThe FSW shall process all science data within the shortest supported integration period as defined in the 569800 (FS ICD). NOTE: Supported CCD integration intervals range from 2.5 +/-0.25 seconds to 8.0 +/-0.25 seconds.â€ù. Generally, one would expect that tolerances being traced downward would be the same or tighter.",9/29/05
ProjectD - TIM - 1051,Downward Trace from KAV-3534,3,"The avionics requirement KAV-3534 â€œThe Avionics shall be capable of selecting from multiple software images.â€ù does not appear to be traced downward. It would appear that a trace to some FSW requirement(s), perhaps FSW1978, FSW1967, and/or FSW918, and/or to some other avionics component, would be appropriate.",9/29/05
ProjectD - TIM - 1050,Downward Trace from SC2243,3,"The spacecraft requirement SC2243 â€œFSW shall collect and store engineering data for later downlink. NOTE: stored eng data:â€ù does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-3836 â€œThe Avionics shall collect, process, and store engineering data after the Avionics are booted upâ€ù, would be appropriate.",9/29/05
ProjectD - TIM - 1049,Downward Trace from SC2237,3,"The spacecraft requirement SC2237 â€œFSW shall collect and store engineering data for use in determining health and status of the Flight Segment.â€ù does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-3836 â€œThe Avionics shall collect, process, and store engineering data after the Avionics are booted upâ€ù, would be appropriate.",9/29/05
ProjectD - TIM - 1048,More Complete Downward Trace from SC1454,3,"The spacecraft requirement SC1454 â€œThe spacecraft software shall be designed, tested, and documented in accordance with the ProjectD Software Development Plan. Note: MIL-STD-498 provides guidance for the development and tailoring of the processes described in the Software Development Plan.â€ù, is currently traced downward to KAV-2510 â€œSoftware testing shall be conducted in accordance with the Software Development Plan. Note: MIL-STD-498 provides guidance for the development and tailoring of the processes described in a Software Development Plan.â€ù This trace appears to cover the â€œtestingâ€ù content of the SC requirement, but not the â€œdesignâ€ù and â€œdocumentationâ€ù content.",9/27/05
ProjectD - TIM - 1047,More Complete Downward Trace from SC2464,3,"The spacecraft requirement SC2464 â€œNo single fault shall cause the Spacecraft to activate its attitude control system before launch vehicle separation.â€ù is currently traced downward (only) to KAV-1754 â€ùThe Avionics design shall prevent the introduction of mission critical failures.â€ù. This KAV requirement seems much more generic than the SC requirement (e.g., no mention of prematurely activating attitude control, etc.), making it difficult to verify that all the content of the SC requirement has been satisfied at the lower level.",9/27/05
ProjectD - TIM - 1046,More Complete Downward Trace from SC2457,3,"The spacecraft requirement SC2457 â€œFlight Segment fault protection shall allow ground operators to enable any previously disabled individual test or response.â€ù is currently traced downward (only) to KAV-4193 â€œThe Avionics shall be capable of enabling and disabling fault protection on command.â€ù. This KAV requirement seems much more generic than the SC requirement (e.g., no mention of individual tests/responses, etc.), making it difficult to verify that all the content of the SC requirement has been satisfied at the lower level.",9/27/05
ProjectD - TIM - 1045,More Complete Downward Trace from SC2469,3,"The spacecraft requirement SC2469 â€œFlight Segment fault protection shall allow ground operators to disable any previously enabled individual test or response in such a way that it cannot be autonomously re-enabled.â€ù is currently traced downward (only) to KAV-4193 â€œThe Avionics shall be capable of enabling and disabling fault protection on command.â€ù. This KAV requirement seems much more generic than the SC requirement (e.g., no mention of individual tests/responses, autonomous re-enabling, etc.), making it difficult to verify that all the content of the SC requirement has been satisfied at the lower level.",9/27/05
ProjectD - TIM - 1044,Downward Trace from SC451,3,"The spacecraft requirement SC451 â€œThe Spacecraft shall deliver data to the Photometer with formats and content as specified in the Flight Segment ICD.â€ù appears to have a single downward trace to the KAV spec, but that trace downward appears to lead to a â€œwillâ€ù statement (KAV-1639).",9/27/05
ProjectD - TIM - 1043,More Complete Downward Trace from SC255,3,"The spacecraft requirement SC255 â€œThe Spacecraft shall be capable of receiving upload of data tables. Note: This data format and content are defined in the Command and Telemetry Handbook.â€ù appears to have 3 ""shall"" traces, and 1 ""will"" trace downward to KAV. The â€œshallâ€ù traces appear only to discuss the FGS tables, and the â€œgenericâ€ù processing of uplink CFDP formatted packets; perhaps also tracing KAV-1304 â€œThe Avionics shall be capable of data table updates. Note: Data table formats are found in the Command & Telemetry Handbookâ€ù, would be appropriate to more completely cover the SC requirement.",9/27/05
ProjectD - TIM - 1042,More Complete Downward Trace from SC2648,3,The spacecraft requirement SC2648 â€œThe Spacecraft shall provide a unique identifier so that CCD integration setting is known.â€ù has an existing downward trace which does not appear to carry downward the specific requirement for a unique identifier. Perhaps some requirement such as KAV-4052 could also be traced to cover that portion of the SC requirement.,9/27/05
ProjectD - TIM - 1041,More Complete Downward Trace from SC2647,3,The spacecraft requirement SC2647 â€œThe Spacecraft shall provide a unique identifier so that focus position of each positioner is known.â€ù has an existing downward trace which does not appear to carry downward the specific requirement for a unique identifier. Perhaps some requirement such as KAV-4052 could also be traced to cover that portion of the SC requirement.,9/27/05
ProjectD - TIM - 1040,More Complete Downward Trace from SC234,3,"The spacecraft requirement SC234 â€œThe Spacecraft shall provide a unique identifier so that photometer thermal stabilizaiton, is known.â€ù has an existing downward trace which does not appear to carry downward the specific requirement for a unique identifier. Perhaps some requirement such as KAV-4052 could also be traced to cover that portion of the SC requirement.",9/27/05
ProjectD - TIM - 1039,Downward Trace from SC2057,3,"The spacecraft requirement SC2057 â€ùDuring the Flight Segment Decommissioning Mode, the spacecraft shall be placed in a safe configuration on command.â€ù does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-4322 â€œThe Avionics shall support the mode transitions shown in ""ProjectD Modes Description Document"", Contractor2 #TBD.â€ù, would be appropriate.",9/23/05
ProjectD - TIM - 1038,Downward Trace from SC2652,3,The spacecraft requirement SC2652 â€œThe Spacecraft shall pitch about the +Y-axis at 0.05 +/-0.01 (TBR) degrees per second during Safe Mode.â€ù does not appear to be traced downward. It would appear that some KAV requirement trace is needed to implement the portion of the requirement calling for autonomous rate generation with respect to the Y axis.,9/23/05
ProjectD - TIM - 1037,Downward Trace from SC182,3,The spacecraft requirement SC182 â€œThe Spacecraft shall orient the Flight Segment such that it is in a commandable state with the Sun vector within 10 degrees of the +Y-axis while in Safe Mode.â€ù does not appear to be traced downward. It would appear that some KAV requirement trace is needed to implement the portion of the requirement calling for autonomous orientation with respect to the Y axis.,9/23/05
ProjectD - TIM - 1036,More Complete Downward Trace from SC2262,3,"The spacecraft requirement SC2262 â€ùThe location of any photometric aperture within the active field of view shall be specified on command.â€ù is apparently currently traced downward only to KAV-2279, which appears to be silent on the matter of specifying or updating the apertures. Perhaps an additional trace to something like KAV-3170 would be appropriate.",9/23/05
ProjectD - TIM - 1035,Downward Trace from SC2437,3,The spacecraft requirement SC2437 â€œThe Spacecraft shall be capable of autonomously entering Safe Mode after detecting a UV2 power fault condition. Note: UV2 (Undervoltage 2) is defined as a bus undervoltage condition below UV1 per parameters set by ground commanded configuration files.â€ù does not appear to be traced downward. A trace to a KAV requirement (such as KAV-3851) would appear to be appropriate.,9/23/05
ProjectD - TIM - 1034,Downward Trace from SC2417,3,"The spacecraft requirement SC2417 â€œOnce the Spacecraft enters Safe Attitude Hold Mode, the Spacecraft shall remain in this mode until ground commanded or until faults result in the need to transition to Safe Mode or Emergency Mode.â€ù does not appear to be traced downward. A trace to a KAV requirement would appear appropriate (the parallel requirement for Safe mode, SC2422, appears to have an analogue in KAV-3858).",9/23/05
ProjectD - TIM - 1033,More Complete Downward Trace from SC2439,3,The spacecraft requirement SC2439 â€œThe spacecraft shall orient the Flight Segment such that it is in a commandable state with the Sun vector within 10 degrees of the +Y-axis and the +X-axis within 10 degrees of Ecliptic North while in Safe Attitude Hold.â€ù has existing downward traces which appear to be only concerned with enabling and disabling of downlink coding and randomization upon command. It would appear that some KAV requirement trace is needed to implement the portion of the requirement calling for autonomous orientation with respect to the Y and X axes.,9/23/05
ProjectD - TIM - 1032,Clarification of SC160,3,The spacecraft requirement SC160 â€œThe Spacecraft shall be capable of pointing the HGA and perform momentum dumps within the same single Memory Accumulation Period of the Photometer.â€ù could be made more precise by clarifying whether â€œMemory Accumulation Periodâ€ù means a short or long cadence period (the KAV trace would imply long cadence).,9/23/05
ProjectD - TIM - 1031,Downward Trace from SC2429,3,"The spacecraft requirement SC2429 ""The Spacecraft shall support verification of subsystem functionality and performance characterization.â€ù does not appear to be traced downward. Possible downward traces could be to KAV-3836 â€œThe Avionics shall collect, process, and store engineering data after the Avionics are booted upâ€ù, and KAV-3516 â€œThe Avionics shall perform diagnostic tests and self-tests upon command. Note: These tests will be in the form of returned engineering data for assessment on the ground.â€ù.",9/23/05
ProjectD - TIM - 1030,Downward Trace from SC2134,3,The spacecraft requirement SC2134 â€œThe Spacecraft shall remain in Safe Mode until commanded.â€ù does not appear to be traced downward. A possible trace could be to KAV-3853 â€œThe Avionics shall be capable of autonomously maintaining Standby Mode.â€ù,9/23/05
ProjectD - TIM - 1029,Downward Trace from SC2074,3,The spacecraft requirement SC2074 â€œThe Spacecraft shall be capable of autonomously transmitting real-time engineering data after the Flight Segment has entered the Safe Mode.â€ù does not appear to be traced downward. It would appear that KAV-3859 â€œThe Avionics shall be capable of autonomously transmitting real-time engineering data after the Flight Segment has entered Safe Mode (TBR).â€ù would be a reasonable trace.,9/23/05
ProjectD - TIM - 1028,Downward Trace from SC105,3,"The spacecraft requirement SC105 â€œThe Spacecraft shall be capable of autonomously entering Safe Mode at the completion of Autonomous Initialization.â€ù does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-4322 â€œThe Avionics shall support the mode transitions shown in ""ProjectD Modes Description Document"", Contractor2 #TBD.â€ù, would be appropriate.",9/23/05
ProjectD - TIM - 1027,Downward Trace from SC132,3,"The spacecraft requirement SC132 â€œThe Spacecraft shall support calibration of the Fine Guidance Sensors during the Commissioning Phase on command.â€ù, does not appear to be traced downward. Assuming that a FGS FFI is the appropriate data needed for the calibration, a trace to something like KAV-3625 â€œThe Avionics shall acquire an FGS Full Field Image (FFI) upon command. Note: It is not required to acquire a science FFI concurrently with an FGS FFI.â€ù would appear to be appropriate.",9/23/05
ProjectD - TIM - 1026,Downward Trace from SC2132 and SC2148,3,"The spacecraft requirements SC2132 â€œThe Spacecraft shall perform roll maneuvers during the Commissioning Phase on command. Note: Check-out of the roll maneuver may be accomplished at using a roll maneuver less than the 90 degrees.â€ù and SC2148 â€œThe Spacecraft shall be capable of reversing any performed roll maneuver during the commissioning phase.â€ù do not appear to be traced downward. It would appear that some downward trace would be appropriate, possibly to KAV-3501 â€œThe Avionics shall perform closed loop attitude control.â€ù",9/23/05
ProjectD - TIM - 1025,Downward Trace from SC2127,3,"The spacecraft requirement SC2127 â€œThe Spacecraft shall perform a health check during the terminal countdown prior to disconnection of external power on command.â€ù does not appear to be traced downward. It would appear that KAV-3516 â€œThe Avionics shall perform diagnostic tests and self-tests upon command. Note: These tests will be in the form of returned engineering data for assessment on the ground.â€ù and KAV-4177 â€œThe Avionics shall be capable of performing health and status checks pre and post launch.â€ù should be traced. However, these KAV requirements specify capabilities; the SC requirement requires that the health check actually occur. It would appear that either it (and presumably FS-896) should be rewritten to also specify capabilities, or a KAV requirement should be added to actually â€œautonomouslyâ€ù perform the health check.",9/23/05
ProjectD - TIM - 1024,More Complete Downward Trace from SC2413,3,"The spacecraft requirement SC2413 â€œThe Spacecraft shall be capable of performing a health check during pre-launch phase on command.â€ù, is currently traced downward only to a KAV requirement which does not appear to cite ""pre-launch phase""; this could be rectified by also tracing KAV-4177 â€œThe Avionics shall be capable of performing health and status checks pre and post launch.â€ù.",9/23/05
ProjectD - TIM - 1023,More Complete Downward Trace from SC2149,3,"The spacecraft requirement SC2149 â€œThe Spacecraft shall have the capability to point the photometer axis to any coordinate provided the new coordinates do not violate flight rules. Note: Requirements from the Celestial Field of View do not apply to other FOVs.â€ù is currently traced downward to (only) three KAV requirements. None of these current traces appear to reference the â€œdo not violate flight rulesâ€ù proviso in the SC requirement. Assuming that this implies that the SC will protect against â€œviolating flight rulesâ€ù, presumably some KAV requirement should implement this. If this is not the intent of the SC requirement, consider restating or supplementing the requirement with a note to avoid this possible misunderstanding.",9/23/05
ProjectD - TIM - 1022,EMC requirements in SCA Specification 2215090 missing links,3,"The traceability analysis for the Emergency Mode Controller, EMC, can not be performed without the parent or child requirements in the SCA Avionics Box Board Specification 2215090.",8/5/05
ProjectD - TIM - 1021,Incomplete downward trace from SC2443,3,"The spacecraft requirement SC2443 "" Flight Segment fault protection shall ensure the Flight Segment can survive pointing faults."" does not have appear to have any requirements that trace down to any avionics or flight software requirements.",6/3/05
ProjectD - TIM - 1020,Incomplete downward trace from SC2632,3,"The spacecraft requirement SC2632 â€œThe Spacecraft shall be designed to be in Fine Point while acquiring either a science or FGS FFI. Note: FFIs and FGS FFIs do not need to be acquired simultaneously. In addition, during any FFI, nominal science data taking is suspended.â€ù is traced downward (only) to KAV-3181 â€ùThe Avionics shall acquire a science Full Field Image (FFI) upon command. Note: It is not required to acquire a science FFI concurrently with an FGS FFI.â€ù. One of the main points of SC2632 appears to be that the design should assume that fine pointing processing will continue during FFI acquisition. This does not appear to be reflected in the trace to avionics. While many of the provisions for fine pointing during FFI acquisition would appear to apply outside the â€œavionicsâ€ù, some of them appear to apply within the avionics (e.g., provision to perform FGS sensor processing as well as FFI processing in the flight computer). If so, it would appear that the requirement would have avionics implications. Note also that the traced avionics requirement makes no mention of a FGS FFI, while the SC requirement does. It appears that this requirement should be traced to an avionics requirement (or requirements) that fully implements this requirement with respect to avionics, and/or one or more avionics requirements should be added that fully implement this requirement with respect to avionics, and/or the spacecraft requirement should be restated to eliminate any unwanted avionics implications. Any new or significantly revised avionics requirement should trace further as appropriate to flight software.",5/31/05
ProjectD - TIM - 1019,Incomplete downward trace from KAV-3189.,3,"The avionics requirement KAV-3189 â€œThe Avionics shall process the FGS FFI from all four FGS CCDs within the same FGS cadence, upon command (TBR). Note: Fine pointing is not required during FGS FFI data acquisition and processing.â€ù is traced downward (only) to FSW519 â€ùThe FSW shall request full frame FGS images on command. NOTE: The FSW uses only the selected pixels of each full frame image during Fine Guidance pointing operations. The Full Frame image is needed for image calibration during maintenance operations.â€ù. One of the main points of KAV-3189 appears to be that the processing of all parts of the FGS FFI must occur within the same FGS cadence. This does not appear to be reflected in the trace to FSW. While much of the â€œFGS FFI processingâ€ù would appear to take place outside the â€œflight softwareâ€ù, some of it appears to take place within the flight software. If so, it would appear that the requirement would have flight software implications. It appears that this requirement should be traced to a flight software requirement (or requirements) that fully implements this requirement with respect to flight software, and/or one or more flight software requirements should be added that fully implement this requirement with respect to flight software, and/or the avionics requirement should be restated to eliminate any unwanted flight software implications.",5/31/05
ProjectD - TIM - 1018,Closest SC version of KAV-3029 and FS-145 is a â€œwillâ€ù statement.,3,"The avionics requirement KAV-3029 â€œThe Avionics shall be capable of acquiring engineering data that is considered ancillary data at least once every 15 minutes. Note: Ancillary data acquisition is not required unless science data collection is occurring.â€ù appears to be a flow-down of flight segment requirement FS-145 â€œThe rate of ancillary data acquisition shall be at least every 15 minutes. Note: ancillary data acquisition is not required unless science data collection is occurring.â€ù. There is an analogous spacecraft-level statement SC242 â€œThe rate of engineering data acquisition will be at least every 15 minutes. Note: Ancillary data acquisition is not required unless science data collection is occurring.â€ù, which is a downward trace from FS-145, but which is not a requirement (and is not traced to KAV-3029). FS-145 and KAV-3029 requirements are linked by SC2071 â€œThe phase of the engineering data cadence shall remain constant to within 90 seconds (TBR).â€ù, which appears to only address a portion, at best, of FS-145 and KAV-3029. FS-145 (down) and KAV-3029 (up) have no other traces. It appears that SC242 should be converted to a requirement, and/or the contents of SC242 should be supplemented, and/or a new SC requirement should be added for full linkage.",5/31/05
ProjectD - TIM - 1017,KAV-4336 is not traced to analogous requirement FS-292.,3,"The avionics requirement KAV-4336 â€œThe Avionics shall support collection of data for star field densities of up to 13768 long cadence targets per channel (1.37 squareÂ°). Note: This requirement is for any single channel only.â€ù appears to logically follow from flight segment requirement FS-292 â€œThe Flight Segment shall support star field densities up to 10,000 targets per square degree within the active FOV. Note: The maximum number of targets based on this requirement does not need to exceed the target requirement in FS-106 and FS-111 combined.â€ù. However, there does not appear to be a direct trace link between the two requirements. FS-292 traces down to no SC requirement. KAV-3126 traces up to no SC requirement. It appears that a trace-link should be provided between FS-292 and KAV-4336, adding a corresponding SC requirement if appropriate.",5/31/05
ProjectD - TIM - 1016,KAV-3126 is not traced to analogous requirement FS-136.,3,"The avionics requirement KAV-3126 â€œThe Avionics shall acquire and process collateral data associated with photometric data on each CCD data channel.â€ù appears to logically follow from flight segment requirement FS-136 â€œThe Flight Segment shall acquire collateral data associated with the photometric data on each CCD data Channel.â€ù. However, there does not appear to be a direct trace link between the two requirements. FS-136 traces down to SC2308 â€œThe Spacecraft shall support storing data from photometric targets and collateral data greater than or equal than 57 Gi bits in a 13.5 day period during the first year of operational life.â€ù, SC2296 â€œBinning for collateral data shall be performed after data has been digitized.â€ù, and SC2309 â€œThe Spacecraft shall support storing data from photometric targets and collateral data greater than or equal than 43 Gi bits in a 13.5 day period after the first year of operational life.â€ù, none of which trace down to KAV-3126. KAV-3126 traces up to SC2257 â€œThe Spacecraft shall sum consecutive CCD integration intervals for every pixel of interest during each memory accumulation period.â€ù, which does not trace up to FS-136. It appears that a trace-link should be provided between FS-136 and KAV-3126, adding a corresponding SC requirement if appropriate.",5/31/05
ProjectD - TIM - 1015,Non-requirement statement FS-1001 traces both ways to requirements.,3,"The statement FS-1001 â€œAt least four mv=12 or brighter targets per CCD will be considered fiducial targets used for ""quick-look"" data analysis by the Ground Segment.â€ù (note â€œwillâ€ù, not â€œshallâ€ù) is traced upward to MRD280 â€œAt least four mv=12 or brighter targets per CCD shall be considered fiducial targets.â€ù (note â€œshallâ€ù) and downward to SC2410 â€œThe Spacecraft shall have the capability to process at least 10 utility targets per channel, at an average aperture size of 85 pixels during the life of the mission.â€ù (note â€œshallâ€ù). FS-1001 also is traced upward to requirement MRD1257 and downward to SC2475. No additional links to FS requirements appear to exist for any of these MRD or SC requirements. It appears that â€œwillâ€ù should be changed to â€œshallâ€ù in FS-1001, traceability should be provided between noted MRD and SC requirements using other requirements, and/or or one or more flight segment requirements should be added that provide traceability between these MRD and SC requirements.",5/31/05
ProjectD - TIM - 1014,Requirement SC1012 is childless,3,"The spacecraft requirement SC1012, ""The ADCS algorithms shall comply with the fault detection/correction requirements defined in the ProjectD Fault Protection Description Document (TBD)"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",5/26/05
ProjectD - TIM - 1013,Requirement KAV-3787 is childless,3,"The avionics requirement KAV-3787 â€œSoftware controlling hazardous systems or operations (e.g., propulsion systems, electro-explosive devices, electromechanical release devices, etc.) shall comply with EWR 127-1 and be assessed for hazard severity and probability in accordance with AFM 91-201 and using MIL-STD-882C as a guide.â€ù does not appear to be traced to any flight software requirement. It appears that this requirement has flight software implications. It appears that KAV-3787 should be traced to a flight software requirement (or requirements) that fully implements this requirement, and/or add one or more flight software requirements that fully implement this requirement.",5/23/05
ProjectD - TIM - 1012,Requirement SC1992 is childless,3,"The spacecraft requirement SC1992 â€œThe spacecraft shall initiate the roll maneuver only at the end of a Memory Accumulation Period of the Photometer.â€ù does not appear to be traced to any avionics requirement. It appears that this requirement has avionics implications. It appears that SC1992 should be traced to an avionics requirement (or requirements) that fully implements this requirement, and/or add one or more avionics requirements that fully implement this requirement. Trace further to flight software as appropriate.",5/23/05
ProjectD - TIM - 1011,Requirement SC218 is childless,3,"The spacecraft requirement SC218 â€œFollowing loss of pointing to the center of the Celestial Field of View Location, the Flight Segment shall be capable of repointing to within 0.12 arc second, (3 sigma) per axis of the attitude used prior to loss of lock, excluding roll maneuvers.â€ù does not appear to be traced to any avionics requirement. While this requirement clearly constrains hardware, it appears that this requirement has avionics implications. It appears that SC218 should be traced to an avionics requirement (or requirements) that fully implements this requirement with respect to avionics, and/or add one or more avionics requirements that fully implement this requirement with respect to avionics. Trace further to flight software as appropriate.",5/23/05
ProjectD - TIM - 1010,Requirement KAV-2129 is childless,3,"The avionics requirement KAV-2129 â€œThe Long Cadence target star data cadence shall be an integer multiple of the duration of the Short Cadence target cadence.â€ù does not appear to be traced to any flight software requirement. It appears that this requirement has flight software implications. It appears that KAV-2129 should be traced to a flight software requirement (or requirements) that fully implements this requirement, and/or add one or more flight software requirements that fully implement this requirement.",5/23/05
ProjectD - TIM - 1009,Requirements SC2473 and SC2474 are childless,3,"The spacecraft requirements SC2473 â€œThe Spacecraft shall be capable of receiving an updated collateral background pixel location set.â€ù and SC2474 â€œThe Spacecraft shall be capable of implementing an updated collateral background pixel location set.â€ù do not appear to be traced to any avionics requirements. It appears that these requirements have avionics implications. It appears that SC2473 and SC2474 should be traced to an avionics requirement (or requirements) that fully implements these requirements with respect to avionics, and/or add one or more avionics requirements that fully implement these requirements with respect to avionics. Trace further to flight software as appropriate. Note: KAV-3804 appears to be related.",5/23/05
ProjectD - TIM - 1008,Requirement KAV-3076 is childless,3,"The avionics requirement KAV-3076 â€œThe target identification data shall utilize a combination of CCD channel, pixel location, and target aperture to uniquely identify each target star.â€ù does not appear to be traced to any flight software requirement. While this appears to primarily levy requirements upon the content and nature of target identification data, it appears that this requirement also has flight software implications in terms of the interpretation and utilization of the data. It appears that KAV-3076 should be traced to a flight software requirement (or requirements) that fully implements this requirement, and/or add one or more flight software requirements that fully implement this requirement.",5/23/05
ProjectD - TIM - 1007,Requirement KAV-4226 is childless with respect to flight software.,3,"The avionics requirement â€œKAV-4226 The Avionics shall utilize the LDE FGS FFI cadence timing signal to signal to FSW that an FGS FFI data is ready for processing.â€ù does not appear to be traced to any flight software requirement. While this requirement clearly constrains hardware, it appears that this requirement also has flight software implications (i.e., the flight software presumably must utilize the signal to determine that an FGS FFI data is ready for processing). It appears that KAV-4226 should be traced to a flight software requirement (or requirements) that fully implements this requirement with respect to flight software, and/or add one or more flight software requirements that fully implement this requirement with respect to flight software.",5/23/05
ProjectD - TIM - 1006,Requirement KAV-4339 is childless,3,"The avionics requirement KAV-4339 â€œThe Avionics shall be capable of acquiring an FGS FFI from each FGS CCD.â€ù does not appear to be traced to any flight software requirement. While this requirement clearly constrains hardware, it appears that this requirement also has flight software implications. It appears that KAV-4339 should be traced to a flight software requirement (or requirements) that fully implements KAV-4339 with respect to flight software, and/or one or more flight software requirements should be added in order to fully implement KAV-4339 with respect to flight software. Note that FSW519 appears to be related, but may not fully implement the KAV requirement.",5/20/05
ProjectD - TIM - 1005,Requirement SC159 is childless.,3,"The spacecraft requirement SC159 â€œThe Spacecraft shall be capable of performing a +90 degree roll maneuver about the X-axis (approximately every 90 days) with an accuracy of +/- 12 arcseconds about the X-axis and +/- 2 arcseconds about the Y and Z axes from the attitude used prior to the roll maneuver.â€ù does not appear to be traced to any avionics requirement. While this requirement clearly constrains hardware, it appears that this requirement has avionics implications. It appears that SC159 should be traced to an avionics requirement (or requirements) that fully implements the SC requirement, or add one or more avionics requirements that fully implement the SC requirement. Trace further to flight software as appropriate.",4/4/05
ProjectD - TIM - 1004,Requirement SC2426 is childless.,3,"The spacecraft requirement SC2426 â€œSpacecraft fault protection shall detect the loss of fine pointing lock and operate in coarse pointing.â€ù does not appear to be traced to any avionics requirement. It appears that this requirement has avionics implications. It appears that SC2426 should be traced to an avionics requirement (or requirements) that fully implements the SC requirement, or add one or more avionics requirements that fully implement the SC requirement. Trace further to flight software as appropriate (FSW366 may be related).",4/4/05
ProjectD - TIM - 1003,Requirements KAV-4327 and KAV-4199 are childless with respect to flight software.,3,"The avionics requirements KAV-4327 â€œThe Avionics shall utilize the LDE long cadence timing signal to signal to FSW that long cadence data is ready for processing.â€ù and KAV-4199 â€œThe Avionics shall utilize the LDE FFI cadence timing signal to signal to FSW that FFI data is ready for processing.â€ù do not appear to be traced to any flight software requirements. While these requirements clearly constrain hardware, it appears that these requirements also have flight software implications (e.g., receiving and properly responding to the signal). It appears that they should be traced to a flight software requirement (or requirements) that fully implements these avionics requirements, or one or more flight software requirements should be added in order to fully implement these avionics requirements with respect to flight software.",4/4/05
ProjectD - TIM - 1002,"Requirements KAV-4439, KAV-1284, and KAV-4029 are childless.",3,"The avionics requirements KAV-4439 â€œThe Avionics shall tag data as suspect when data parity errors are detected on the LDE science data link, the cPCI data bus, or the internal SDA or SFDA data busses.â€ù, KAV-1284 â€œThe Avionics shall tag science data as suspect when the Photometer reports a pixel error or TBD.â€ù, and KAV-4029 â€œThe Avionics shall tag science data as suspect when the Avionics detects a pixel error or TBD.â€ù do not appear to be traced to any flight software requirements. It appears that these requirements have flight software implications. It appears that they should be traced to a flight software requirement (or requirements) that fully implements these avionics requirements, or one or more flight software requirements should be added in order to fully implement these avionics requirements with respect to flight software.",4/4/05
ProjectD - TIM - 1001,Requirement SC2612 is childless.,3,"The spacecraft requirement SC2612 â€œThe Spacecraft shall be capable of pointing the Flight Segment per SC216 while acquiring science FFI data. Note: During any FFI, nominal science data taking is suspended.â€ù does not appear to be traced to any avionics requirement. It appears that this requirement has avionics implications. It appears that SC2612 should be traced to an avionics requirement (or requirements) that fully implements SC2612 with respect to avionics, or it should be merged with requirement SC216 in order to utilize its traces. The avionics requirement(s) should trace further to flight software as appropriate.",4/4/05
ProjectD - TIM - 1179,Command Manager Function exposing low access member information (cmd_seq_extra.cpp - Line 41),4,"File: sfsw/CommandManager/src/cmd_seq_extra.cpp The function 'cmd_sequence_status_block* CommandSequence::getSeqStatBlkPtr()' located at Line 39 of 'cmd_seq_extra.cpp' is a PUBLIC function, whereas the address it is returning at Line 41 [return(&SeqStatBlk);] where SeqStatBlk is PRIVATE.",1/22/07
ProjectD - TIM - 1178,Task Manager contains two symbols with the same name (task_manager.cpp - Line 1521),4,"File: sfsw/TaskManager/src/task_manager.cpp locApid is defined at Line 1193 in 'int32 TaskManager::Process()', and at Line 1521 of the same function, it is defined again with a value of '0' and used only within the 'for' loop Lines 1521-1527. The first defined locApid is continously used throughout the function just 20 Lines down (Line 1541). A different symbol name should be used.",1/22/07
ProjectD - TIM - 1177,Command Manager Switch Case Missing Default (cmd_pcvt.cpp - Line 318),4,"File: sfsw/CommandManager/src/cmd_pcvt.cpp The switch case at Lines 278-318 which checks the Boot Type in order to call 'CmdPCVT::Initialize' does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",1/22/07
ProjectD - TIM - 1157,Memory Manager Switch with NO Case (filesync.cpp - line 234),4,"filesync.cpp - Line 234, there is no case statements for the switch case, only a default case. The switch case is unnecessary logic.",10/6/06
ProjectD - TIM - 1156,Memory Manager Switch Case Missing Default (log.cpp - line 1061),4,"log.cpp - The switch case at Lines 1053-1061 do not contain a default, nor do they include a comment, detailing the falling through. Also no fall through comment of the case statement, violating 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1152,Command Manager Switch Case Missing Default (cmd_sequence.cpp - Line 336),4,"File: cmd_sequence.cpp The switch case at Lines 250-336 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1151,Command Manager Switch Case Missing Default (cmd_seq_eng_ex2.cpp - Line 978),4,"File: cmd_seq_eng_ex2.cpp The switch case at Lines 949-978 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1150,Command Manager Switch Case Missing Default (cmd_mgr_extra.cpp - Line 1416),4,"File: cmd_mgr_extra.cpp The switch case at Lines 1338-1416 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1149,Command Manager Switch Case Missing Default (cmd_mgr_extra.cpp - Line 1110),4,"File: cmd_mgr_extra.cpp The switch case at Lines 965-1110 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1148,Command Manager Switch Case Missing Default (cmd_immediate_command.cpp - Line 686),4,"File: cmd_immediate_command.cpp The switch case at Lines 582-686 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1147,Public function returning protected data (file_class.cpp Line 508),4,"File: file_class.cpp Function: getFname() The function getFname, defined at line 506 of file_class.cpp returns fName, a protected array. The function directly above, getFd, defined at line 484, is similar, only that it is made a const public function. Evaluate getFname and determine whether it should be made a const public function as well. *************************** Code Excerpt: file_class.h protected : ... int Fd; //## attribute Fd /****LINE 175****/ ... ... aspen_filename Fname; //## attribute Fname /****LINE 188****/ ***************************** Code Excerpt: file_class.cpp int File::getFd() const { /****LINE 484****/ //#[ operation getFd() return Fd; //#] } ... char* File::getFname() { /****LINE 506****/ //#[ operation getFname() return Fname; //#] }",10/6/06
ProjectD - TIM - 1144,Thermal Manager Switch Case Missing Default (therm_cvt.cpp - lines 525 & 720),4,"therm_cvt.cpp - The switch case at Lines 502-525 and 702-720 do not contain a default, nor do they include a comment, detailing the falling through. Also no fall through comment of the case statement at Line 505 to the case statement at Line 506, violating 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1143,Fault Manager Switch Case Missing Default (FaultMonitorSet.cpp - line 1383),4,"FaultMonitorSet.cpp - The switch case at Lines 1307-1383 do not contain a default, nor do they include comments detailing the falling through of case statements to the next case statement, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1124,"Assignment operator in Subscription class (tlm_subscription.cpp, line 171) does not check for assignment to this",5,The assignment operator does not check for assignment to self.,2/16/06