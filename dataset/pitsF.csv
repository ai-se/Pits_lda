TIM_Id,Subject,Severity,Description,Initiation_DateProjectF - TIM - 1750,Lack of verification of requirement FSW.SN.25 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.25 in the SubSys1 SRS document [1], which calls for keeping track of the accumulated thruster commanded on-time based on processor hardware output with a minimum resolution of 50 ms, has been verified in ACS test procedures apt_ssThrustA.proc [2] and apt_contThrustA.proc [3] for the Sun Synchronous Pulsing and Continuous Firing thruster modes, respectively. However, no test procedure, available to IV&V, attempts to verify FSW.SN.25 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.25 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.25 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.25 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.25 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.25 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing test in question has been implemented in a new or existing test procedure script. 2. The test procedure script in question has subsequently been run against the latest version of the ProjectF FSW and has successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script, apt_ssThrustA.proc, unspecified version, created December 13, 2005. 3. SubSys1 ACS test procedure STOL script, apt_contThrustA.proc, unspecified version, created December 13, 2005.",9/4/06ProjectF - TIM - 1749,Lack of verification of requirement FSW.SN.24 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.24 in the SubSys1 SRS document [1], which calls for keeping track of the accumulated thruster commanded on-time computed in software with floating point precision, has been verified in ACS test procedures apt_ssThrustA.proc [2] and apt_contThrustA.proc [3] for the Sun Synchronous Pulsing and Continuous Firing thruster modes, respectively. However, no test procedure, available to IV&V, attempts to verify FSW.SN.24 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.24 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.24 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.24 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.24 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.24 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing test in question has been implemented in a new or existing test procedure script. 2. The test procedure script in question has subsequently been run against the latest version of the ProjectF FSW and has successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script, apt_ssThrustA.proc, unspecified version, created December 13, 2005. 3. SubSys1 ACS test procedure STOL script, apt_contThrustA.proc, unspecified version, created December 13, 2005.",9/4/06ProjectF - TIM - 1748,Lack of verification of requirement FSW.SN.21 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.21 in the SubSys1 SRS document [1], which calls for the cancellation of a thruster firing if the number of pulses per revolution has a negative numerator or denominator or has a numerator greater than two times the denominator, has been verified in ACS test procedures apt_ssThrustCmdPPRnumZeroFSWA.proc [2], apt_ssThrustCmdPPRnumZeroITOSA.proc [3], apt_ssThrustCmdPPRdenZeroFSWA.proc [4], apt_ssThrustCmdPPRdenZeroITOSA.proc [5], and apt_ssThrustCmdPPRnumGT2denA.proc [6] for the Sun Synchronous Pulsing thruster mode. However, no test procedure, available to IV&V, attempts to verify FSW.SN.21 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.21 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.21 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.21 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.21 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.21 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing tests in question have been implemented in new or existing test procedure scripts. 2. The test procedure scripts in question have subsequently been run against the latest versions of the ProjectF FSW and ITOS and have successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPPRnumZeroFSWA.proc, unspecified version, created January 9, 2006. 3. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPPRnumZeroITOSA.proc, unspecified version, created January 9, 2006. 4. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPPRdenZeroFSWA.proc, unspecified version, created January 9, 2006. 5. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPPRdenZeroITOSA.proc, unspecified version, created January 9, 2006. 6. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPPRnumGT2denA.proc, unspecified version, created January 9, 2006.",9/4/06ProjectF - TIM - 1747,Lack of verification of requirement FSW.SN.16 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.16 in the SubSys1 SRS document [1], which calls for the cancellation of a thruster firing if the thrust center phase is less than 0 or greater than or equal to 2 pi, has been verified in ACS test procedures apt_ssThrustCmdPhaseNegFSWA.proc [2], apt_ssThrustCmdPhaseNegITOSA.proc [3], apt_ssThrustCmdPhaseGT2PiFSWA.proc [4], and apt_ssThrustCmdPhaseGT2PiITOSA.proc [5] for the Sun Synchronous Pulsing thruster mode. However, no test procedure, available to IV&V, attempts to verify FSW.SN.16 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.16 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.16 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.16 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.16 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.16 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing tests in question have been implemented in new or existing test procedure scripts. 2. The test procedure scripts in question have subsequently been run against the latest versions of the ProjectF FSW and ITOS and have successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPhaseNegFSWA.proc, unspecified version, created January 9, 2006. 3. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPhaseNegITOSA.proc, unspecified version, created January 9, 2006. 4. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPhaseGT2PiFSWA.proc, unspecified version, created January 9, 2006. 5. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPhaseGT2PiITOSA.proc, unspecified version, created January 9, 2006.",9/4/06ProjectF - TIM - 1746,Lack of verification of requirement FSW.SN.15 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.15 in the SubSys1 SRS document [1], which calls for the cancellation of a thruster firing when the thruster off time between pulses is less than the minimum allowed, has been verified in ACS test procedure apt_ssThrustCmdOffLowA.proc [2] for the Sun Synchronous Pulsing thruster mode. However, no test procedure, available to IV&V, attempts to verify FSW.SN.15 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.15 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.15 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.15 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.15 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.15 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing test in question has been implemented in a new or existing test procedure script. 2. The test procedure script in question has subsequently been run against the latest version of the ProjectF FSW and has successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script, apt_ssThrustCmdOffLowA.proc, unspecified version, created January 9, 2006.",9/4/06ProjectF - TIM - 1745,Lack of verification of requirement FSW.SN.14 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.14 in the SubSys1 SRS document [1], which calls for the cancellation of a thruster firing when the pulse width for that thruster firing is less than the minimum allowed, has been verified in ACS test procedures apt_continThrustCmdDurationLowFSWA.proc [2] and apt_continThrustCmdDurationLowITOSA.proc [3] for the Continuous Firing thruster mode and apt_ssThrustCmdPWlowFSWA.proc [4] and apt_ssThrustCmdPWlowITOSA.proc [5] for the Sun Synchronous Pulsing thruster mode. However, no test procedure, available to IV&V, attempts to verify FSW.SN.14 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.14 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.14 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.14 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.14 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.14 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing tests in question have been implemented in new or existing test procedure scripts. 2. The test procedure scripts in question have subsequently been run against the latest versions of the ProjectF FSW and ITOS and have successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script, apt_continThrustCmdDurationLowFSWA.proc, unspecified version, created January 9, 2006. 3. SubSys1 ACS test procedure STOL script, apt_continThrustCmdDurationLowITOSA.proc, unspecified version, created January 9, 2006. 4. SubSys1 ACS test procedure STOL script, apt_ssThrustCmdPWlowFSWA.proc, unspecified version, created January 9, 2006. 5. SubSys1 ACS test procedure STOL script, apt_ssThrustCmdPWlowITOSA.proc, unspecified version, created January 9, 2006.",9/4/06ProjectF - TIM - 1744,Lack of verification of requirement FSW.SN.13 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.13 in the SubSys1 SRS document [1], which calls for the termination of a thruster firing when the number of thruster pulses is not positive, has been verified in ACS test procedures apt_ssThrustCmdPulseZeroFSWA.proc [2] and apt_ssThrustCmdPulseZeroITOSA.proc [3] for the Sun Synchronous Pulsing thruster mode. However, no test procedure, available to IV&V, attempts to verify FSW.SN.13 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.13 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.13 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.13 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.13 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.13 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing tests in question have been implemented in new or existing test procedure scripts. 2. The test procedure scripts in question have subsequently been run against the latest versions of the ProjectF FSW and ITOS and have successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPulseZeroFSWA.proc, unspecified version, created January 9, 2006. 3. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdPulseZeroITOSA.proc, unspecified version, created January 9, 2006.",9/4/06ProjectF - TIM - 1743,Lack of verification of requirement FSW.SN.12 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.12 in the SubSys1 SRS document [1], which calls for the termination of a thruster firing when the stop time for that thruster is too soon, has been verified in ACS test procedures apt_continThrustCmdStopEarlyA.proc [2] and apt_ssThrustCmdStopEarlyA.proc [3] for the Continuous Firing and Sun Synchronous Pulsing thruster modes, respectively. However, no test procedure, available to IV&V, attempts to verify FSW.SN.12 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.12 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.12 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.12 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.12 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.12 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing test in question has been implemented in a new or existing test procedure script. 2. The test procedure script in question has subsequently been run against the latest version of the ProjectF FSW and has successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script file, apt_continThrustCmdStopEarlyA.proc, unspecified version, created January 9, 2006. 3. SubSys1 ACS test procedure STOL script file, apt_ssThrustCmdStopEarlyA.proc, unspecified version, created January 9, 2006.",9/4/06ProjectF - TIM - 1742,Lack of verification of requirement FSW.SN.10 in the Pulse Train Firing thruster mode,3,"Requirement FSW.SN.10 in the SubSys1 SRS document [1], which calls for the termination of a thruster firing when the stop time for that thruster has been reached, has been verified in ACS test procedures apt_thrStopStopTimeContinA.proc [2] and apt_thrStopStopTimeSSA.proc [3] for the Continuous Firing and Sun Synchronous Pulsing thruster modes, respectively. However, no test procedure, available to IV&V, attempts to verify FSW.SN.10 in the Pulse Train Firing mode. This oversight may be due to the fact that with the removal of the ground command capability in the Pulse Train Firing thruster mode, FSW.SN.10 and similar requirements appear not to apply to this thruster mode, as any thruster activity in these requirements has been characterized to be command-related with the word ""command"" interpreted to mean ""ground command."" In fact, the functionalities addressed in FSW.SN.10 and some other similar requirements apply to thruster commands or actions initiated by either ground or flight software. One of the following three fundamental solutions may be adopted to alleviate this problem: (a) Requirement FSW.SN.10 and such similar requirements may be modified to explicitly allow for both ground and spacecraft commands, (b) New requirements may be created to allow for spacecraft commands, (c) Existing requirement FSW.SN.10 and similar requirements may be liberally interpreted to cover both ground and spacecraft commands. The immediate fact remains, however, that a test to verify the functionality addressed in FSW.SN.10 in the Pulse Train Firing mode needs to be added and performed. Due to the near-completion of the ProjectF FSW testing effort, the closure of the current issue requires the project to provide IV&V with the artifacts which indicate the satisfaction of both of the following criteria: 1. The missing test in question has been implemented in a new or existing test procedure script. 2. The test procedure script in question has subsequently been run against the latest version of the ProjectF FSW and has successfully and fully verified the correct implementation of the requirement(s) in question in FSW. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script file, apt_thrStopStopTimeContinA.proc, unspecified version, created December 27, 2005. 3. SubSys1 ACS test procedure STOL script file, apt_thrStopStopTimeSSA.proc, unspecified version, created December 13, 2005.",9/4/06ProjectF - TIM - 1741,TEST_HSK_2 does not have an executing test script,3,"References: (1) ProjectF IDPU SRS Rev G FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009D FSW.HSK-2 from (1) says, ""The HSK Module shall sample the A/D converter, shall store the data to 8-bit resolution and shall set the multiplexor to the next list item"" (1) says that requirement, FSW.HSK-2, will be tested by TEST_HSK_2. TEST_HSK_2 only contains comments. The script does not have any executable lines of code. It is expected that the test would contain some varying analog signals to determine that the A/D is receiving the data and transferring it without any errors.",8/25/06ProjectF - TIM - 1740,FSW.SCI-19 not tested,3,"References: (1) ProjectF IDPU SRS Rev G FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009D (1) says that requirement, FSW.SCI-19, will be tested by TEST_SCI_19. TEST_SCI_19 can not be found in (2)",8/25/06ProjectF - TIM - 1739,FSW.FIT-3 not tested,3,"References: (1) ProjectF IDPU SRS Rev G FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009D (1) says that requirement, FSW.FIT-3, will be tested by TEST_FIT_3. TEST_FIT_3 can not be found in (2)",8/25/06ProjectF - TIM - 1738,FSW.FIT-2 not tested,3,"References: (1) ProjectF IDPU SRS Rev G FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009D (1) says that requirement, FSW.FIT-2, will be tested by TEST_FIT_2. TEST_FIT_2 can not be found in (2)",8/25/06ProjectF - TIM - 1737,FSW.EXEC-18 not tested,3,"References: (1) ProjectF IDPU SRS Rev G FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009D (1) says that requirement, FSW.EXEC-18, will be tested by TEST_EXEC_18. TEST_EXEC_18 can not be found in (2)",8/25/06ProjectF - TIM - 1736,TEST_CMD_4 bps represented as BPS,5,"Reference: (1) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009D TEST_CMD_4 in (1) has an uplink rate set at ""1800 BPS"". This rate represents the uplink rate of 1800 bit per second. This rate should be marked as ""1800 bps"" as not confuse this tested rate with 1800 Bytes per second.",8/25/06ProjectF - TIM - 1735,Lack of verification of IRU’s y-axis angular rate aspect of FSW.AC.14 in the Continuous Firing and Pulse Train Firing thruster modes,3,"The ACS test procedure apt_thrStopHighYRateA.proc [1] partially verifies requirement FSW.AC.14 in the SubSys1 SRS document [2], which calls for the termination of thrusters firing when the nutation angle goes out of range, by considering one aspect of the nutation angle. This is the IRU's y-axis angular rate output. However, this verification is only performed for the Sun Synchronous Pulsing thruster mode. No test procedure, available to IV&V, attempts to verify this aspect of FSW.AC.14 for the Continuous Firing and Pulse Train Firing modes. References: 1. SubSys1 ACS test procedure STOL script, apt_thrStopHighYRateA.proc, unspecified version, created December 27, 2005. 2. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006.",8/23/06ProjectF - TIM - 1734,Lack of verification of IRU’s x-axis angular rate aspect of FSW.AC.14 in the Continuous Firing and Pulse Train Firing thruster modes,3,"The ACS test procedure apt_thrStopHighXRateA.proc [1] partially verifies requirement FSW.AC.14 in the SubSys1 SRS document [2], which calls for the termination of thrusters firing when the nutation angle goes out of range, by considering one aspect of the nutation angle. This is the IRU's x-axis angular rate output. However, this verification is only performed for the Sun Synchronous Pulsing thruster mode. No test procedure, available to IV&V, attempts to verify this aspect of FSW.AC.14 for the Continuous Firing and Pulse Train Firing modes. References: 1. SubSys1 ACS test procedure STOL script, apt_thrStopHighXRateA.proc, unspecified version, created December 27, 2005. 2. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006.",8/23/06ProjectF - TIM - 1733,Lack of verification of FSW.AC.11 in the Pulse Train Firing thruster mode,3,"Requirement FSW.AC.11 in the SubSys1 SRS document [1], which calls for the termination of thrusters firing in the presence of an IRU failure (as indicated in that IRU's BIT status), has been verified in ACS test procedures apt_thrStopBITfailContinA.proc [2] and apt_thrStopBITfailSSA.proc [3] for the Continuous Firing and Sun Synchronous Pulsing thruster modes, respectively. However, no test procedure, available to IV&V, attempts to verify FSW.AC.11 in the Pulse Train Firing mode. References: 1. “ProjectF Flight Software Requirements Specification,” ProjectF – FSW – SRS, Release 3.1, June 14, 2006. 2. SubSys1 ACS test procedure STOL script, apt_thrStopBITfailContinA.proc, unspecified version, created December 27, 2005. 3. SubSys1 ACS test procedure STOL script, apt_thrStopBITfailSSA.proc, unspecified version, created January 10, 2006.",8/23/06ProjectF - TIM - 1732,FSW.LM.06: proc only partially tests requirement,4,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fslm_trip.proc,v 1.11 2006/03/06 21:05:22 rhanna Exp [1] claims [2] verifies FSW.LM.06. FSW.LM.06 requires, among other things, that FSW initiate an RTS. There is no test in [2] for specifically determining whether an RTS has been initiated. Instead, [2] attempts to use a limits-constraint trip counter as a proxy for determining whether an RTS has been initiated. The test on the trip counter is not equivalent to a determination of whether an RTS was intitiated. Recommendation: modify [2] to provide for testing whether an RTS has been initiated, and formally retest FSW.LM.06.",8/4/06ProjectF - TIM - 1731,FSW.LM.08: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fslm_trip.proc,v 1.11 2006/03/06 21:05:22 rhanna Exp [1] claims [2] verifies FSW.LM.08. FSW.LM.08 requires, among other things, that specific table-defined actions be taken upon a constraint violation. Although [2] tests various trip flags (see, for example, Lines 362 and 372, among many), there is no specific determination in [2] of whether the subsequent specific actions actions required by FSW.LM.08 are initiated/taken. Recommendation: modify [2] to provide verificatin of whether specific actions initiated/taken upon constraint violation and formally retest FSW.LM.08.",8/4/06ProjectF - TIM - 1730,"FSW.LM.09: no ""operator inspection"" detail is identified",3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Test Report. 28 July 2006. [1] states that the verification method for FSW.LM.09 is ""Operator Inspection"". FSW.LM.09 requires, among other things, FSW to respond to constraint violations within 250 msec of receipt of a telemetry packet containing the monitored value. ""Operator inspection"", as such, is an insufficient description of a method for verifying a requirement. For a verification method to be adequate, the method must prescribe the items to observed, and what the acceptable range of values for those items is. No such detail is provided in [1] or [2]. Recommendation: provide a detailed description of the items to be observed and what the acceptable range of values of those items is.",8/4/06ProjectF - TIM - 1729,FSW.DS.05.02: Proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. 28 July 2006. Release 1.0 [3] fsds_stats.proc,v 1.5 2006/03/16 16:52:45 rhanna Exp [1]and [2] claim [3] verifies FSW.DS.05.02: Default quota allocation for Events is 1 MB. [3] does not verify FSW.DS.05.02. [2] does not address the issue substantially. Modify [3] to verify FSW.DS.05.02 and test the requirement.",8/4/06ProjectF - TIM - 1728,FSW.DS.05.01: Proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. 28 July 2006. Release 1.0 [3] fsds_stats.proc,v 1.5 2006/03/16 16:52:45 rhanna Exp [1] and [2] claim [3] verifies FSW.DS.05.01: Default quota allocation for Stored Housekeeping is 15 MB. [3] does not verify FSW.DS.05.01. [2] does not address the issue. Modify [3] to verify FSW.DS.05.01 and test the requirement.",8/4/06ProjectF - TIM - 1727,FSW.SC.02: proc uses aperiodic counters for a clock,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fssc_scs.proc,v 1.9 2006/07/24 21:00:00 rhanna [1] claims that [2] verifies FSW.SC.02. FSW.SC.02 requires, among other things, that absolute time commands have a time resolution of one second. Showing that FSW performs as prescribed requires the test to sample a clock with a resolution of at least 2 Hz to avoid sample aliasing. [2] does not sample a clock. Instead, [2] uses aperiodic counters, which cannot be equivalent to any clock. Recommendation: modify [2] to use a clock to verify FSW.SC.02 and formally retest the requirement",8/4/06ProjectF - TIM - 1726,FSW.SC.03: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fssc_scs.proc,v 1.9 2006/07/24 21:00:00 rhanna Exp [1] claims that [2] verifies FSW.SC.03. FSW.SC.03 requires, among other things, that commands be issued when probe clock seconds are equal to the seconds value in the individual commands' absolute time field. Showing that FSW performs as prescribed requires the test to sample the probe clock. [2] does not sample the probe clock. Instead, [2] uses counters which are not equivalent to any clock. Recommendation: modify [2] to use a clock to verify FSW.SC.03 and formally retest the requirement",8/4/06ProjectF - TIM - 1725,FSW.SC.05: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fssc_rts.proc,v 1.12 2005/10/06 21:53:36 rhanna Exp [1] claims that [2] verifies FSW.SC.05. FSW.SC.05 requires, among other things, that the resolution for relative time-tagged commands be one second. Showing that FSW performs as prescribed requires the test to use a clock that is (a) independent of the item under test, and (b) has a resolution of at least 2 Hz to avoid sample-aliasing. No clock is used in [2] to verify FSW.SC.06. Instead, [2] uses a counter which is not equivalent to a clock. Recommendation: modify [2] to use a clock to verify FSW.SC.05 and formally retest the requirement",8/4/06ProjectF - TIM - 1724,FSW.SC.06: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fssc_rts.proc,v 1.12 2005/10/06 21:53:36 rhanna Exp [1] claims that [2] verifies FSW.SC.06. FSW.SC.06 requires, among other things, that the t_0 of a (stored) command with a relative execution time be the completion of execution of the previous command in the sequence. Showing that FSW performs as prescribed requires using a clock that is independent of the item under test. No clock is used in [2] to verify FSW.SC.06. Instead, [2] uses a counter which is not equivalent to a clock. Recommendation: modify [2] to use a clock to verify FSW.SC.06 and formally retest the requirement",8/4/06ProjectF - TIM - 1723,FSW.SC.07: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fssc_rts.proc,v 1.12 2005/10/06 21:53:36 rhanna Exp [1] claims that [2] verifies FSW.SC.07. FSW.SC.07 requires, among other things, that a (stored) command with a relative time tag of zero be issued in the same second as the previous command. Showing that two commands are issued in the same second requires using a clock that is (a) independent of the item under test, and (b) can measure at 2 Hz or higher. No clock is used in [2] to verify FSW.SC.07. Instead, [2] uses a counter which is not equivalent to a clock. Recommendation: modify [2] to use a clock to verify FSW.SC.07 and formally retest the requirement.",8/4/06ProjectF - TIM - 1722,"FSW.SC.10: requirement is not verifiable as written (needs an interval definition of ""concurrent"")",3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fssc_stress.proc,v 1.5 2005/09/02 19:05:31 rrapp Exp [3] ProjectF FSW SRS v3.1 As formulated in [3], FSW.SC.10 requires selected ground commands and SCSs to be concurrently executable. ""Concurrently"" means ""at the same time"". Such concurrency is not literally achievable on the ProjectF Processor, which can execute only a single instruction at a given time. In order to be satisfiable and verifiable, FSW.CS.10 therefore has to be formulated in terms of a time interval. The unverifiability of FSW.SC.10 contributes to the inadequacy of [2] as a means of verifying FSW.SC.10 (see TIM 1721 for further details). Recommendation: modify FSW.SC.10 to define ""concurrency"" in terms of a time interval. Formally retest the requirement.",8/4/06ProjectF - TIM - 1721,FSW.SC.10: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fssc_stress.proc,v 1.5 2005/09/02 19:05:31 rrapp Exp [1] claims that [2] verifies FSW.SC.10. FSW.SC.10 requires selected ground commands to be executable concurrently with SCSs. Showing this concurrency requires that the time intervals during which the ground commands, and the SCSs, are executing, are the same time interval. [2] provides no such verification, instead relying on status counters which are not equivalent to time-interval measurements. Recommendation: modify [2] to use a clock that is independent of the item under test to verify that the time intervals during which the ground commands, and the SCSs, are executing, are the same time interval. Formally retest FSW.SC.10.",8/4/06ProjectF - TIM - 1720,FSW.SC.18: insufficient verification detail provided,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006 [2] ProjectF FSW Test Report. Release 1.0. 28 July 2006. [1] states that the verification method for FSW.SC.18 is ""Operator Inspection"". The word ""Operator Inspection"", as such, is insufficient as a description of a test procedure. To be adequate, a test procedure must state what specific observables are to be analyzed, and what the acceptable range of values for those items is. Neither [1] nor [2] provides any of this required detail. Recommendation: provide test procedure detail that is sufficient to allow an analyst to determine whether the procedure could verify the requiremnt.",8/4/06ProjectF - TIM - 1719,FSW.SC.20: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fssc_loaddump.proc,v 1.13 2006/03/06 21:05:22 rhanna Exp [1] claims that [2] verifies FSW.SC.20. FSW.SC.20 requires, among other things, verification of the maintenance of status information of stored commands, including sequence status, running/waiting/completed, total number of commands executed from this sequence, and current line number within the sequence. [2] contains no specific test for any of these status items. Instead, [2] regards the requirement as abstract memory reads and writes of arbitrary abstract data. Recommendation: modify [2] to include specific tests for the individual status information identified in the requirement, as status information, not merely as abstract data patterns. Formally retest FSW.SC.20.",8/4/06ProjectF - TIM - 1718,FSW.DS.02: proc does not test requirement,4,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fsds_xfrfrm.proc,v 1.1 2006/01/26 19:34:53 rrapp [3] ProjectF FSW Test Report, Release 1.0, 28 July 2006 [1] claims [2] verifies FSW.DS.02: The assignment of CCSDS telemetry packets to Virtural Recorders shall be defined by an onboard system table that can be modifiable in flight via a MM Table Load operation. FSW.DS.02 requires DS Flight Software assign Virtual Recorders for CSSDS telemetry packets by a Table that can be modified in flight under nominal FSW behaviors. [2] does not expilcitly and specifically test that modifiable assignment. Recommendation: Modify [2] to specifically and explicitly assign the Virtual Recorder as specified in the requirement. Retest the requirement with at least the formality and accountability as the orginal test.",8/3/06ProjectF - TIM - 1717,FSW.DS.01.02: proc does not specifically and explicitly assign Virtual Recorder,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM. [2] fsds_xfrfrm.proc,v 1.1 2006/01/26 19:34:53 rrapp [3] ProjectF FSW Test Report, Release 1.0, 28 July 2006 [1] claims [2] verifies FSW.DS.01.02: The DS Flight Software shall support Vitual Recorder 2 (VR2) for Spacecraft Events. FSW.DS.01.02 requires the DS Flight Software to assign Virtual Recorder 2 for Spacecraft Events. [2] does not explicitly and specifically test that assignment for verified Spacecraft Event data telemetry. [2] tests only for one possible exception to the FSW state implied by [1]. The absence of an exception to a FSW state implied by [1] does not verify that the FSW is actually in the state implied by [1]. [3] does not address the issue. Modify [2] to specifically and explicitly assign the Virtual Recorder to verified spacecraft Event data, and formally retest FSW.DS.01.02",8/3/06ProjectF - TIM - 1716,FSW.DS.01.01: proc does not specifically and explicitly assign Virtual Recorder,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM. [2] fsds_xfrfrm.proc,v 1.1 2006/01/26 19:34:53 rrapp [3] ProjectF FSW Test Report, Release 1.0, 28 July 2006 [1] claims [2] verifies FSW.DS.01.01: The DS Flight Software shall support Virtual Recorder 1 (VR1) for Stored Probe Housekeeping Telemetry. [2] does not expilcitly and specifically test that assignment. [3] does not address the issue substantially. Modify [2] to specifically and explicitly assign the Virtual Recorder, and formally retest FSW.DS.01.01",8/3/06ProjectF - TIM - 1715,FSW.DS.11: proc filename is ambiguous,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM [2] ProjectF FSW Test Report 28 July 2006, Release 1.0 [1] claims FSW.DS.11: The DS Flight Software shall maintain real time telemetry for ALL data points listed in ProjectF-FWS-SUG, is verified by ""fsds_*.proc"". Several procs files delivered to IV&V whose filenames satisfy this wild carded specification do not verify FSW.DS.11. It is therefore not possible on the basis of [1] to identify which files are intended to verify the requirement. [2] does not address the issue substantially. To ensure verification of ALL data points listed in the SUG, each of these data points should be mapped to specific test procedures. This mapping does not exist, thus verification of this requirement is not possible. In the ""STOL"" column of [1] for entry FSW.DS.11, replace ""fsds_*.proc"" with a non-wildcarded proc filename(s).",8/3/06ProjectF - TIM - 1714,FSW.DS.13: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM. [2] fsds_ds.proc,v 1.14 RRapp May 19, 2006 -Update per IV&V Comments of May 12 of (probable artifact source) 1.14 2006/03/16 16:52:45 rhanna Exp [1] claims that [2] verifies FSW.DS.13:""The DS subsystem FSW shall report the status of Bulk Memory storage activities in normal housekeeping telemetry. This status includes the following information for each memory partition: The total number of bytes in the partition; the number of unused bytes in the partition; the current mode of the partition; overwrite enable status; virtual recorder overflow status.”. [2] contains no specific Bulk Memory Storage Status report to satisfy FSW.DS.13. Modify [2] to include a specific Bulk Memory Storage Status report referenced as FSW.DS.13, and formally retest the requirement.",8/3/06ProjectF - TIM - 1713,FSW.DS.13: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. 10:49 AM [2] ProjectF FSW Test Report 28 July 2006, Release 1.0 [3] fsds_ds.proc RRapp May 19, 2006 -Update per IV&V Comments of May 12 of (probable artifact source) fsds_ds.proc 1.14 2006/03/16 16:52:45 rhanna Exp [4] fsds_stat.proc 1.5 2006/03/16 16:52:45 rhanna Exp [1] states that the verification method for FSW.DS.13: :""The DS subsystem FSW shall report the status of Bulk Memory storage activities in normal housekeeping telemetry. This status includes the following information for each memory partition: The total number of bytes in the partition; the number of unused bytes in the partition; the current mode of the partition; overwrite enable status; virtual recorder overflow status.” is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns Bulk Memory Storage Status under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references {[1], [2], [3], [4]} provide this required detail. A software-based test procedure demonstrating FSW, compiled and running on hardware, that queries Bulk Memory Storage Status is required. Use a software-based test procedure analogous to fsds_ds [3] referenced in [1] & [2] or fsds_stat [4] referenced in [2] (only) to interrogate and query the specified status values and states directly. Retest the requirement with at least the formality and accountability as the orginal test.",8/3/06ProjectF - TIM - 1712,FSW.DS.18: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.DS.18: The DS FSW shall store data into Bulk Memory as fixed length Transfer Frames, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the length of Transfer Frame stored into Bulk Memory under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure demonstrating FSW, compiled and running on hardware, that stores a Transfer Frame into Bulk Memory with the length specified is required. Use a software-based test procedure analogous to fsds_ds referenced in [1] & [2]. Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1711,FSW.SC.24: proc only partially tests requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fssc_rts.proc,v 1.12 2005/10/06 21:53:36 rhanna Exp [1] claims that [2] verifies FSW.SC.24. FSW.SC.24 requires, among other things, that RTS commands be issued within one second of their programmed execution time, assuming no collisions. To verify the timing requirement in FSW.SC.24, a clock that is independent of the item under test must be used. [2] does not even use a clock, but instead uses an event counter which is not equivalent to a clock (see [2], Lines 219-226). Recommendation: modify the verification of FSW.SC.24 to use a clock that is independent of the item under test, and formally retest the requirement.",8/3/06ProjectF - TIM - 1710,FSW.SC.25: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fssc_loaddump.proc,v 1.13 2006/03/06 21:05:22 rhanna Exp [1] claims [2] verifies FSW.SC.25. FSW.SC.25 requires, among other things, all ATS commands to be issued with one second of their programmed execution time. [2] does not verify FSW.SC.25. Recommendation: modify [2] to verify FSW.SC.25 and test the requirement.",8/3/06ProjectF - TIM - 1709,FSW.DS.19: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. 28 July 2006. Release 1.0 [3] fsds_ds.proc RRapp May 19, 2006 -Updated per IV&V Comments of May 12. [1], [2], and [3] claim that [3] verifies FSW.DS.19: The DS Flight Software shall store 3 copies of each Transfer Frame into Bulk Memory. [3] contains no specific test for FSW.DS.19. [2] does not address the issue substantially. Modify [3] to include a specific test for FSW.DS.19, and formally retest the requirement.",8/3/06ProjectF - TIM - 1708,FSW.DS.19: Source inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.DS.19: The DS FSW shall store 3 copies of each Transfer Frame into Bulk Memory, is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns the 3 copies of each Transfer Frame to Bulk Memory under nominal FSW behaviors. A software-based test procedure that demonstrates that FSW, compiled and running on hardware, move 3 correct copies of a validated Transfer Frame into Bulk Memory is required. Use a software-based test procedure analogous to fsds_ds referenced in [1] & [2]. Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1707,FSW.SC.27: proc filename is ambiguous,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [1] claims FSW.SC.27 is verified by ""fssc_*.proc"". FSW.SC.27 state that the SC Flight Software shall accept and process all commands listed in ProjectF-FS-SUG. Several procs whose filenames satisfy this wilcarded specification do not verify FSW.SC.27. It is therefore not possible on the basis of [1] to identify which files are intended to verify the requirement. Recommendation: in the ""STOL"" column of [1] for entry FSW.SC.27, replace ""fssc_*.proc"" with a non-wildcarded proc filename.",8/3/06ProjectF - TIM - 1706,FSW.SC.28: proc filename is ambiguous,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [1] claims FSW.SC.28 is verified by ""fssc_*.proc"". FSW.SC.28 states that the SC Flight Software shall reject any SC command that contains an invalid Function Code or invalid argument. Several procs whose filenames satisify this wilcarded specification do not verify FSW.SC.28. It is therefore not possible on the basis of [1] to identify which files are intended to verify the requirement. Recommendation: in the ""STOL"" column of [1] for entry FSW.SC.28, replace ""fssc_*.proc"" with a non-wildcarded proc filename.",8/3/06ProjectF - TIM - 1705,FSW.SC.29: proc filename in test matrix is ambiguous,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [1] claims FSW.SC.29 is verified by ""fssc_*.proc"". FSW.SC.29 state that the SC Flight Software shall maintain real time telemetry for all data points listed in ProjectF-FSW-SUG. Several procs whose filenames satisfy this wilcarded specification do not verify FSW.SC.29. It is therefore not possible on the basis of [1] to identify which files are intended to verify the requirement. Recommendation: in the ""STOL"" column of [1] for entry FSW.SC.29, replace ""fssc_*.proc"" with a non-wildcarded proc filename.",8/3/06ProjectF - TIM - 1704,FSW.BA2.14: proc sampling rate is an order of magnitude too small to verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fsbu_thrustdog.proc,v 1.1 2006/03/22 13:45:27 rhanna Exp [1] claims that [2] verifies FSW.BA2.14. FSW.BA2.14 requires, among other things, that the thruster watchdog timer be serviced at 1 Hz. [2] samples at 0.25 Hz. To adequately verify FSW.BA2.14 without aliasing, a test sampling rate of 2 Hz is required. Recommendation: modify [2] to sample at 2 Hz, and formally retest the requirement.",8/3/06ProjectF - TIM - 1703,FSW.MM.15: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fsmm_memops.proc 1.10 2006/04/13 12:03:42 rhanna Exp [3] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] claims that [2] verifies FSW.MM.15: The format of Table Loads commands shall confrom to (the) ITOS User's Manual. [2] makes no such claim and contains no specific test for FSW.MM.15. [3] does not address the issue substantially. Modify [2] to include a specific test for FSW.MM.15, and formally retest the requirement.",8/3/06ProjectF - TIM - 1702,FSW.MM.13: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM. [2] fsmm_memops.proc,v 1.10 2006/04/13 12:03:42 rhanna Exp [1] claims that [2] verifies FSW.MM.13:The MM Flight Software shall allow the entire contents, or a portion, of a table to be dumped. [2] contains no specific partial Table Dump test for FSW.MM.13. Modify [2] to include a specific partial Table Dump for FSW.MM.13, and formally retest the requirement.",8/3/06ProjectF - TIM - 1701,FSW.MM.11: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM. [2] fsmm_memops.proc 1.10 2006/04/13 12:03:42 rhanna Exp [1] claims that [2] verifies FSW.MM.11: The MM FSW shall provide Table Dump capability in which a software table is read from memory and downlinked to the ground.. [2] contains no specific Table Dump downlinked to the ground test for FSW.MM.11. Modify [2] to include a specific Table Dump downlinked to the ground for FSW.MM.11, and formally retest the requirement.",8/3/06ProjectF - TIM - 1700,FSW.MM.01: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM. [2] fsmm_memops.proc 1.10 2006/04/13 12:03:42 rhanna Exp [1] claims that [2] verifies FSW.MM.01: The MM FSW shall provide Memory dump capability, in which data is read from the C&DH processor memory or I/O space and downlinked to the ground. [2] contains no specific Memory Dump downlinked to the ground test for FSW.MM.01. Modify [2] to include a specific test Memory Dump downlinked to the ground for FSW.MM.01, and formally retest the requirement.",8/3/06ProjectF - TIM - 1699,FSW.MM.01: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. 10:49 AM. [2] fsmm_memops.proc 1.10 2006/04/13 12:03:42 rhanna Exp [1] claims that [2] verifies FSW.MM.01: The MM FSW shall provide Memory dump capability, in which data is read from the C&DH processor memory or I/O space and downlinked to the ground. [2] contains no specific Memory Dump read from I/O space test for FSW.MM.01. Modify [2] to include a specific test Memory Dump read from I/O space for FSW.MM.01, and formally retest the requirement.",8/3/06ProjectF - TIM - 1698,FSW.MM.05: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fsmm_memops.proc,v 1.10 2006/04/13 12:03:42 rhanna Exp [3] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] claims that [2] verifies FSW.MM.05: The format of the Memory Load commands shall conform to (the) ITOS User's Manual. [2] contains no specific test for FSW.MM.05. [3] does not address the issue substantially. Modify [2] to include a specific test for FSW.MM.05, and formally retest the requirement.",8/3/06ProjectF - TIM - 1697,FSW.MM.04: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fsmm_memops.proc 1.10 2006/04/13 12:03:42 rhanna Exp [3] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] claims that [2] verifies FSW.MM.04: The MM flight software shall provide Memory Load capability, in which data uplinked from the ground is written to the C&DH processor memory or I/O space. [2] contains no specific test for FSW.MM.04. [3] does not address the issue substantially. Modify [2] to include a specific test for FSW.MM.04, and formally retest the requirement. Supplemental analysis: The Requirment as stated requires a specific test to load memory from the ground [1]. As implemented in [2], the testing for FSW.MM.04 is entangled with the testing for FSW.MM.13, a Table Dump and partial Table Dump Requirement. As implemented any deficiencies in the testing of FSW.MM.13 are inherited by the testing of FSW.MM.04. A comprehensive and agressive test of FSW.MM.04 would first establish a set of trusted external reference sources. Such sources would span a wide range of data set lengths; such sources would have well-prescribed data values. The data sets would be loaded throughout addressable memory. A single 2-byte memory load does not exercise the FSW memory load capability comprehensively. After each load attempt of a trusted data set, it would be dumped. The integrity of the data set contents would be verified with respect to the trusted data set.",8/3/06ProjectF - TIM - 1696,FSW.MM.03: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fsmm_memops.proc 1.10 2006/04/13 12:03:42 rhanna Exp [3] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] claims that [2] verifies FSW.MM.03: All dump packets that contain less than 200 bytes of data shall have the remaining space filled with zeros. [2] contains no specific test for FSW.MM.03. [3] does not address the issue substantially. Modify [2] to include a specific test for FSW.MM.03, and formally retest the requirement. Supplemental analysis: The Requirment as stated requires a specific test to dump packets with a specific structure and specific content. As implemented in [2] lines 132 through 160, memory, not specific packet structures, is dumped. No verification of the contents of the entity dumped is attempted. A comprehensive test of FSW.MM.03 would first construct sets of trusted reference memory dump packets. Such packets would span a range of data set lengths; such packets would have the prescribed data value to meet FSW.MM.03 when it applies. The data packets would be loaded into memory. After the load of the data packets, they would be dumped. The integrity of the contents of each data packet would be verified with respect to its trusted data packet counterpart against FSW.MM.03.",8/3/06ProjectF - TIM - 1695,FSW.MM.02: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fsmm_memops.proc 1.10 2006/04/13 12:03:42 rhanna Exp [3] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] claims that [2] verifies FSW.MM.02: The format of Memory Dump commands shall conform to the ITOS User's Manual. [2] contains no specific test for FSW.MM.02. Modify [2] to include a specific test for FSW.MM.02, and formally retest the requirement. Supplemental analysis: The Requirment as stated requires specific tests to verify all ITOS Memory Dump Commands that apply to the FWSMemory Manager. As implemented in [1] lines 132 through 160, no comprehensive identification of all applicable Memory Dump Commands in the FSW with reference to ProjectF-ITOS-UM is made. Consequently no statement on the completeness of the verification of the format of commands is possible. A comprehensive test of FSW.MM.03 would first construct the set of applicible Memory Dump Commands to be exercised. A trusted set of memory packets may require construction and loading into memory, in fact, to subsequently verify the format of certain commands. The format of each Memory Dump Command would be tested. The consequences of ill-formated Memory Dump Commands in each instant needs to be tested to verify FSW exception handling.",8/3/06ProjectF - TIM - 1694,FSW.CS.16: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fscs_cmd.proc,v 1.9 2006/03/16 16:52:45 rhanna Exp [1] claims that [2] verifies FSW.CS.16. FSW.CS.16 states that upon a failure of the Bulk Memory scrub, the failed memory address shall be posted in an event. [2] contains no test for FSW.CS.16. Recommentation: modify [2] to include a specific test for FSW.CS.16, and formally retest the requirement.",8/3/06ProjectF - TIM - 1693,FSW.CS.01.02: proc does not verify requirement,4,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fscs_cmd.proc,v 1.9 2006/03/16 16:52:45 rhanna Exp [1] claims that [2] verifies FSW.CS.01.02. FSW.CS.01.02 requires CS to perform validation on Table RAM. [2] contains no specific test for FSW.CS.01.02. Recommentation: modify [2] to include a specific test for FSW.CS.01.02, and formally retest the requirement.",8/3/06ProjectF - TIM - 1692,FSW.CS.07.02: proc does not test requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] proc fscs_func2. No date, version, or author is identified in the proc. Provided to ProjectF IV&V in June 2006. [1] claims [2] verifies FSW.CS.07.02. FSW.CS.07.02 requires CS Flight Software shall initiate corrective action upon detection of a memory checksum failure. [2] does not test in any way for this function. Recommendation: modify [2] to test for the indicated function, and formally retest FSW.CS.07.02. Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1691,FSW.CS.07.01: proc does not specifically and explicitly test and report that the requirement was not verfied,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] proc fscs_func2. No date, version, or author is identified in the proc. Provided to ProjectF IV&V in June 2006. [1] claims [2] verifies FSW.CS.07.01. FSW.CS.07.01 requires CS Flight Software to indicate in telemetry unique status for the occurrence of each memory checksum verification failure. [2] does not explicitly and specifically test whether, and specifically and explicitly record that, the CS Flight Software has failed to perform this function. Recommendation: modify [2] to specifically and explicitly test whether, and specifically and explcitly record that, CS Flight Software failed to perform the indicated function, and formally retest FSW.CS.07.01. Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1690,FSW.MM.18: Source inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.MM.18: The MM FSW shall provide a method to allow the new table data to be validated by the appropriate software subsystem to ensure the new table is acceptable, is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns the validation of each subsystem's tables loaded into memory under nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on hardware, reloading and validation of each subsystem's tables as specified is required. Use a software-based test procedure analogous to fsmm_tblload or fsmm_tblperm referenced in [1] & [2]. Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1689,FSW.MM.10: Source inspection is inadequate to verify requirement,3,"[Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.MM.10: Table initialization upon restart shall be defined in a FSW table, is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns the copy of tables into memory upon restart under nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on hardware, reloading the tables as specified is required. Use a software-based test procedure analogous to fsmm_memops or fshs_cold referenced in [1] & [2]. Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1688,FSW.CS.01.03: proc does not specifically and explicitly test and record failure to validate EEPROM,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] proc fscs_func2. No date, version, or author is identified in the proc. Provided to ProjectF IV&V in June 2006. [1] claims [2] verifies FSW.CS.01.03. FSW.CS.01.03 requires CS Flight Software to validate EEPROM. [2] does not explicitly and specifically test whether, and specifically and explicitly record that, the CS Flight Software has failed to perform validation of EEPROM, if the CS Flight Software failed to perform that validation. Recommendation: modify [2] to specifically and explicitly test whether, and specifically and explicitly record that, CS Flight Software failed to perform validation of EEPROM, and formally retest FSW.CS.01.03,Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1687,FSW.CS.01.01: proc does not specifically record failure of CS to validate Instruction RAM,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] proc fscs_func2. No date, version, or author is identified in the proc. Provided to ProjectF IV&V in June 2006. [1] claims [2] verifies FSW.CS.01.01. FSW.CS.01.01 requires CS Flight Software to validate Instruction RAM. [2] does not explicitly and specifically record that the CS Flight Software has failed to perform validation of Instruction RAM. Recommendation: modify [2] to specifically and explicitly record that, CS Flight Software failed to perform validation of Instruction RAM, and formally retest FSW.CS.01.01. Retest the requirement with at least the formality and accountability as the original test.",8/3/06ProjectF - TIM - 1686,FSW.BA2.07: proc tests for wrong failure condition,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fsbu_tlm.proc,v 1.1 2006/04/15 23:20:42 rhanna Exp [1] claims [2] verifies FSW.BA2.07. Although [2] in fact updates the failure counter for FSW.BA2.07 (rbu07_failed, see Line 140 of [2]), the ""test passed"" test in the reporting section [2] tests rbu16_failed (see Lines 155-165 of [2]). Thus, [2] fails to verify FSW.BA2.07. In addition, rbu16_failed is used at Lines 155 and 161 in [2], but is not declared or set in [2]. In addition, [2] redundantly tests rbu16_failed, back-to-back, at Lines 155-165. Recommendation: change ""rbu16_failed"" to ""rbu07_failed"" at Line 155 of [2]. Delete Lines 160-165 of [2]. Formally re-verify FSW.BA2.07.",7/31/06ProjectF - TIM - 1685,FSW.TP.26: Operator inspection is inadequate to verify requirement,3,"[Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [3] fstp_cmd.proc 1.7 2006/01/18 13:57:38 rrapp Exp [1] and [2] states that the verification method for FSW.TP.26: The FSW shall provide 8 ground uploadable tables for selecting sequence based Telemetry Packet Filter rates, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the Telemetry Packet Filter tables used for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the Telemetry Packet filter tables stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1684,FSW.TP.17: Operator inspection is inadequate to verify requirement,3,"[Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [3] fstp_cmd.proc 1.7 2006/01/18 13:57:38 rrapp Exp [1] states that the verification method for FSW.TP.17: The TP FSW shall be able to selectively discard incoming telemetry data according to a filtering scheme controlable by ground commands (tables); this filtering scheme shall control how often a particular telemetry packet is downlinked, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the telemetry filtering for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry filtering is required. [1] also references [3] as the test procedure to verify [1]. [3] itself makes no such verification claim and in fact does not test FSW.TP.17. [2] does not address the issue. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1683,FSW.TP.16: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.16: The TP FSW shall route CCSDS transfer frames to the SubSys1 COMM Card, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the Transfer Frames to the SubSys1 COMM Card for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the Transfer Frame and SubSys1 COMM Card as stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1682,FSW.TP.06.05: Analysis is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.06.05: The TP FSW shall utilize Virtual Channel 6 with a priority 4 (0=highest, 7=lowest) for Stored Spacecraft Events, is ""Analysis"". Although it provides insight, source inspection analysis is inadequate for verifying this requirement, which concerns Virtual Channel 6 functionality, across all nominal FSW behaviors. The phrase 'Analysis', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that shows FSW, compiled and running on hardware, will employ Virtual Channel 6 as specified is required. Use a software-based test procedure analogous to fscp_cop1 referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1681,FSW.TP.06.04: Analysis is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.06.04: The TP FSW shall utilize Virtual Channel 3 with a priority 3 (0=highest, 7=lowest) for Stored Instrument Science Data and Ancillary Telemetry, is ""Analysis"". Although it provides insight, inspection analysis is inadequate for verifying this requirement, which concerns Virtual Channel 3 functionality, across all nominal FSW behaviors. The phrase 'Analysis', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that shows FSW, compiled and running on hardware, will employ Virtual Channel 3 as specified is required. Use a software-based test procedure analogous to fscp_cop1 referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1680,FSW.TP.06.03: Analysis is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.06.03: The TP FSW shall utilize Virtual Channel 2 with a priority 2 (0=highest, 7=lowest) for real-time Instrument Science Data and Ancillary Telemetry, is ""Analysis"". Although it provides insight, inspection analysis is inadequate for verifying this requirement, which concerns Virtual Channel 2 functionality, across all nominal FSW behaviors. The phrase 'Analysis', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that shows FSW, compiled and running on hardware, will employ Virtual Channel 2 as specified is required. Use a software-based test procedure analogous to fscp_cop1 referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1679,FSW.TP.06.02: Analysis is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.06.02: The TP FSW shall utilize Virtual Channel 1 with a priority 1 (0=highest, 7=lowest) for stored Probe Housekeeping Telemetry and Dump Data, is ""Analysis"". Although it provides insight, inspection analysis is inadequate for verifying this requirement, which concerns Virtual Channel 1 functionality, across all nominal FSW behaviors. The phrase 'Analysis', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that shows FSW, compiled and running on hardware, will employ Virtual Channel 1 as specified is required. Use a software-based test procedure analogous to fscp_cop1 referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1678,FSW.TP.06.01: Analysis is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.06.01: The TP FSW shall utilize Virtual Channel 0 with a priority 0 (0=highest, 7=lowest) for real time Probe Housekeeping Telemetry, Dump Data, and Events, is ""Analysis"". Although it provides insight, inspection analysis is inadequate for verifying this requirement, which concerns Virtual Channel 0 functionality, across all nominal FSW behaviors. The phrase 'Analysis', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure, compiled and running on hardware, that shows FSW will employ Virtual Channel 0 as specified is required. Use a software-based test procedure analogous to fscp_cop1 referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/31/06ProjectF - TIM - 1676,"MRD PB.EPS.1, -.2, -.3: proc does not check to determine whether IRU Assembly Power Slow Trip is enabled",3,"Ref. [1] airupoweron.proc,v 1.3 2006/03/02 22:56:58 rhanna Exp If IRU Assembly Power Slow Trip is not equal to ""ENA"" in FSW/BA at Line 22 of [1], the tests in [1] cannot be meaningfully executed, and therefore, [1] cannot verify PB.EPS.1, -.2, and -.3 Recommendation: immediately following Line 22 of [1], insert a test to determine whether IRU Assembly Power Slow Trip is enabled. If slow trip is not enabled, log that fact and return to the caller of [1] (nominally, cpt07.proc).",7/28/06ProjectF - TIM - 1675,"MRD PB.EPS.1, -.2, -.3: pressure transducer power slow trip mode not checked",3,"Ref. [1] xdcrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp If onoff equal ""ON"" and Pressure Transducer Power Slow Trip is not equal to ""ENA"" in FSW/BA at Line 51 of [1], the tests in [1] cannot be meaningfully executed, and therefore, [1] cannot verify PB.EPS.1, -.2, and -.3 Recommendation: immediately following Line 51 of [1], insert a test to determine whether Pressure Transducer Power Slow Trip is enabled. If slow trip is not enabled, log that fact and return to the caller of [1] (nominally, cpt07.proc).",7/28/06ProjectF - TIM - 1674,FSW.TC.04: source inspection is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.TC.05 is ""Source Inspection"". Although it provides insight, source inspection is insufficient for verifying this requirement, which concerns a relationship between spacecraft event-times and Spacecraft Time across all nominal FSW behaviors. A software-based test procedure (with a sampling frequency of at least 2000 Hz) that shows FSW, compiled and running on actual hardware, satisfies FSW.TC.05 is required. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Formally retest the requirement.",7/28/06ProjectF - TIM - 1673,FSW.AC-19 Vague required limits for measured aspect angle,3,"Reference: (1) ProjectF SubSys1 FSW SRS Rev 3.1 Thruster Firing Shut Down – Bad Aspect Angle (FSW.AC.19) states, ""The SN Flight Software shall have the capability to stop commanding thrusters and generate appropriate telemetry if the measured aspect angle falls outside a specified range."" The ""specified range"" in this requirement is vague and untestable. This range of acceptable operation for the measured aspect angle needs to be quantified.",7/28/06ProjectF - TIM - 1672,FSW.TC.03: sampling rate is an order of magnitude too small to verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fsbu_idpu.proc,v 1.1 2005/10/29 20:44:22 rhanna Exp [1] claims [2] verifies FSW.TC.03. FSW.TC.03 requires that TC flight software must send Spacecraft Time to the IDPU as part of the 1 pulse-per-second Synchronization Command. To verify that TC is sending Spacecraft Time to IDPU at 1 Hz, the sampling rate of [2] must be at least 2 Hz to avoid sample-aliasing. The sampling rate of [2] is 0.125 Hz. Thus, [2] cannot verify FSW.TC.03. Recommendation: increase the sampling rate in [2] to at least 2 Hz and formally retst FSW.TC.03.",7/28/06ProjectF - TIM - 1671,FSW.AC.14 Vague required limits for nutation angle,3,"Reference: (1) ProjectF SubSys1 FSW SRS Rev 3.1 Thruster Firing Shut Down – Bad Nutation Angle (FSW.AC.14), ""The SN Flight Software shall have the capability to stop commanding thrusters and generate appropriate telemetry if the nutation angle falls outside a specified range. The ""specified range"" in this requirement is vague and untestable. This range of acceptable operation for the nutation angle needs to be quantified.",7/28/06ProjectF - TIM - 1670,FSW.AC-12 Vague required limits for computed probe spin rate,3,"Reference: (1) ProjectF SubSys1 FSW SRS Rev 3.1 Thruster Firing Shut Down – Spin Rate Out of Range(FSW.AC.12) states, ""The SN Flight Software shall have the capability to stop commanding thrusters and generate appropriate telemetry if the computed probe spin rate falls outside a specified range."" The ""specified range"" mentioned in this requirement is vague and untestable. This range of acceptable operation for the computed probe spin rate needs to be quantified.",7/28/06ProjectF - TIM - 1669,FSW.TP.14: Operator inspection is inadequate to verify requirement,3,"[Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.14: The Transfer Frame Version Number shall be Zero (0), is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the Transfer Frame version specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the Transfer Frame version stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1668,FSW.TP.08: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.08: Transfer Frames that are not real-time shall inclued 4-bytes of data in the space the real-time Transfer Frame uses for the CLCW, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Telemetry Packet specifications for a Transfer Frame for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS format for Transfer Frames specified is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1667,FSW.TP.37: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.37: A fill packet is a CCSDS packet that the data is a repeating series of bytes (00 through FF), is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Fill Packet specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS Fill Packet specified is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1666,FSW.TP.36: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.36: Unused space in a partial frame shall be filled with a fill packet, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns a Transfer Fram partial fill packet for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using a Transfer Frame partial fill packet is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1665,FSW.TP.29: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.29: The TP FSW shall update the Header on all Science Data Transfer Frames received from the IDPU per document THM-SYS-115, ProjectF Telemetry Data Format specification, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns Header format for Science Data Transfer Frames for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the Science Data Transfer Frame Header format specification is required. Use a software-based test procedure analogous to fstp_science referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1664,FSW.TP.28: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.28: The Telemetry Processing component of the FSW shall receive Science Data packets from the IDPU via the serial link as specified in document THM-SYS-101 ProjectF Spacecraft to IDPU Interface Control Document, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the receipt of Science Data Packets via serial link from the IDPU for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that shows FSW, compiled and running on hardware, that demonstrates Science Data packets via serial link from the IDPU for FSW downlink is required. Use a software-based test procedure analogous to fstp_science referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1663,FSW.TP.22: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.22: The Telemetry Processing component of the FSW shall be capable of retrieving Transfer Frames buffered in Processor Memory by the Instrument Management component, and transfer these to the SubSys1 COMM Card for downlink, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the movement of Transfer Frames from Processor Memory buffer into the SubSys1 Comm Card for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using Transfer Frames moved from a Processor Memory buffer to the SubSys1 comm Card as stipulated is required. Use a software-based test procedure analogous to fsds_ds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1662,FSW.TP.11: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.11: All Transfer Frames generated by the Telemetry Processing component shall be a total of 1100 bytes in length, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the Transfer Frame length for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the Transfer Frame length stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1661,FSW.TP.10: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.10: All Transfer Frames generated by the Telemetry Processing component shall conform to CCSDS Recommendations,is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the Transfer Frame's CCSDS format compliance for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the Transfer Frame's CCSDS format compliance stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1660,FSW.TP.09: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.09: The TP FSW shall construct fixed length transfer frames containing a primary header, secondary header, frame data and a frame trailer, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the Transfer Frame structure for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the Transfer Frame structure stipulated is required. Recommendation: Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/28/06ProjectF - TIM - 1659,FSW.TP.07: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.07: The Real-time Transfer Frame shall include the COP-1 Command Link Control Word (CLCW) as part of the VCDU trailer, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the COP-1 Command Link Control Word for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the COP-1 Command Link Control Word stipulated is required. Use a software-based test procedure analogous to fscp_cop1 referenced in [1] & [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1658,FSW.TP.05: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.05: The TP FSW shall collect all CCSDS telemetry packets generated by all FSW tasks and encapsulate them into CCSDS Transfer Frames for downlink to the ground, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Telemetry Packet specifications for all SubSys1 FSW tasks for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS packets for all SubSys1 FSW tasks is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1657,FSW.TP.04: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.04: The TP FSW shall support CCSDS telemetry packets lengths of an even number of bytes in the range of 16 to 512 bytes, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Telemetry Packet length specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS data lengths stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1656,FSW.TC.02: proc sampling rate is an order of magnitude too low to verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fstc_pps.proc,v 1.3 2006/03/22 16:36:29 rhanna Exp [1] claims [2] verifies FSW.TC.02. FSW.TC.02 requires that TC flight software accept and process a 1 pulse-per-second signal. To verify FSW.TC.02, the sampling frequency must be at least twice that of the pulse frequency under test to avoid sample-aliasing. The sampling frequency of [2] is 1/8 the frequency under test. Thus, [2] cannot verify FSW.TC.02. Recommendation: modify [2] to use a clock that samples the state variables of interest at a frequency of at least 2 Hz. Formally retest FSW.TC.02.",7/27/06ProjectF - TIM - 1655,FSW.TP.03: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.03: CCSDS telemetry packets shall be capable of containing variable length data fields, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Telemetry Packet data structure specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS protocols, data structures, and formats stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1654,FSW.TP.02: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.02: The CCSDS Telemetry Packet secondary header shall contain a time code fix formatted with a 4 byte Seconds field and a 2 byte Sub-seconds field, with unused bits filled with zeros, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Telemetry Packet time code field format specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS protocols and formats stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/27/06ProjectF - TIM - 1653,FSW.TP.01.02: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.01.02: All Telemetry Packets generated by FSW Tasks and collected by TP FSW for downlink to the ground shall consist of a primary header and a secondary header, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Telemetry Packet header specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS protocols and formats stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1652,FSW.HS.12: proc does not fully verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fshs_clearbulk.proc,v 1.3 2006/04/15 23:19:24 rhanna Exp [1] claims that [2] verifies FSW.HS.12. FSW.HS.12 requires, among other things, clearing bulk memory. ""Clearing"" requires ""ensuring that a specific set of values is contained in"". (Typically, the specific set of values is binary zeros, but anything can be used.) Although [2] tests for various indirect proxies (such as address pointers, flags, etc.) that memory has been cleared, there is no verification in [2] that the specific values in bulk memory are the designated values. Thus, [2] does not fully verify FSW.HS.12. Verifying that the designated values are in fact contained in memory by directly sampling those values is routine software engineering practice. Recommendation: Two approaches are possible: (a) add a test to [2] to verify that the designated set of values is contained in bulk memory and formally retest FSW.HS.12, or (b) *if* there is already a procedure available showing that the designated set of values is already in bulk memory, cite that procedure in the ""STOL"" column of [1], and cite the log for an execution of that procedure in the ""LogFile"" column of the FSW.HS.12 entry in [1].",7/27/06ProjectF - TIM - 1651,FSW.HS.11: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fshs_hkcollect.proc,v 1.1 2006/03/05 18:21:26 rhanna Exp [1] claims [2] verifies FSW.HS.11. FSW.HS.11 identifies 11 sources of telemetry that HS must collect. [2] verifies collection for only 9 sources. Because there is no documentation on the meaning of the test variables in [2] (this is universally true across the test procs) used to signify these sources (see [2], Lines 148-174), and the naming conventions of these variables are not sufficiently self-documenting, it is not possible for anyone but the original author of [2] to deduce which telemetry sources are tested, and which are not. Recommendation: add the missing telemetry-source collection tests to [2] and formally retest FSW.HS.11. In [2], explicitly document the mapping between the test variables in Lines 148-174 and the subsystem names in FSW.HS.11.",7/27/06ProjectF - TIM - 1650,FSW.TP.01.01: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.01.01: All Telemetry Packets generated by FSW Tasks and collected by TP FSW for downlink to the ground shall be Formatted in accord with CCSDS Recommendations for Packet Telemetry Version 1, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the CCSDS Telemetry Packet specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references provide this required detail. A software-based test,procedure that demonstrates FSW, compiled and running on hardware, downlink telemetry using the CCSDS protocols and formats stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1649,FSW.TP.33: Source inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.33: The TP FSW component shall be able to send the following commands from the CIM, as specified in document SAI-SPEC-1173, ProjectF Communications Interface Module Requirements Specifications, is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns the Downlink restart upon a Downlink FIFO error under non-nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, restarting the Downlink as stipulated is required. Use a software-based test procedure analogous to fshs_warm referenced in [1] & [2]. Retest the requirement with at least the formality and accountability as the orginal tes",7/27/06ProjectF - TIM - 1648,FSW.TP.13: Source inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.13: All Transfer Frames shall include a 2-byte CRC fill area over which the SubSys1 Comm Card shall write the actual CRC, is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns validating Transfer Frame CRC structures and CRC manipulations under nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, allocates the CRC fill area as stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1647,FSW.TP.12: Source inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.12: Transfer Frames shall be capable of storing a variable number of variable length CCSDS packets. (When necessary, packets shall be split between consecutive transfer frames.), is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns validating CCSDS packet structures and packet manipulations under nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, manipulates the CCSDS structured packets as stipulated is required. Use a software-based test procedure analogous to fstp_ccsds referenced in [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1646,FSW.TP.06.06: Source inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] states that the verification method for FSW.TP.06.06: The TP FSW shall reserve Virtual Channel 7 with a priority of 7 (0=highest, 7=lowest) for Fill Data, is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns validating a particular flight channel with a specified priority for Fill Data under nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, uses the specified, prioritized channel for Fill Data is required. Use a software-based test procedure analogous to fscp_cop1 referenced in [1] and [2]. Retest the requirement with at least the formality and accountability as the orginal test.",7/27/06ProjectF - TIM - 1645,FSW.TP.39: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.39: The TP FSW component shall be able to send the following commands to the CIM, as specified in document SAI-SPEC-1173, ProjectF communications Interface Module Requirements Specification: 1. Reset Downlink 2. Write CIM configuration [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, sending data as required is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.39.",7/26/06ProjectF - TIM - 1644,FSW.TP.38: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.38: The TP FSW component shall be able to collect the following data from the CIM, as specified in document SAI-SPEC-1173, ProjectF communications Interface Module Requirements Specification: 1. Downlink Status 2. Uplink Status 3. CIM configuration [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, collecting data as required is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.38.",7/26/06ProjectF - TIM - 1643,FSW.TP.29: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.29: The TP FSW shall update the Header on all Science Data Transfer Frames received from the IDPU per document THM-SYS-115, ProjectF Telemetry Data Format specification. This document specified the Header fields to be updated by th SubSys1 FSW. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating Science Data telemetry with the required format is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.29.",7/26/06ProjectF - TIM - 1642,FSW.TP.18: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.18: Real-time telemetry shall always be available for output. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating real-time telemetry on demand is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.18.",7/26/06ProjectF - TIM - 1641,FSW.TP.08: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.08: Transfer Frames that are not real-time shall inclued 4-bytes of data in the space the real-time Transfer Frame uses for the CLCW. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.08.",7/26/06ProjectF - TIM - 1640,FSW.TP.06.05: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.06.05: The TP FSW shall utilize Virtual Channel 6 with a priority 4 (0=highest, 7=lowest) for Stored Spacecraft Events. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method.A software-based test procedure that shows FSW, compiled and running on hardware, generating telemetry with the required channels and priorities is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.06.05.",7/26/06ProjectF - TIM - 1639,FSW.TP.06.04: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.06.04: The TP FSW shall utilize Virtual Channel 3 with a priority 3 (0=highest, 7=lowest) for Stored Instrument Science Data and Anciliary Telemetry. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating telemetry with the required channels and priorities is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.06.04.",7/26/06ProjectF - TIM - 1638,FSW.TP.06.03: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.06.03: The TP FSW shall utilize Virtual Channel 2 with a priority 2 (0=highest, 7=lowest) for real-time Instrument Science Data and Anciliary Telemetry. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating telemetry with the required channels and priorities is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.06.03.",7/26/06ProjectF - TIM - 1637,FSW.TP.06.02: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.06.02: The TP FSW shall utilize Virtual Channel 1 with a priority 1 (0=highest, 7=lowest) for stored Probe Housekeeping Telemetry and Dump Data. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating telemetry with the required channels and priorities is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.06.02.",7/26/06ProjectF - TIM - 1636,FSW.TP.06.01: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.06.01: The TP FSW shall utilize Virtual Channel 0 with a priority 0 (0=highest, 7=lowest) for real time Probe Housekeeping Telemetry, Dump Data, and Events. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating telemetry with the required channels and priorities is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.06.01.",7/26/06ProjectF - TIM - 1635,FSW.TP.13: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.13: All Transfer Frames shall contain a 2-byte CRC fill area over which the SubSys1 Comm Card shall write the actual CRC. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.13",7/26/06ProjectF - TIM - 1634,FSW.TP.12: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 1] implies that [2] contains information sufficient to verify FSW.TP.12: Transfer Frames shall be capable of storing a variable number of variable length CCSDS packets. When necessary packets shall be split between consecutive transfer frames. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.12.",7/26/06ProjectF - TIM - 1633,FSW.TP.07: Operator inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [3] fscp_cop1.proc 00 RR Initial creation (FSW Build 1.510) 25Mar05 [1] states that the verification method for FSW.TP.07: The Real-time Transfer Frame shall include the COP-1 Command Link control word (CLCW) as part of the VCDU trailer, is ""Operator Inspection"". Although it provides insight, operator inspection is inadequate for verifying this requirement, which concerns the Real-Time Tramsfer Frame format specifications for downlink to the ground under nominal FSW behaviors. The phrase 'operator inspection', as such, defines no verification procedure. An adequate procedure needs to identify what items are to be observed and what the acceptable range of values for these items is. None of the references {[1], [2], [3]} provide this required detail. A software-based test procedure that demonstrates FSW, compiled and running on hardware, with the Real-Time Transfer Frame format stipulated is required. [3] does not claim to address FWS.TP.07. Use a software-based test procedure analogous to [3] referenced in [2]. Retest the requirement with at least the formality and accountability as the original test.",7/26/06ProjectF - TIM - 1632,FSW.TP.37: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.37: A fill packet is a CCSDS packet that the data is a repeating series of bytes (00 through FF). [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.37.",7/26/06ProjectF - TIM - 1631,FSW.TP.36: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.36: Unused space in a partial frame shall be filled with a fill packet. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.36.",7/26/06ProjectF - TIM - 1630,FSW.TP.28: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.28: The Telemetry Processing component of the FSW shall receive Science Data packets from the IDPU via the serial link as specified in document THM-SYS-101 ProjectF Spacecraft to IDPU Interface Control Document. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required executing interface is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.28.",7/26/06ProjectF - TIM - 1629,FSW.TP.22: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.22: The Telemetry Processing component of the FSW shall be capable of retrieving Transfer Frames buffered in Processor Memory by the Instrument Management component, and transfer these to the SubSys1 COMM Card for downlink. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required executing operations is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.22.",7/26/06ProjectF - TIM - 1628,FSW.TP.16: FSW Test Report content is not sufficient to verify requirement,3,"[Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.16: The TP FSW shall route CCSDS transfer frames to the SubSys1 COMM Card. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required routing is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.16.",7/26/06ProjectF - TIM - 1627,FSW.TP.14: FSW Test Report content is not sufficient to verify requirement,3,"[Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.14: The Transfer Frame Version Number shall be Zero (0). [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required attribute is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.14.",7/26/06ProjectF - TIM - 1626,FSW.TP.11: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.11: All Transfer Frames generated by the Telemetry Processing component shall be a total of 1100 bytes in length. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.11.",7/26/06ProjectF - TIM - 1625,FSW.TP.10: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.10: All Transfer Frames generated by the Telemetry Processing component shall conform to CCSDS Recommendations. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating frames with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.10",7/26/06ProjectF - TIM - 1624,FSW.TP.09: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.09: The TP FSW shall construct fixed length transfer frames containing a primary header, secondary header, frame data and a frame trailer. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.09.",7/26/06ProjectF - TIM - 1623,FSW.TP.05: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.05: The TP FSW shall collect all CCSDS telemetry packets generated by all FSW tasks and encapsulate them into CCSDS Transfer Frames for downlink to the ground. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats and structures is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.05.",7/26/06ProjectF - TIM - 1622,FSW.TP.04: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.04: The TP FSW shall support CCSDS telemetry packets lengths of an even number of bytes in the range of 16 to 512 bytes. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.04.",7/26/06ProjectF - TIM - 1621,FSW.TP.03: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.03: CCSDS telemetry packets shall be capable of containing variable length data fields. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.03.",7/26/06ProjectF - TIM - 1620,FSW.TP.02: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.02: The CCSDS Telemetry Packet secondary header shall contain a time code fix formatted with a 4 byte Seconds field and a 2 byte Sub-seconds field, with unused bits filled with zeros. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.02.",7/26/06ProjectF - TIM - 1619,FSW.TP.01.02: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.01.02: All Telemetry Packets generated by FSW Tasks and collected by TP FSW for downlink to the ground shall consist of a primary header and a secondary header. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.01.02.",7/26/06ProjectF - TIM - 1618,FSW.TP.01.01: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.TP.01.01: All Telemetry Packets generated by FSW Tasks and collected by TP FSW for downlink to the ground shall be Formatted in accord with CCSDS Recommendations for Packet Telemetry Version 1. [2] does not contain any detailed description of the verification procedure/method for the indicated requirement to allow an assessment the adequacy of that verification procedure/method. A software-based test procedure that shows FSW, compiled and running on hardware, generating packets with the required formats is necessary. Provide a test procedure/method description that is sufficient to verify FSW.TP.01.01.",7/26/06ProjectF - TIM - 1617,FSW.HS.03: sampling frequency is two orders of magnitude too low to verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fshs_dog.proc,v 1.2 2006/04/15 23:19:25 rhanna Exp [1] claims [2] verifies FSW.HS.03. Verifying FSW.HS.03 requires verifying that the watchdog timer is serviced at 1 Hz. Verifying that the watchdog timer is serviced at 1 Hz requires sampling state changes at 2 Hz or higher to avoid sample-aliasing. The sampling rate in [2] is ~0.02 Hz. Thus, [2] cannot verify FSW.HS.03. Recommendation: modify [2] to sample the state change of interest at 2 Hz and formally retest FSW.HS.03.",7/26/06ProjectF - TIM - 1616,FSW.HS.02: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006 [2] fshs_checkinfail.proc,v 1.4 2006/04/15 23:19:24 rhanna [1] claims [2] verifies FSW.HS.02. FSW.HS.02 requires HS to perform a table-specified corrective action *if a critical task fails to check in*. In the case tested by [2], the table-specified corrective action is a Warm Restart. The actual test in [2] verifies whether a Warm Restart has occurred, but it does not first determine that the task failed to check in, and *within the scope of that determination*, then verify that Warm Restart has occurred. The fact that the task did not check in cannot be deduced from the fact that the Warm Restart (counter) did not change. Thus, [2] only partially tests FSW.HS.02. Recommendation: to Line 75 in [2] add a test, independent of the existing test of whether the Warm Restart counter has changed, to first determine whether the task has checked in, and then, within the scope of that determination, verify that a Warm Restart has occurred. Formally retest FSW.HS.02",7/25/06ProjectF - TIM - 1615,FSW.CP.06.01: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fscp_cmd.proc,v 1.15 2006/03/16 16:52:44 rhanna Exp [3] cpt02.proc 515 2006-05-30 17:49:56Z broberts [1] claims that [2] and [3] verify FSW.CP.06.01, which requires that upon detection of any codeblock marked as invalid or failed checksum verification, CP shall abort further processing on that codeblock. There is no explicit verification of FSW.CP.06.01 in [2] or [3], nor can any implicit verification be inferred without assuming specific untested behavior of the FSW software proper. Recommendation: add an explicit test of FSW.CP.06.01 to [2] and formally retest the requirement.",7/25/06ProjectF - TIM - 1614,FSW.CP.06.02: proc does not verify requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fscp_cmd.proc,v 1.15 2006/03/16 16:52:44 rhanna Exp [3] cpt02.proc 515 2006-05-30 17:49:56Z broberts [1] claims that [2] and [3] verify FSW.CP.06.02, which requires that FSW discard any codeblock marked as invalid or having a failed checksum. There is no explicit verification of FSW.CP.06.02 in [2] or [3], nor can any implicit verification be inferred without assuming specific untested behavior of the FSW software proper. Recommendation: add an explicit test of FSW.CP.06.02 to [2] and formally retest the requirement.",7/25/06ProjectF - TIM - 1613,FSW.HS.01: proc only partially verifies requirement,3,"Ref. [1] ProjectF Flight Software Test Matrix. 28 July 2006. [2] fshs_hkcollect.proc,v 1.1 2006/03/05 18:21:26 rhanna [1] maps FSW.HS.01 to [2]. FSW.HS.01 requires that housekeeping telemetry be collected *every* 4 seconds. [2], at best, measures only the *average* rate at which housekeeping telemetry is collected, over a duration of 44 seconds (see Lines 93-106 of [2]). Thus, [2] does not fully verify FSW.HS.01. Recommendation: modify [2] to sample the telemetry traffic at 4- second intervals, not 44-second intervals, and formally re-test FSW.HS.01.",7/25/06ProjectF - TIM - 1612,FSW.CP.06.03: proc does not test requirement,3,"Ref. [1] ProjectF Flight Software Requirements Test Matrix. 28 July 2006. [2] fscp_cmd.proc,v 1.15 2006/03/16 16:52:44 rhanna Exp [1] claims that [2] verifies FSW.CP.06.03, which states that CP shall indicate in telemetry the detection any codeblock marked as invalid or having a failed checksum verification. There is no test in [2] for FS.CP.06.03. Recommendation: add a test to [2] to verify the indicated requirement. Formally rerun the test.",7/24/06ProjectF - TIM - 1611,FSW.CP.11: proc does not test requirement,4,"Ref. [1] ProjectF Flight Software Requirements Test Matrix. 28 July 2006. [2] fscp_cmd.proc,v 1.15 2006/03/16 16:52:44 rhanna Exp [1], inline comments in [2], and executable Lines 615-620 in [2] imply that [2] contains a test for FSW.CP.11. [2] in fact does not contain a test for FSW.CP.11. Recommendation: add a test for FSW.CP.11 to [2] and formally rerun the test.",7/24/06ProjectF - TIM - 1610,FSW.CP.13.01: FSW Test Report content is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006 [1] implies that [2] contains information sufficient to verify FSW.CP.13.01. [2] contains only a code snippet from CP. Although this information is useful, a code snippet is insufficient to verify FSW.CP.13.01. To verify the requirement, one must also show the compiled code, running on hardware, satisfies the requirement. Recommendation: provide a test procedure description that is sufficient to verify FSW.CP.13.01.",7/24/06ProjectF - TIM - 1609,FSW.CP.13.01: source inspection is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.13.01 is ""Source Inspection"". Although it provides insight, source inspection is insufficient to verify this requirement, which concerns validating each Transfer Frame for proper version number across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on hardware, will validate each Transfer Frame for proper version number is required. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/24/06ProjectF - TIM - 1608,FSW.CP.13.02: analysis is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF FSW Test Report. Release 1.0. 28 July 2006. [1] states that the verification method for FSW.CP.13.02 is ""Analysis"". Although it provides insight, analysis is inadequate for verifying this requirement, which concerns discarding any Transfer Frame not on Virtual Channel 1 or 2, across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and actually running on hardware, will appropriately discard discarding any Transfer Frame not on Virtual Channel 1 or 2, is required. In addition, the word ""Analysis"", as such, is insufficient as a description of a test procedure. To be adequate, a test procedure must state what specific observables are to be analyzed, what the acceptable range of values for those items is, and must record the results of the analysis in a test log or test report. Neither [1] nor [2] contains such required detail. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/24/06ProjectF - TIM - 1607,FSW.CP.13.02: Test Report does not contain information that is sufficient to determine adequacy of verification,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006. [1] states that [2] contains information that is adequate to assess the adequacy of the verification of FSW.CP.13.02. [2] does not contain a detailed enough description of the verification process for the indicated requirement to allow an assessment the adequacy of that verification procedure/process. In particular, the wording in [2] implicitly references the running of an unidentified procedure. The procedure description in the STOL column in reference [1] is ""N/A"", which is inconsistent with the description in [2]. Recommendation: provide a test procedure description that is sufficient to permit the assessment of the adequacy of the test for FSW.CP.13.02.",7/24/06ProjectF - TIM - 1606,FSW.CP.13.03: Test Report is not sufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006 [2] ProjectF Flight Software Test Report. 28 July 2006 [1] implies that [2] contains enough information to verify FSW.CP.13.03. [2] merely references FSW source listings. Source listings are not sufficient to verify the requirement. To verify the requirement, FSW must be tested by actually running FSW on hardware. Recommendation: provide a test procedure that demonstrates that FSW, compiled and running on hardware, satisfies FSW.CP.13.03, and formally retest the requirement.",7/24/06ProjectF - TIM - 1605,"FSW.CP.16: requirement conflict between FSW SRS and ProjectF Command Specification, Version D",3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] fscp_cmd.proc,v 1.15 2006/03/16 16:52:44 rhanna [3] ProjectF Command Specification. Version D. (Document date identified by project ResChron of 8/31/2006 is 8/31/2004.) [1] says [2] tests FSW.CP.16 for cases in which a VC1 or VC2 telecommand Transfer Frame is received. The FSW.CP.16 conflicts with [3], Section 4.3.1, which states that the Command Link Control Word (CLCW) shall not be available for Virtual Channel 2 (VC2). There shall be CLCW data for Virtual Channel 1 only ..."" tHC ITS #444 has been opened on this requirements conflict issue. [2] verifies the version of the requirement found in Section 4.3.1 of [3]. Recommendation (updated 5 Sep 2006): resolve the requirements conflict by modifying the SRS requirement to agree with [3], using the formal ECN process.",7/24/06ProjectF - TIM - 1604,FSW.CP.20.01: source code inspection is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.20.01 is ""Source Inspection"". Although it provides insight, source inspection is insufficient to verify this requirement, which concerns CCSDS command packet header formats across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on hardware, will appropriately validate CCSDS command packet header formats. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/24/06ProjectF - TIM - 1603,FSW.CP.20.02: analysis is insufficient to verify requirement; and Test Matrix contradicts Test Report,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006. [1] states that the verification method for FSW.CP.20.02 is ""Analysis"". Although it provides insight, analysis is insufficient to verify this requirement, which concerns validation of all CCSDS command packets across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on hardware, will appropriately validates of all CCSDS command packets is required. In addition, the word ""Analysis"", as such, is insufficient as a description of a test procedure. To be adequate, a test procedure must state what specific observables are to be analyzed, what the acceptable range of values for those items is, and must record the results of the analysis in a test log or test report. Note also that [2] implicitly references FSW running under some unspecified conditions, thus contradicting the ""N/A"" in the STOL column for requirement for FSW.CP.20.02. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01. Retest the requirement with at least the formality and accountability as the original test.",7/24/06ProjectF - TIM - 1602,"FSW.CP.28: proc does not test requirement, xref says it does",3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] fscp_cmd.proc,v 1.15 2006/03/16 16:52:44 rhanna [1] says [2] tests FSW.CP.28, which requires that CP maintain a telemetry point indicating the number of minutes that have elapsed since the last valid command was received. [2] does not test FSW.CP.28. Recommendation: either change [1] to identify where FSW.CP.28 is tested or add a test case to [2] to test FSW.CP.28 and formally re-test FSW.CP.28.",7/24/06ProjectF - TIM - 1601,FSW.CP.08.03: operator inspection is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.08.03 is ""Operator Inspection"". As it stands, the phrase ""Operator Inspection"" is inadequate as a verification procedure (regardless of whether automated or manual). An adequate procedure must specify which items to inspect, what the acceptable values for those items are, and must record the observed values in a test log, together with an indication of whether the test passed on this basis. Recommendation: use a test procedure that meets the requirements described above. Retest the requirement with at least the formality and accountability as the original test.",7/20/06ProjectF - TIM - 1600,FSW.CP.08.03: Test Report says nothing about procedure identified in Test Matrix,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF FSW Test Report. Release 1.0. 28 July 2006. [1] states that the test procedure for FSW.CP.08.03 is ""N/A"" and references [2]. [2] says nothing about FSW.CP.08.03. Furthermore, [1] identifies ""Operator Inspection"" as the verification method. As it stands, this phrase is insufficient as a test procedure (regardless of whether automated or manual). An adequate procedure must explicitly state what specific information to inspect, what range of values is required for the test to pass, and the test log must record whether each of these values fell into the acceptable range. Recommendation: provide a test procedure that satisfies the requirements described above to verify FSW.CP.08.03, and formally retest the requirement.",7/20/06ProjectF - TIM - 1599,FSW.CP.18: source inspection is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.18 is ""Source Inspection"". Although it provides insight, source inspection is insufficient to verify this requirement, which concerns adherence to, and preservation of, the CCSDS Segment Header flag across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, will appropriately manage messages which have correctly, and incorrectly, formed fields for CCSDS Segment Header flags is required. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/20/06ProjectF - TIM - 1598,FSW.CP.18: verification cross-reference matrix is missing information needed to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the test procedure for FSW.CP.18 is contained in a ""Validation tab"" accompanying [1]. There is no ""Validation tab"" accompanying [1]. Without the ""Validation tab"", it is not possible to even begin to assess the adequacy of the test procedure for FSW.CP.18. Recommendation: provide ""Validation tab"" contents in the form of a test procedure description that is sufficient to permit the assessment of the adequacy of the test for FSW.CP.18.",7/20/06ProjectF - TIM - 1597,FSW.CP.17: source inspection is insufficient for verifying requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.17 is ""Source Inspection"". Although it provides insight, source inspection is insufficient for verifying this requirement, which concerns adherence to, and preservation of, the Command Packet Segment Header conventions across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, will appropriately manage messages which have correctly, and incorrectly, formed fields for the Command Packet Segment Header is required. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/20/06ProjectF - TIM - 1596,FSW.CP.17: verification cross reference matrix is missing information required to assess adequacy of test,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 25 April 2006. 9:26:30 PM [1] states that the test procedure for FSW.CP.17 is contained in a ""Validation tab"" accompanying [1]. There is no ""Validation tab"" accompanying [1]. Without the ""Validation tab"", it is not possible to even begin to assess the adequacy of the test procedure for FSW.CP.17. Recommendation: provide ""Validation tab"" contents in the form of a test procedure description that is sufficient to permit the assessment of the adequacy of the test for FSW.CP.17.",7/20/06ProjectF - TIM - 1595,FSW.CP.08.02: source inspection is insufficient to verity requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.08.02 is ""Source Inspection"". Although it provides insight, source inspection is insufficient to verify this requirement, which concerns adherence to, and preservation of, command format conventions across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, will appropriately manage messages which have correctly, and incorrectly, formed fields in the sense of the requirement is required. Recommendation: use a software-based test procedure that is analogous to that used to test FSW.CP.01.01. Rerun the test with at least the formality and accountability of the original test.",7/19/06ProjectF - TIM - 1594,FSW.CP.08.01: source inspection is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.08.01 is ""Source Inspection"". Although it provides insight, source inspection is insufficient to verify this requirement, which concerns adherence to, and preservation of, the CCSDS Telecommand Packetization conventions across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, will appropriately manage messages which have correctly, and incorrectly, formed fields for the CCSDS Telecommand Packetization is required. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/19/06ProjectF - TIM - 1593,FSW.CP.07: source inspection is insufficient to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.07 is ""Source Inspection"". Although it provides insight, source inspection is insufficient to verify this requirement, which concerns adherence to, and preservation of, the CCSDS Transport Layer conventions across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, will appropriately manage messages which have correctly, and incorrectly, formed fields at the CCSDS Transport Layer is also required. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/19/06ProjectF - TIM - 1592,FSW.CP.05: source inspection is inadequate to verify requirement,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [1] states that the verification method for FSW.CP.05 is ""Source Inspection"". Although it provides insight, source inspection is inadequate for verifying this requirement, which concerns the management of codeblock size across all nominal FSW behaviors. A software-based test procedure that shows FSW, compiled and running on actual hardware, will appropriately manage messages which have correctly, and incorrectly, sized parity and data fields is required. In addition, the testing needs to demonstrate that incorrect and correct parity values will be appropriatedly managed by FSW. Recommendation: use a software-based test procedure analogous to that used to test FSW.CP.01.01 (COP-1 and Farm Support). Retest the requirement with at least the formality and accountability as the orginal test.",7/19/06ProjectF - TIM - 1591,FSW.CP.05: Test Matrix contradicts Test Report; Test Report verification method is insufficient,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] ProjectF Flight Software Test Report. Release 1.0. 28 July 2006. [2] implies that source inspection is adequate for verifying the requirement. Although source inspection is useful, it is insufficient for verifying this requirement. A SW test procedure for FSW, compiled and running on actual hardware, is required in addition to source inspection. Recommendation: provide a test procedure description that is sufficient to test for FSW.CP.05, and formally retest the requirement.",7/19/06ProjectF - TIM - 1590,FSW.CP.02: cross-reference matrix is missing information needed to permit assessment of adequacy of testing,3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 25 April 2006. 9:26:30 PM [1] states that the test procedure for FSW.CP.02 is contained in a ""Validation tab"" accompanying [1]. There is no ""Validation tab"" accompanying [1]. Without the ""Validation tab"", it is not possible to even begin to assess the adequacy of the test procedure for FSW.CP.02. Recommendation: provide ""Validation tab"" contents in the form of a test procedure description that is sufficient to permit the assessment of the adequacy of the test for FSW.CP.02.",7/19/06ProjectF - TIM - 1589,FSW.CP.03: proc does not test uplink rate,4,"Ref. [1] ProjectF FSW Requirements Test Matrix. 28 July 2006. [2] fsmm_ldsegs.proc, Revision 1.1 2006/01/18 14:10:35 rrapp FSW.CP.03 states: ""The CP Flight Software shall support a continuous uplink rate of 1,000 bits per second."" [1] says [2] is used to test FSW.CP.03. [2] captures no timing information, and thus does not test for a rate. Recommendation: modify [2] to capture timing information and rerun the test with at least the formality and accountability of the original test.",7/17/06ProjectF - TIM - 1588,"FSW.CP.03: xref matrix logfile ""field"" value should not be ""n/a""",3,"Ref. [1] ProjectF FSW Requirements Test Matrix. 25 April 2006. 09:26:30 PM. [2] fsmm_ldsegs.proc, Revision 1.1 2006/01/18 14:10:35 rrapp FSW.CP.03 states: ""The CP Flight Software shall support a continuous uplink rate of 1,000 bits per second."" [1] says [2] is used to test FSW.CP.03. [1] says no logfile is involved (""n/a""), and the verification method is ""Operator Inspection"". Inspection of what, is not specified. [2] in fact produces logging messages which *are* relevant to the test. The ""LogFile"" field value in [1] is thus in error. Recommendation: For ""n/a"" in the ""LogFile"" field of [1] substitute the name of a file that contains the output messages from [2]. Rerun the test.",7/17/06ProjectF - TIM - 1587,FSW stress-test failure counter can have an erroneous failure count value,4,"Ref. [1] cpt06.proc 515 2006-05-30 17:49:56Z broberts Failure counter totalFail can have an erroneous failure count value (too many, or too few) because it is not initialized to zero in [1] before it is first used. This is a coding error in the test proc. Recommendation: Initialize totalFail to zero immediately after Line 70 in [1].",7/14/06ProjectF - TIM - 1586,"MRD PB.EPS-1, -2, -3: proc reports Pressure Tank Isolation Valve Power control test passed even when required tests skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] isovlvpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that required to determine whether these MRD requirements are satisfied, are skipped. For the results of this test to accurately reported, the tester would have to know the test procs in detail and would have to remember to manually annotate the test log to note, whenever applicable, that in Line 53 of [2], p@pprtnkivlve .ne. ""ENA"" and thus, that *various required toggle tests subsequent to that line have been skipped, resulting in only a partial test*. Recommendation: modify [1] and [2] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 197-203 of [1] read: if (p@pprtnkivlva .eq. ""OFF"") then start isovlvpower(on) start isovlvpower(off) else start isovlvpower(off) start isovlvpower(on) endif Lines 53-60 of [2] read: if (p@pprtnkivlve .ne. ""ENA"") then ; rem; rem; <!> ISO Valve Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/13/06ProjectF - TIM - 1585,"MRD PB.EPS-1, -2, -3: proc reports RCS Heater Service 3 control test passed even when required tests are skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] rcs3htrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] and [2] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 177-183 of [1] read: if (p@prcshtr3a .eq. ""OFF"") then start rcs3htrpower(on) start rcs3htrpower(off) else start rcs3htrpower(off) start rcs3htrpower(on) endif Lines 51-59 of [2] read: if (onoff .eq. ""ON"") then ; if (p@prcshtr3e .ne. ""ENA"") then ; rem; rem; <!> RCS3 Heater Power Slow Trip is DISABLED rem; wait 5 return Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/13/06ProjectF - TIM - 1584,"MRD PB.EPS-1, -2, -3: proc reports test RCS Heater Service 2 control test passed even when required tests skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] rcs2htrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] and [2] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 167-173 of [1] read: if (p@prcshtr2a .eq. ""OFF"") then start rcs2htrpower(on) start rcs2htrpower(off) else start rcs2htrpower(off) start rcs2htrpower(on) endif Lines 53-60 of [2] read: if (p@prcshtr2e .ne. ""ENA"") then ; rem; rem; <!> RCS2 Heater Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/13/06ProjectF - TIM - 1583,"MRD PB.EPS-1, -2, -3: proc reports RCS Heater Service 1 control test passed even when required tests skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] rcs1htrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] and [2] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 157-163 of [1] read: if (p@prcshtr1a .eq. ""OFF"") then start rcs1htrpower(on) start rcs1htrpower(off) else start rcs1htrpower(off) start rcs1htrpower(on) endif Lines 53-60 of [2] read: if (p@prcshtr1e .ne. ""ENA"") then ; rem; rem; <!> RCS1 Heater Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/13/06ProjectF - TIM - 1582,"MRD PB.EPS-1, -2, -3: proc only partially tests Catbed Survival Heater control",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [1] (see Line 153) only partially tests the toggling of the Catbed Survival Heater control. Among other things, [1] does not check to see whether the heater is on before commanding the heater to be set on, and [1] does not toggle from a given state, to the alternate state, and back to the original state (all these transitions need to be tested to determine whether the software satisfies the cited requirements). The proc nevertheless unconditionally reports that MRD PB.EPS-1, -2, and -3 have been fully tested (Lines 215-233 of [1]). Recommendation: modify [1] to test the Catbed Survival Heater control in a way that is analogous to the test of the Bus Primary Heater control in [1]. Under at least the formality and accountability used to run the original procedure, retest FSW with the proc modified in accordance with this recommendation. Supporting data -------------- Line 153 of [1] reads: start catsurvhtrpower(on) Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/13/06ProjectF - TIM - 1581,"MRD PB.EPS-1, -2, -3: proc only partially tests the Catbed Primary Heater control",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [1] (see Line 149) only partially tests the toggling of the Catbed Primary Heater control. Among other things, [1] does not check to see whether the heater is on before commanding the heater to be set on, and [1] does not toggle from a given state, to the alternate state, and back to the original state (all these transitions need to be tested to determine whether the software meets the cited requirements). [1] nevertheless unconditionally reports that MRD PB.EPS-1, -2, and -3 have been fully tested (Lines 215-233 of [1]). Recommendation: modify [1] to test the Catbed Primary Heater control in a way that is analogous to the test of the Bus Primary Heater control in [1]. Under at least the formality and accountability used to run the original procedure, retest FSW with [1] modified in accordance with this recommendation. Supporting data -------------- Line 149 of [1] reads: start catprimhtrpower(on) Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/13/06ProjectF - TIM - 1580,"MRD PB.EPS-1, -2-, -3: proc does not test Instrument Survival Heater control because it calls wrong subproc",3,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] survhtrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [3] isurvhtrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp At Lines 139-145, [1] calls [2], the Bus Survival Heater power control test proc, and thus fails to test the Instrument Survival Heater control, which is the intent of this block. The referenced block should call [3], the Instrument Survival Heater power control test proc. [1] reports that all tests of MRD PB.DPS-1, -2, and -3 passed, nevertheless. Recommendation: At Lines 139-145, modify [1] to call [3]. Under at least the same formality with which the original test was run, retest FSW using the proc modified in accordance with this recommendation. Supporting data --------------- Lines 139-145 of [1] read: if (p@pisurvhtra .eq. ""OFF"") then start survhtrpower(on) start survhtrpower(off) else start survhtrpower(off) start survhtrpower(on) endif",7/13/06ProjectF - TIM - 1579,"MRD PB.EPS-1, -2, -3: proc reports Instrument Primary Heater control test passed even when required tests skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] iprimhtrpower.proc,v 1.2 2005/12/12 17:17:32 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] and [2] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 129-135 of [1] read: if (p@piprimhtra .eq. ""OFF"") then start iprimhtrpower(on) start iprimhtrpower(off) else start iprimhtrpower(off) start iprimhtrpower(on) endif Lines 55-62 of [2] read: if (p@piprimhtre .ne. ""ENA"") then ; rem; rem; <!> instrument Primary Heater Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/13/06ProjectF - TIM - 1578,"MRD PB.EPS-1, -2, -3: proc reports Bus Survival Heater power control test passed even when required test cases skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] survhtrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] and [2] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 119-125 of [1] read: if (p@pbussurvhtra .eq. ""OFF"") then start survhtrpower(on) start survhtrpower(off) else start survhtrpower(off) start survhtrpower(on) endif Lines 53-60 of [2] read: if (p@pbussurvhtre .ne. ""ENA"") then ; rem; rem; <!> Bus Survival Heater Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/12/06ProjectF - TIM - 1577,"MRD EPS-1, -2, -3: proc reports Bus Primary Heater power control test passed even when required test cases are skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] primhtrpower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] and [2] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 109-115 of [1] read: if (p@pbusprimhtra .eq. ""OFF"") then start primhtrpower(on) start primhtrpower(off) else start primhtrpower(off) start primhtrpower(on) endif Lines 51-60 of [2] read: if (onoff .eq. ""ON"") then ; if (p@pbusprimhtre .ne. ""ENA"") then ; rem; rem; <!> Bus Primary Heater Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of [1] read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/12/06ProjectF - TIM - 1576,"MRD PB.EPS-1, -2, -3: proc reports IDPU power toggle satisfies requirements even when required test cases skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] idpupower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Detailed analysis ----------------- [1] calls [2] to perform the detailed testing of IDPU Boom Power toggling. If in Line 85 of [1], p@pidpupwra .eq. ""ON"" and in Line 51 of [2], onoff .eq. ""ON"" and in Line 53 of [2], p@pidpupwre .ne. ""ENA"") then [2] issues a message stating ""IDPU Boom Power Slow Trip is DISABLED"", skips the remaining toggle tests in [2], and return. [1] invariably reports that all three EPS requirements are satisfied and does not qualify this statement with a report that various toggle tests in [2] have been skipped. Supporting data --------------- Lines 83-19 of cpt07.proc read: ; IDPU ; if (p@pidpupwra .eq. ""OFF"") then start idpupower(on) start idpupower(off) else start idpupower(off) start idpupower(on) endif Lines 51-60 of idpupower.proc read: if (onoff .eq. ""ON"") then ; if (p@pidpupwre .ne. ""ENA"") then ; rem; rem; <!> IDPU Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of cpt07.proc read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/11/06ProjectF - TIM - 1575,"MRD PB.EPS-1, PB.EPS-2, PB.EPS-3: proc reports IDPU boom power toggle test passed even though required test actions are skipped",4,"Ref. [1] cpt07.proc 572 2006-06-15 15:15:19Z broberts [2] iboompower.proc,v 1.2 2005/12/12 17:17:31 rhanna Exp [1] will report that MRD PB.EPS-1, PB.EPS-2, and PB.EPS-3 are satisfied even when test actions in [2] that are required to determine whether these MRD requirements are satisfied, are skipped. Recommendation: modify [1] to a) test for the fact that test cases in [2] are skipped and b) report (a) in detail in the test log. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Detailed analysis ----------------- [1] calls [2] to perform the detailed testing of IDPU Boom Power toggling. If in Line 96 of [1], p@pidpuacta .eq. ""ON"" and in Line 51 of [2], onoff .eq. ""ON"" and in Line 53 of [2], p@pidpupwre .ne. ""ENA"" then [2] issues a message stating ""IDPU Boom Power Slow Trip is DISABLED"", skips the remaining toggle tests in [2], and return. [1] invariably reports that all three EPS requirements are satisfied and does not qualify this statement with a report that various toggle tests in [2] have been skipped. Supporting data --------------- Lines 93-105 of cpt07.proc read: ; IDPU Boom ; ask ""TC: Enable IDPU Loop1 and Loop2 Inhibit switches on Umb Drawer; 'OK' to continue"" if (p@pidpuacta .eq. ""OFF"") then start iboompower(on) start iboompower(off) ask ""TC: Disable Loop1 and Loop2 Inhibit switches on Umb Drawer; 'OK' to continue"" else start iboompower(off) start iboompower(on) endif Lines 51-60 of idpupower.proc read: if (onoff .eq. ""ON"") then ; if (p@pidpupwre .ne. ""ENA"") then ; rem; rem; <!> IDPU Power Slow Trip is DISABLED rem; wait 5 return endif Lines 215-233 of cpt07.proc read: sho ""MRD: Successfully turning on and off all switched services"" sho ""MRD: shows that the Probe can Control the distribution of"" sho ""MRD: power to all subsytems, including the IDPU and booms"" sho ""MRD: (PB.EPS-1, PB.EPS-2, PB.EPS-3)."" ; ;******************************************* ; WRAPUP ;******************************************* ; sho ""### FILE ID : $Id: cpt07.proc 572 2006-06-15 15:15:19Z broberts $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; sho ""@@@ CPT07 has PASSED @@@"" rem ; @@@ PB.EPS.1 PASSES rem ; @@@ PB.EPS.2 PASSES rem ; @@@ PB.EPS.3 PASSES",7/11/06ProjectF - TIM - 1574,MRD PB.CDH.08 and PB.CDH.07: proc will report requirements satisfied even when all tests of requrements failed,3,"Ref. [1] cpt08.proc [2] cpt08_restarts.proc [1] will report that ProjectF has satisified MRD PB.CDH.08 and PB.CDH.07 even when all of the tests in [1] have failed. The problem arises because [1], Line 212, starts [2]. [2], Line 124, then sets global failure counter failcnt to zero, regardless of the value of failcnt in [1]. [1], Line 224, then tests the value of failcnt to see whether it is zero. failcnt will always be zero at [1], Line 224 because it has been set to zero by [2]. Because failcnt is zero, [1], Lines 228-232 will then invariably report MRD PB.CDH.08 and PB.CDH.07 are satisfied (even if all of the tests in [1] failed). For further detail, see the code segments under ""Supporting data"", below. Recommendation: in [2], delete the declaration of, and assignment statement containing, global variable failcnt. Supporting data --------------- Lines 212-233 of cpt08.proc read: start cpt08_restarts ; ;********************************************************************** ; WRAPUP ;********************************************************************** ; sho ""### FILE ID : $Id: cpt08.proc,v 1.9 2006/04/15 23:18:34 rhanna Exp $ "" sho ""### RUN DATE : "",p@GBL_WALLCLOCK sho ""### DB VERS : "",GBL_DBVERS sho ""### FSW VERS : "",format(""%04x"",CMMSYSVER) sho ""### RUN TIME : "",(p@GBL_WALLCLOCK-procstart) ; if (failcnt) then sho (concat(""<!> CPT08 had "",failcnt,"" failures"")) rem ; <!> PB.CDH.08 FAILS else sho ""@@@ CPT08 has PASSED @@@"" rem ; @@@ PB.CDH.08 PASSED sho ""MRD: Successfully sent all Special Commands (hardware-"" sho ""MRD: decoded), and verified correct Probe responses."" sho ""MRD: (PB.CDH-7)"" endif Line 124 of cpt08_restarts.proc reads: failcnt=0",7/9/06ProjectF - TIM - 1573,MRD PB.FSW-14: proc does not report watchdog servicing resumption failure,3,"Ref. [1] cpt08_restarts.proc 515 2006-05-30 17:49:56Z broberts [2] ProjectF MRD version I The test of cold restart watchdog servicing resumption (part of MRD PB.FSW-14, [2]) at lines 504-518 of [1] does not update the failure counter (failcnt) or issue a failure message if the test fails. Recommendation: in the ""else"" clause at lines 507-518 of [1], increment failcnt and issue a test-failed message using the sho directive. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 504-518 of [1] read: if (chscoldcntr .eq. old_chscoldcntr) then sho ""MRD: Successfully showed that Watchdog timer servicing must have"" sho ""MRD: resumed less than 60 seconds after a Cold restart (PB.FSW-14)"" else wait 100 ; bypass on wait 1 /ctpgseena wait 1 start proberecover bypass off wait 5 resync endif",7/7/06ProjectF - TIM - 1572,MRD PB.FSW-14: cold restart test conditions inconsistent with test-passed message,3,"Refs. [1] cpt08_restarts.proc 515 2006-05-30 17:49:56Z broberts [2] ProjectF MRD version I The ""test-passed"" message at line 506 of [1] is inconsistent with the test at line 502. In particular, there is a 70-second wait at line 502 of [1], but the corresponding test message at line 506 of [1] states that the watchdog timer servicing must have resumed less than 60 seconds after a Cold restart. Note that the requirement cited in line 506 ([2], PB.FSW-14) requires only that the watchdog timer servicing begin within 190, not 60 (as suggested by line 506 of [1]), seconds, after a cold restart. Recommendation: Do one of the following: a) change the test message at line 506 to read ""70"", vs. ""60"", or b) change line 502 of [1] to read wait 60 or c) replace the entire test at lines 501-506 with a test of the 190-second requirement as stated in [2], PB.FSW-14. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 501-506 of [1] read: old_chscoldcntr=chscoldcntr wait 70 ;a restart will occur if watch dog not serviced ; if (chscoldcntr .eq. old_chscoldcntr) then sho ""MRD: Successfully showed that Watchdog timer servicing must have"" sho ""MRD: resumed less than 60 seconds after a Cold restart (PB.FSW-14)""",7/7/06ProjectF - TIM - 1571,MRD PB.FSW-10: proc does not report requirement not met,4,"Ref. [1] cpt08_restarts.proc 515 2006-05-30 17:49:56Z broberts [2] ProjectF MRD version I [1] does not report that the test for compliance with MRD PB.FSW-10 at Line 493 failed when that test fails, because the script block is missing an ""else"" clause that would otherwise capture the failure. Recommendation: Add an ""else"" clause to the script block in [1], Lines 493-499, to increment failure counter failcnt and to issue a message (using the sho directive) stating that the software failed the test for compliance with MRD PB.FSW-10. Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 493-499 of [1] read: if (((p@gbl_wallclock - watchtime) .lt. 190) .and. (chscoldcntr .gt. old_chscoldcntr)) then sho ""MRD: Successfully measured the time from a cold restart"" sho (concat(""MRD: until command acceptance to be "",p@gbl_wallclock-watchtime,"" which is less than"")) sho ""MRD: 190 seconds (PB.FSW-10)"" endif",7/7/06ProjectF - TIM - 1570,MRD PB.FSW-14: erroneous time reported in test-passed message,4,"Ref. [1] cpt08_restarts.proc 515 2006-05-30 17:49:56Z broberts [2] ProjectF MRD version I An erroneous time is reported in the test passed message at line 317 in [1]. The message states the watchdog timer servicing resumed 60 seconds after a Warm restart. If the test at Line 315 in [1] passes, this segment of proc actually shows that the timer servicing resumed ~180 seconds after a Warm restart. [2] requires (PSB.FSW-14) that the timer servicing resume within 190 seconds after a Warm restart. Recommendation: Change ""60"" at Line 317 to read ""within 190"". Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation. Supporting data --------------- Lines 307-318 read: oldcnt=chstpdlxcnt old_chscoldcntr=chscoldcntr old_chswarmcntr=chswarmcntr /chswarmreset wait until (chswarmcntr .eq. (old_chswarmcntr-1)) ; wait 3 * 60 ; ensure Watchdog Svc restarts ; if ((chscoldcntr .eq. old_chscoldcntr) .and. (chstpdlxcnt .gt. oldcnt)) then sho ""MRD: Successfully showed that Watchdog timer servicing"" sho ""MRD: resumed 60 seconds after a Warm restart (PB.FSW-14)"" endif",7/6/06ProjectF - TIM - 1569,MRD PB.FSW-14: proc does not report watchdog timer failure,4,"Ref. [1] cpt08_restarts.proc 515 2006-05-30 17:49:56Z broberts [1] does not report a watchdog timer failure because it is missing an ""else"" clause at lines 307-318: oldcnt=chstpdlxcnt old_chscoldcntr=chscoldcntr old_chswarmcntr=chswarmcntr /chswarmreset wait until (chswarmcntr .eq. (old_chswarmcntr-1)) ; wait 3 * 60 ; ensure Watchdog Svc restarts ; if ((chscoldcntr .eq. old_chscoldcntr) .and. (chstpdlxcnt .gt. oldcnt)) then sho ""MRD: Successfully showed that Watchdog timer servicing"" sho ""MRD: resumed 60 seconds after a Warm restart (PB.FSW-14)"" endif Recommendation: add an else clause to increment failure counter failcnt and issue a failure message (using the sho directive). Under at least the formality and accountability with which the original script was run, re-test FSW using the script modified in accordance with this recommendation.",7/6/06ProjectF - TIM - 1568,cpt09: global failure count variable set to 0,3,"Ref. [1] cpt09.proc 515 2006-05-30 17:49:56Z broberts Global failure count variable failcnt is set to 0 in [1]. If this proc is used in a scope which includes other procs that use failcnt, the suite can report an erroneously low test failure count -- unless, by pure luck, [1] is always the first of the procedures executed in that scope. failcnt is never used by [1] after it is initialized to 0, i.e., it plays no essential role in [1]. Recommendation: a) Delete the declaration of failcnt in [1]. b) Delete the line in [1] which reads failcnt = 0 c) Under at least the formality and accountability with which the original script was run, re-test FSW with the script modified in accordance with (a) and (b).",7/6/06ProjectF - TIM - 1567,Memory load function SM_check_load_length is not portable,4,"In ProjectF FSW build 3.1 file sm_main.c there are four instances of literal values used to represent the size of a word. On the current hardware architecture, a word is two bytes but on future architectures this may not be the case. To prevent future developers or maintainers from receiving errors in memory loads the literal values should be replaced by ""sizeof(u_word)"". The literals are located in function ""SM_check_load_length"" in sm_main.c at lines 802, 803, 815, and 816.",5/22/06ProjectF - TIM - 1566,Failure to check semaphore initialization in OS_seminit,3,"Brief statement of the problem ------------------------------ The ""OS_seminit"" function in the osstart.c does not provide notification to developers or operators of failed semaphore initialization. Recommendations --------------- Correct ""OS_seminit"" such that developers and operators are notified if semaphore initialization fails. Detailed recommendations are provided as part of the supporting analysis. Supporting analysis ------------------- There is an error in checks made during semaphore initialization in ProjectF FSW release 3.1 file osstart.c. The ""OS_seminit"" function uses entries from the ""os_sem_object_table"" (via the ""sem_object"" pointer provided by ""OS_initialize_semaphores"") to create semaphores. Semaphores are created by calling ""rtems_semaphore_create"". The ""rtems_semaphore_create"" return code is saved into the ""status"" variable at line 311. The value of the ""status"" variable is never tested and is lost when the ""OS_seminit"" function returns. The ""rtems_status"" variable is initialized to zero at line 301. At line 320, ""rtems_status"" is tested and if non-zero and the software is configured as a development build (as determined by the ""DEV_BUILD"" macro being defined) then a message is output to alert developers that the semaphore was not created. After the test of ""rtems_status"" on line 320, a call to ""rtems_semaphore_ident"" is made and its return value stored in ""rtems_status"". The return value is then discarded as the ""OS_seminit"" function returns. Mixing the ""status"" and ""rtems_status"" variables and wrongly ordering the ""if"" and ""rtems_semaphore_ident"" statements causes the code to fail to provide notification of improper semaphore initialization in every case. Further, testing will not directly reveal the failed semaphore initialization. Semaphore failures will manifest in subtle ways that are difficult to reproduce. It is recommended that the status variable be removed at line 300 and replaced by rtems_status at line 311. These steps will produce a message when DEV_BUILD is defined if a semaphore initialization fails. Further, it is recommended that the rtems_semaphore_ident call be removed at line 331 unless it has some purpose other than to check the status of the newly created semaphore. This is redundant to the status provided in line 311. If the call does have some other purpose, this should be clearly documented in the source code. Finally, it is recommended that an ""eventf"" or similar call be made in the ""if"" statement so that failure to create a semaphore in the flight build will be recorded. This will notify operators of the problem so that the software does not operate for an extended period of time without semaphore protection.",5/22/06ProjectF - TIM - 1565,TEST_CMD_4 - inconsistent uplink rate,3,"References: (1) ProjectF IDPU SRS Rev G FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009D From (1) requirement FSW.CMD-4 states, ""CMD software shall support maximum continuous commanding at 1000 bps (the real-time uplink rate)"" TEST_CMD_4 in (2) has an uplink rate set at 1800 bps. If the test passes at this rate it appears to exceed the required rate. IV&V recommends that the test be additionally run 1000 bps (as is required).",4/26/06ProjectF - TIM - 1564,TEST_ACS_5- degree variations between requirements and test,3,"References: (1) ProjectF IDPU SRS Rev F.3 FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009 From (1) requirement FSW.ACS-5 states, ""ACS shall filter the incoming Sun Pulse times and determine an appropriate internal spin frequency counter setting such that the Spin Reference Pulse (SRP) matches the Sun Pulse in period and phase to 0.1 degree."" From (2) part of the script for TEST_ACS_5 states, ""REM IF AVAILABLE, REPLACE THE INPUT SUN PULSE WITH THE 3325A REM ON PIN 23. SET 3325A TO 3.0 SECONDS, PHASE MODULATION REM SUCH THAT WE GET +/-0.25 DEGREE VARIATION (1 SIGMA) REM (2.998 TO 3.002 SECOND PERIODS)"" Requirement FSW.ACS-5 says that there should only be .1 degree variation while the test script says to change the phase modulation in order to get +/-.25 degree variation.",4/26/06ProjectF - TIM - 1563,TEST_ACS_2 - requirements not fully tested,3,"References: (1) ProjectF IDPU SRS Rev F.3 FSW_001_TABLES (2) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009 From (1) requirement FSW.ACS-2 states, ""ACS shall determine the proper SpinSector frequency for the upcoming spin."" Issue: TEST_ACS_2 does not allow the ACS to determine the spin. It simply sets the SUN to a value and checks the period. This does not allow requirement, FSW.ACS-2, to be completely tested.",4/26/06ProjectF - TIM - 1562,"MRD vH, PB.FSW-10: timing value is incorrect",3,"Ref. [1] ProjectF Mission Requirements Document, THM-SYS-001H. [2] ProjectF Flight Software Requirements Specification, THM-FSW-SRS, v3.0. 1 February 2006. [3] ProjectF Mission Requirements Document, THM-SYS-001I. (Update, 7 July 2006). [3] contains the corrected value, which is now 190 seconds. Accordingly, this TIM will be closed before submitted. ------- entry prior to 7 July 2006 [1] states that the FSW shall be capable of processing ground commands 60 seconds after a cold restart. [2] states that the FSW shall be capable of processing ground commands 150 seconds after a cold restart. 150 seconds is the correct value. Recommendation -------------- For ""60"" in the formulation of PB.FSW-10 in [1], substitute ""150"".",4/7/06ProjectF - TIM - 1561,SubSys1 FSW v3.003: Test for floating point equality in sun-sensing/thruster-command-generation,2,"Refs. [1] ProjectF FSW v3.003, ~22 March 2006 [2] Project ResChron (3/24/2006 10:57:59 AM) to TIM 1527 [3] HP. Testing Floating Point Values for Equality. URL http://docs.hp.com/en/B3906-90006/ch03s05.html. [4] STI. Understand for C++. V1.4. Build 137. 2000-2005. [5] The Hammers Company. C Flight Software Coding Standard and Style Guide. Release - R0.1. tHC-C-FSW-STD - R0.1 March 21, 2004. Draft. [6] D. Goldberg. What Every Computer Scientist Should Know About Floating Point. URL http://docs.sun.com/source/ 806-3568/ncg_goldberg.html. Reprinted from Computing Surveys. March 1991. [7] NASA/GSFC. Flight Software Branch – Code 582. C++ Coding Standard. Version 1.0. 12/11/03. Problem statement ----------------- [2] states that: ""Upon recent code inspection of 3.003, there were found no instances of attempting to check for an equal comparison of a Floating Point variable."" [1], sn\sncalculatespinrate.c, line 491, contains a test for floating point equality: if( crossTimeUTC == snStat.sun.aspAng[indx+1][UTC_TIME] ) [1], sn\sncalculatespinrate.c, line 491, lies in a chain of operations that are essential to deriving thruster commands from, among other constraints, sun-sensing measurands. Tests for floating-point equality are profoundly discouraged by software engineering standards of practice (see [3], [5], [6], [7]) because floating-point representations are almost never exact. Recommendation -------------- Replace all occurrences of tests for floating-point equality in [1] with a ""difference-epsilon"" inequality test. Please note that a robust implementation of this function already exists at [1], \sn\tftask.c, lines 490-494, reproduced below. (Or see [3], [5], or [7] for additional examples). Use an episilon that is appropriate for the context. In the case of the sun-measurand test that is the subject of this TIM, that epsilon will have to be chosen in a way that coheres with constraints on spacecraft motion and thruster-response dynamics. Supporting analysis ------------------- crossTimeUTC is defined in [1], sn\sncalculatespinrate.c, line 423, as: double crossTimeUTC; snStat is defined in [1], sntask.c, line 80, as: snThrCmdProcStatic snStat; snThrCmdProcStatic is defined in [1], snthrstrcmdproc.h, lines 91-95 as: typedef struct { snSunAspAngFmt sun; snThrCmdProcPerThrStatic thr[ NUM_OF_THRUSTERS ]; }snThrCmdProcStatic; snStat.sun is defined in [1], snthrstrcmdproc.h, lines 91-95 as: snSunAspAngFmt sun; snSunAspAngFmt is defined in [1], snpkt.h, lines 78-88, as (inessential lines deleted): typedef struct { . . . double aspAng[ ASP_ANGL_LIM_PTS_ROWS ][ ASP_ANGL_LIM_PTS_COLS ]; }OS_PACK snSunAspAngFmt; Thus, [1], sn\sncalculatespinrate.c, line 491, is a test of floating-point equality. ------------- HP'sadvice on testing for floating point equality: From [3]: Testing Floating-Point Values for Equality Think very carefully before you test two floating-point values for equality. Because of the inherent inexactness of floating-point representations and because of the many sources of rounding inaccuracies in a floating-point computation, values that should be equal from a purely algebraic perspective in fact rarely will be. ----------- A resource for testing whether two doubles are sufficiently close is already available in [1], \sn\tftask.c, lines 490-494: boolean areTheseDoublesEqual( double double1, double double2 ) { return( ( boolean ) ( ( fabs( double1 - double2 ) ) < ACCEPTABLE_DOUBLE_DIFF ) ); } ---------- The requirement concerning a test for floating-point equality from tHC C Coding Standard ([5], p. 11) 3.3.10 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating point numbers. Not Acceptable if( someVar == 0.1 ) /* may never be evaluated as true */ Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) /* safe */ The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above, is also a prohibited practice.) ------------ The requirement concerning a test for floating-point equality from the NASA/GSFC C++ Coding standard ([7], p. 13) 3.9.2 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating-point numbers. Not Acceptable if( someVar == 0.1 ) // may never be evaluated as true Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) // safe The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above) is also a prohibited practice. Notice that the requirement in [5] on this subject is taken verbatim from the corresponding requirement in [7].)",3/31/06ProjectF - TIM - 1560,SubSys1 FSW v3.003: Test of floating point equality in sun-sensing/thruster-command-generation,2,"Refs. [1] ProjectF FSW v3.003, ~22 March 2006 [2] Project ResChron (3/24/2006 10:57:59 AM) to TIM 1527 [3] HP. Testing Floating Point Values for Equality. URL http://docs.hp.com/en/B3906-90006/ch03s05.html. [4] STI. Understand for C++. V1.4. Build 137. 2000-2005. [5] The Hammers Company. C Flight Software Coding Standard and Style Guide. Release - R0.1. tHC-C-FSW-STD - R0.1 March 21, 2004. Draft. [6] D. Goldberg. What Every Computer Scientist Should Know About Floating Point. URL http://docs.sun.com/source/ 806-3568/ncg_goldberg.html. Reprinted from Computing Surveys. March 1991. [7] NASA/GSFC. Flight Software Branch – Code 582. C++ Coding Standard. Version 1.0. 12/11/03. Problem statement ----------------- [2] states that: ""Upon recent code inspection of 3.003, there were found no instances of attempting to check for an equal comparison of a Floating Point variable."" [1], sn\sncalculatespinrate.c, line 480, contains a test for floating point equality: if( crossTimeUTC == snStat.sun.aspAng[indx][UTC_TIME] ) [1], sn\sncalculatespinrate.c, line 480, lies in a chain of operations that are essential to deriving thruster commands from, among other constraints, sun-sensing measurands. Tests for floating-point equality are profoundly discouraged by software engineering standards of practice (see [3], [5], [6], [7]) because floating-point representations are almost never exact. Recommendation -------------- Replace all occurrences of tests for floating-point equality in [1] with a ""difference-epsilon"" inequality test. Please note that a robust implementation of this function already exists at [1], \sn\tftask.c, lines 490-494, reproduced below. (Or see [3], [5], or [7] for additional examples). Use an episilon that is appropriate for the context. In the case of the sun-measurand test that is the subject of this TIM, that epsilon will have to be chosen in a way that coheres with constraints on spacecraft motion and thruster-response dynamics. Supporting analysis ------------------- crossTimeUTC is defined in [1], sn\sncalculatespinrate.c, line 423, as: double crossTimeUTC; snStat is defined in [1], sntask.c, line 80, as: snThrCmdProcStatic snStat; snThrCmdProcStatic is defined in [1], snthrstrcmdproc.h, lines 91-95 as: typedef struct { snSunAspAngFmt sun; snThrCmdProcPerThrStatic thr[ NUM_OF_THRUSTERS ]; }snThrCmdProcStatic; snStat.sun is defined in [1], snthrstrcmdproc.h, lines 91-95 as: snSunAspAngFmt sun; snSunAspAngFmt is defined in [1], snpkt.h, lines 78-88, as (inessential lines deleted): typedef struct { . . . double aspAng[ ASP_ANGL_LIM_PTS_ROWS ][ ASP_ANGL_LIM_PTS_COLS ]; }OS_PACK snSunAspAngFmt; Thus, [1], sn\sncalculatespinrate.c, line 480, is a test of floating-point equality. ------------- HP'sadvice on testing for floating point equality: From [3]: Testing Floating-Point Values for Equality Think very carefully before you test two floating-point values for equality. Because of the inherent inexactness of floating-point representations and because of the many sources of rounding inaccuracies in a floating-point computation, values that should be equal from a purely algebraic perspective in fact rarely will be. ----------- A resource for testing whether two doubles are sufficiently close is already available in [1], \sn\tftask.c, lines 490-494: boolean areTheseDoublesEqual( double double1, double double2 ) { return( ( boolean ) ( ( fabs( double1 - double2 ) ) < ACCEPTABLE_DOUBLE_DIFF ) ); } ---------- The requirement concerning a test for floating-point equality from tHC C Coding Standard ([5], p. 11) 3.3.10 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating point numbers. Not Acceptable if( someVar == 0.1 ) /* may never be evaluated as true */ Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) /* safe */ The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above, is also a prohibited practice.) ------------ The requirement concerning a test for floating-point equality from the NASA/GSFC C++ Coding standard ([7], p. 13) 3.9.2 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating-point numbers. Not Acceptable if( someVar == 0.1 ) // may never be evaluated as true Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) // safe The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above) is also a prohibited practice. Notice that the requirement in [5] on this subject is taken verbatim from the corresponding requirement in [7].)",3/31/06ProjectF - TIM - 1559,SubSys1 FSW v3.003: Test for floating-point equality in sun-sensing/thruster-command-generation,2,"Refs. [1] ProjectF FSW v3.003, ~22 March 2006 [2] Project ResChron (3/24/2006 10:57:59 AM) to TIM 1527 [3] HP. Testing Floating Point Values for Equality. URL http://docs.hp.com/en/B3906-90006/ch03s05.html. [4] STI. Understand for C++. V1.4. Build 137. 2000-2005. [5] The Hammers Company. C Flight Software Coding Standard and Style Guide. Release - R0.1. tHC-C-FSW-STD - R0.1 March 21, 2004. Draft. [6] D. Goldberg. What Every Computer Scientist Should Know About Floating Point. URL http://docs.sun.com/source/ 806-3568/ncg_goldberg.html. Reprinted from Computing Surveys. March 1991. [7] NASA/GSFC. Flight Software Branch – Code 582. C++ Coding Standard. Version 1.0. 12/11/03. Problem statement ----------------- [2] states that: ""Upon recent code inspection of 3.003, there were found no instances of attempting to check for an equal comparison of a Floating Point variable."" [1], sn\sncalculatespinrate.c, line 342, contains a test for floating point equality. In fact this line tests for equality between a double snOut.sunAngleRad and a float snTbl.spin.sunCrossCalib[indx+1][ASP_ANG]. [1], sn\sncalculatespinrate.c, line 342, lies in a chain of operations that are essential to deriving thruster commands from, among other constraints, sun-sensing measurands. Tests for floating-point equality are profoundly discouraged by software engineering standards of practice (see [3], [5], [6], [7]) because floating-point representations are almost never exact. Recommendation -------------- Replace all occurrences of tests for floating-point equality in [1] with a ""difference-epsilon"" inequality test. Please note that a robust implementation of such a test already exists in [1], at \sn\tftask.c, lines 490-494, reproduced below. (Or see [3], [5], or [7] for additional examples). Use an episilon that is appropriate for the context. In the case of the sun-measurand test that is the subject of this TIM, that epsilon will have to be chosen in a way that coheres with constraints on spacecraft motion andthruster-response dynamics. Supporting analysis ------------------- [1], sn\sncalculatespinrate.c, line 342 reads: if( snOut.sunAngleRad == snTbl.spin.sunCrossCalib[indx][ASP_ANG] ) snOut is of externally defined type snTlmPktFmt, which is defined in [1], \sn\sncalculatespinrate.c, line 74: extern snTlmPktFmt snOut; Type snTlmPktFmt is defined in [1], \inc\snpkt.h, lines 164-182, as (inessential lines deleted): typedef struct { . . . double sunAngleRad; // Sim Src Var: sun_angle . . . }OS_PACK snTlmPktFmt; snTbl is defined in [1], sn_table.c, lines 63-228, as (some inessential lines deleted): snTableFmt snTbl = { . . . // -- Spin rate calculation ------------------- // ----------------------------------- { // . . . { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_00, // snTbl.spin.sunCrossCalib[ 0 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_00, // snTbl.spin.sunCrossCalib[ 0 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_01, // snTbl.spin.sunCrossCalib[ 1 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_01, // snTbl.spin.sunCrossCalib[ 1 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_02, // snTbl.spin.sunCrossCalib[ 2 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_02, // snTbl.spin.sunCrossCalib[ 2 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_03, // snTbl.spin.sunCrossCalib[ 3 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_03, // snTbl.spin.sunCrossCalib[ 3 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_04, // snTbl.spin.sunCrossCalib[ 4 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_04, // snTbl.spin.sunCrossCalib[ 4 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_05, // snTbl.spin.sunCrossCalib[ 5 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_05, // snTbl.spin.sunCrossCalib[ 5 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_06, // snTbl.spin.sunCrossCalib[ 6 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_06, // snTbl.spin.sunCrossCalib[ 6 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_07, // snTbl.spin.sunCrossCalib[ 7 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_07, // snTbl.spin.sunCrossCalib[ 7 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_08, // snTbl.spin.sunCrossCalib[ 8 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_08, // snTbl.spin.sunCrossCalib[ 8 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_09, // snTbl.spin.sunCrossCalib[ 9 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_09, // snTbl.spin.sunCrossCalib[ 9 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_10, // snTbl.spin.sunCrossCalib[ 10 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_10, // snTbl.spin.sunCrossCalib[ 10 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_11, // snTbl.spin.sunCrossCalib[ 11 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_11, // snTbl.spin.sunCrossCalib[ 11 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_12, // snTbl.spin.sunCrossCalib[ 12 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_12, // snTbl.spin.sunCrossCalib[ 12 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_13, // snTbl.spin.sunCrossCalib[ 13 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_13, // snTbl.spin.sunCrossCalib[ 13 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_14, // snTbl.spin.sunCrossCalib[ 14 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_14, // snTbl.spin.sunCrossCalib[ 14 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_15, // snTbl.spin.sunCrossCalib[ 15 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_15, // snTbl.spin.sunCrossCalib[ 15 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_16, // snTbl.spin.sunCrossCalib[ 16 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_16, // snTbl.spin.sunCrossCalib[ 16 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_17, // snTbl.spin.sunCrossCalib[ 17 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_17, // snTbl.spin.sunCrossCalib[ 17 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_18, // snTbl.spin.sunCrossCalib[ 18 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_18, // snTbl.spin.sunCrossCalib[ 18 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_19, // snTbl.spin.sunCrossCalib[ 19 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_19, // snTbl.spin.sunCrossCalib[ 19 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_20, // snTbl.spin.sunCrossCalib[ 20 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_20, // snTbl.spin.sunCrossCalib[ 20 ][ OFF_SET ] }, // }, // . . . }; SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_NN is a macro defined in [1], acsconst.h, lines 283-383, as: #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_00 ( ( float ) -1.53 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_00 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_01 ( ( float ) -1.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_01 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_02 ( ( float ) -1.40 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_02 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_03 ( ( float ) -1.22 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_03 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_04 ( ( float ) -1.05 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_04 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_05 ( ( float ) -0.87 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_05 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_06 ( ( float ) -0.70 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_06 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_07 ( ( float ) -0.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_07 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_08 ( ( float ) -0.35 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_08 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_09 ( ( float ) -0.17 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_09 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_10 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_10 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_11 ( ( float ) 0.17 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_11 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_12 ( ( float ) 0.35 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_12 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_13 ( ( float ) 0.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_13 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_14 ( ( float ) 0.70 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_14 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_15 ( ( float ) 0.87 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_15 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_16 ( ( float ) 1.05 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_16 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_17 ( ( float ) 1.22 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_17 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_18 ( ( float ) 1.40 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_18 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_19 ( ( float ) 1.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_19 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_20 ( ( float ) 1.53 ) Thus, the left-hand-side of the test for floating point equalilty at [1], sn\sncalculatespinrate.c, line 342, is a double, but the right-hand side of [1], sn\sncalculatespinrate.c, line 342, is a float. ------------- HP'sadvice on testing for floating point equality: From [3]: Testing Floating-Point Values for Equality Think very carefully before you test two floating-point values for equality. Because of the inherent inexactness of floating-point representations and because of the many sources of rounding inaccuracies in a floating-point computation, values that should be equal from a purely algebraic perspective in fact rarely will be. ----------- A resource already available in [1], \sn\tftask.c, lines 490-494: boolean areTheseDoublesEqual( double double1, double double2 ) { return( ( boolean ) ( ( fabs( double1 - double2 ) ) < ACCEPTABLE_DOUBLE_DIFF ) ); } ---------- The requirement concerning a test for floating-point equality from tHC C Coding Standard ([5], p. 11) 3.3.10 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating point numbers. Not Acceptable if( someVar == 0.1 ) /* may never be evaluated as true */ Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) /* safe */ The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above, is also a prohibited practice.) ------------ The requirement concerning a test for floating-point equality from the NASA/GSFC C++ Coding standard ([7], p. 13) 3.9.2 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating-point numbers. Not Acceptable if( someVar == 0.1 ) // may never be evaluated as true Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) // safe The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above) is also a prohibited practice. Notice that the requirement in [5] on this subject is taken verbatim from the corresponding requirement in [7].)",3/30/06ProjectF - TIM - 1558,SubSys1 FSW v3.003: Test for floating point equality in sun-sensing/thruster-command-generation,2,"Refs. [1] ProjectF FSW v3.003, ~22 March 2006 [2] Project ResChron (3/24/2006 10:57:59 AM) to TIM 1527 [3] HP. Testing Floating Point Values for Equality. URL http://docs.hp.com/en/B3906-90006/ch03s05.html. [4] STI. Understand for C++. V1.4. Build 137. 2000-2005. [5] The Hammers Company. C Flight Software Coding Standard and Syle Guide. Release - R0.1. tHC-C-FSW-STD - R0.1 March 21, 2004. Draft. [6] D. Goldberg. What Every Computer Scientist Should Know About Floating Point. URL http://docs.sun.com/source/ 806-3568/ncg_goldberg.html. Reprinted from Computing Surveys. March 1991. [7] NASA/GSFC. Flight Software Branch – Code 582. C++ Coding Standard. Version 1.0. 12/11/03. Problem statement ----------------- [2] states that: ""Upon recent code inspection of 3.003, there were found no instances of attempting to check for an equal comparison of a Floating Point variable."" [1], sn\sncalculatespinrate.c, line 337, contains a test for floating point equality. In fact this line tests for equality between a double snOut.sunAngleRad and a float snTbl.spin.sunCrossCalib[indx][ASP_ANG]. [1], sn\sncalculatespinrate.c, line 337 lies in a chain of operations that are essential to deriving thruster commands from, among other constraints, sun-sensing measurands. Tests for floating-point equality are profoundly discouraged by software engineering standards of practice (see [3], [5], [6], [7]) because floating-point representations are almost never exact. Recommendation -------------- Replace all occurrences of tests for floating-point equality in [1] with a ""difference-epsilon"" inequality test. Please note that a robust implementation of such a test already exists in [1], \sn\tftask.c, lines 490-494, reproduced below. (Or see [3], [5], or [7] for additional examples). Use an episilon that is appropriate for the context. In the case of the sun-measurand test that is the subject of this TIM, that epsilon will have to be chosen in a way that coheres with constraints on spacecraft motion and thruster-response dynamics. Supporting analysis ------------------- [1], sn\sncalculatespinrate.c, line 337 reads: if( snOut.sunAngleRad == snTbl.spin.sunCrossCalib[indx][ASP_ANG] ) snOut is of externally defined type snTlmPktFmt, which is defined in [1], \sn\sncalculatespinrate.c, line 74: extern snTlmPktFmt snOut; Type snTlmPktFmt is defined in [1], \inc\snpkt.h, lines 164-182, as (inessential lines deleted): typedef struct { . . . double sunAngleRad; // Sim Src Var: sun_angle . . . }OS_PACK snTlmPktFmt; snTbl is defined in [1], sn_table.c, lines 63-228, as (some inessential lines deleted): snTableFmt snTbl = { . . . // -- Spin rate calculation ------------------- // ----------------------------------- { // . . . { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_00, // snTbl.spin.sunCrossCalib[ 0 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_00, // snTbl.spin.sunCrossCalib[ 0 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_01, // snTbl.spin.sunCrossCalib[ 1 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_01, // snTbl.spin.sunCrossCalib[ 1 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_02, // snTbl.spin.sunCrossCalib[ 2 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_02, // snTbl.spin.sunCrossCalib[ 2 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_03, // snTbl.spin.sunCrossCalib[ 3 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_03, // snTbl.spin.sunCrossCalib[ 3 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_04, // snTbl.spin.sunCrossCalib[ 4 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_04, // snTbl.spin.sunCrossCalib[ 4 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_05, // snTbl.spin.sunCrossCalib[ 5 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_05, // snTbl.spin.sunCrossCalib[ 5 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_06, // snTbl.spin.sunCrossCalib[ 6 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_06, // snTbl.spin.sunCrossCalib[ 6 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_07, // snTbl.spin.sunCrossCalib[ 7 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_07, // snTbl.spin.sunCrossCalib[ 7 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_08, // snTbl.spin.sunCrossCalib[ 8 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_08, // snTbl.spin.sunCrossCalib[ 8 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_09, // snTbl.spin.sunCrossCalib[ 9 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_09, // snTbl.spin.sunCrossCalib[ 9 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_10, // snTbl.spin.sunCrossCalib[ 10 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_10, // snTbl.spin.sunCrossCalib[ 10 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_11, // snTbl.spin.sunCrossCalib[ 11 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_11, // snTbl.spin.sunCrossCalib[ 11 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_12, // snTbl.spin.sunCrossCalib[ 12 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_12, // snTbl.spin.sunCrossCalib[ 12 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_13, // snTbl.spin.sunCrossCalib[ 13 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_13, // snTbl.spin.sunCrossCalib[ 13 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_14, // snTbl.spin.sunCrossCalib[ 14 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_14, // snTbl.spin.sunCrossCalib[ 14 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_15, // snTbl.spin.sunCrossCalib[ 15 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_15, // snTbl.spin.sunCrossCalib[ 15 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_16, // snTbl.spin.sunCrossCalib[ 16 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_16, // snTbl.spin.sunCrossCalib[ 16 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_17, // snTbl.spin.sunCrossCalib[ 17 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_17, // snTbl.spin.sunCrossCalib[ 17 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_18, // snTbl.spin.sunCrossCalib[ 18 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_18, // snTbl.spin.sunCrossCalib[ 18 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_19, // snTbl.spin.sunCrossCalib[ 19 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_19, // snTbl.spin.sunCrossCalib[ 19 ][ OFF_SET ] }, // { // SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_20, // snTbl.spin.sunCrossCalib[ 20 ][ ASP_ANG ] SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_20, // snTbl.spin.sunCrossCalib[ 20 ][ OFF_SET ] }, // }, // . . . }; SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_NN is a macro defined in [1], acsconst.h, lines 283-383, as: #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_00 ( ( float ) -1.53 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_00 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_01 ( ( float ) -1.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_01 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_02 ( ( float ) -1.40 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_02 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_03 ( ( float ) -1.22 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_03 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_04 ( ( float ) -1.05 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_04 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_05 ( ( float ) -0.87 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_05 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_06 ( ( float ) -0.70 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_06 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_07 ( ( float ) -0.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_07 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_08 ( ( float ) -0.35 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_08 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_09 ( ( float ) -0.17 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_09 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_10 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_10 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_11 ( ( float ) 0.17 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_11 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_12 ( ( float ) 0.35 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_12 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_13 ( ( float ) 0.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_13 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_14 ( ( float ) 0.70 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_14 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_15 ( ( float ) 0.87 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_15 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_16 ( ( float ) 1.05 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_16 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_17 ( ( float ) 1.22 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_17 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_18 ( ( float ) 1.40 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_18 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_19 ( ( float ) 1.52 ) #define SSP_TBL_INIT_SUNCROSSCALIB_OFF_SET_19 ( ( float ) 0.00 ) #define SSP_TBL_INIT_SUNCROSSCALIB_ASP_ANG_20 ( ( float ) 1.53 ) Thus, the left-hand-side of the test for floating point equalilty at [1], sn\sncalculatespinrate.c, line 337, is a double, but the right-hand side of [1], sn\sncalculatespinrate.c, line 337, is a float. ------------- HP'sadvice on testing for floating point equality: From [3]: Testing Floating-Point Values for Equality Think very carefully before you test two floating-point values for equality. Because of the inherent inexactness of floating-point representations and because of the many sources of rounding inaccuracies in a floating-point computation, values that should be equal from a purely algebraic perspective in fact rarely will be. ----------- A resource already available in [1], \sn\tftask.c, lines 490-494: boolean areTheseDoublesEqual( double double1, double double2 ) { return( ( boolean ) ( ( fabs( double1 - double2 ) ) < ACCEPTABLE_DOUBLE_DIFF ) ); } ---------- The requirement concerning a test for floating-point equality from tHC C Coding Standard ([5], p. 11) 3.3.10 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating point numbers. Not Acceptable if( someVar == 0.1 ) /* may never be evaluated as true */ Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) /* safe */ The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above, is also a prohibited practice.) ------------ The requirement concerning a test for floating-point equality from the NASA/GSFC C++ Coding standard ([7], p. 13) 3.9.2 “Within tolerance” shall be used instead of testing for exact equality when testing equality on floating-point numbers. Not Acceptable if( someVar == 0.1 ) // may never be evaluated as true Acceptable if( abs(someVar - 0.1) < MAX_TOLERANCE ) // safe The constant 0.1 cannot be represented exactly by any finite binary mantissa and exponent. (IV&V note: the observation in this requirement concerning the constant 1.0 applies just as well to the value of any floating-point variable. The test for equality of two floating point variables (not just a test for equality between a floating point variable and a floating-point constant, as in the example above) is also a prohibited practice. Notice that the requirement in [5] on this subject is taken verbatim from the corresponding requirement in [7].)",3/30/06ProjectF - TIM - 1557,Provisional incorrect calculation of the total number of test failures in test procedure cpt01_rts.proc of SubSys1 Build 2.504,4,"In test procedure file cpt01_rts.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), the erroneous initialization of the global variable ""failcnt"" to zero is already the subject of a separate IV&V issue (TIM - 1556). However, upon the correction of that error, care should also be taken to modify the calculation at the end of this procedure which determines the total number of test failures occurring in this procedure. With the removal of the incorrect initialization of ""failcnt,"" the total number of test failures which may result from running cpt01_rts.proc will not be equal to the final value of ""failcnt"" anymore, as currently set in the procedure. Instead, the total number of test failures will be the difference between the final and initial values of ""failcnt"" at the conclusion and start of the procedure's run, respectively.",3/17/06ProjectF - TIM - 1556,Incorrect local declaration and initialization of global variable “failcnt” in test procedure cpt01_rts.proc of SubSys1 Build 2.504,4,"In test procedure file cpt01_rts.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), the variable ""failcnt,"" which is a counter keeping track of the number of test failures in this and other test procedures, including the controlling test procedure cpt01.proc, has erroneously been declared as a local variable, as opposed to a global variable. Consistent with this error, “failcnt” has incorrectly been initialized to zero. The initial value of the value of ""failcnt"" in cpt01_rts.proc is supposed to be the value passed on from cpt01.proc at the running point in the controlling procedure where cpt01_rts.proc is activated. With the current isolation of the value of “failcnt” in cpt01_rts.proc from the controlling test procedure cpt01.proc, the failures encountered in the course of the execution of cpt01_rts.proc will not contribute to the value of the global variable “failcnt” in cpt01.proc, generally resulting in under-reporting of this value.",3/17/06ProjectF - TIM - 1555,"Questionable filter table selection for 32K, 16K, 1K, and 64K bps downlink rates in test procedure cpt01_gotodl.proc of SubSys1 Build 2.504",3,"In test procedure file cpt01_gotodl.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), the selection of the appropriate filter table for some of the downlink bit rate values designated as belonging to the mid-rate range, as well as for the 1-K bps rate, is questionable. The name convention used in the definition of the filter tables loaded at the start of the procedure run, as presented in the procedure file, suggests that the appropriate filter tables for the downlink bit rate values in the ""midrate"" range and 1 K bps are Tables 7 and 5, respectively. However, in the case of bit rates equal to 32 K and 16 K bps, both considered to be within the ""Mid"" range of bit rates, Table 6, which is supposed to be for low bit rates has been chosen. Also, in the case of the 1-K bps rate, Table 6 has been selected. (With regard to the 64-K bit rate, there is also inconsistency between the provided comment indicating the intended table (Table 6), and the table actually chosen (Table 7)).",3/17/06ProjectF - TIM - 1554,Illegitimate continuation of test run after failure to load tables in test procedure cpt01_gotodl.proc of SubSys1 Build 2.504,3,"In test procedure file cpt01_gotodl.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), the procedure issues a message upon an unsuccessful loading of the four filter tables, indicating that the procedure will be terminating. However, no terminating action, including the return to the controlling CPT procedure cpt01.proc could be found in the procedure. In fact, the procedure appears to continue running with unpredictable consequences, depending on which filter table has or has not been successfully loaded.",3/17/06ProjectF - TIM - 1553,Incorrect calculation of the total number of test failures in test procedure cpt01_gotodl.proc of SubSys1 Build 2.504,4,"In test procedure file cpt01_gotodl.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), the total number of test failures in the procedure has incorrectly been given in the ""wrapup"" section as the value for variable ""failcnt."" The correct value for the total test failures should be calculated as the difference between ""failcnt"" and ""old_failcnt."" That is, [total number of test failures] = failcnt - old_failcnt . The above assertion is supported by considering that the initial value of ""failcnt"" at the start of the procedure has been preserved by setting it equal to ""old_failcnt."" This fact also points to, and in turn is reinforced by, an oversight in the procedure, which is the subject of a separate IV&V issue (TIM - 1552). That is the failure to declare ""failcnt"" as a global value, whose initial value is supposed to be passed from the controlling CPT procedure cpt01.proc to procedure cpt01_gotodl.proc. The final value of ""failcnt"" at the end of the run by cpt01_gotodl.proc is supposed to be passed back to cpt01.proc.",3/17/06ProjectF - TIM - 1552,Lack of global declaration of variable “failcnt” in test procedure cpt01_gotodl.proc of SubSys1 Build 2.504,4,"In test procedure file cpt01_gotodl.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), the variable ""failcnt,"" which is the counter keeping track of the number of test failures in this and other CPT procedures, has been neither declared nor initialized. Test procedure cpt01_gotodl.proc is run from test procedure cpt01.proc and its test failure count is supposed to contribute to the overall failure count in cpt01.proc, as is the case with other cpt procedures run from cpt01.proc. As a result, ""failcnt"" should be either declared global without being initialized towards this goal, or declared local and initialized to zero if used as a stand-alone counter in cpt01_gotodl.proc.",3/17/06ProjectF - TIM - 1551,Incorrect calculation of the total number of test failures in test procedure cpt01_clock.proc of SubSys1 Build 2.504,4,"In test procedure file cpt01_clock.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), the total number of test failures in the procedure has incorrectly been given in the ""wrapup"" section as the value for variable ""failcnt."" The correct value for the total test failures should be calculated as the difference between ""failcnt"" and ""old_failcnt."" That is, [total number of test failures] = failcnt - old_failcnt . The above assertion is supported by considering that the initial value of the global variable ""failcnt"" at the start of the procedure, as passed from the controlling procedure cpt01.proc at the running point where cpt01_clock is activated, has been preserved by setting it equal to ""old_failcnt.""",3/17/06ProjectF - TIM - 1550,Incomplete verification of PB-CDH.9 in test procedure cpt01.proc of SubSys1 Build 2.504,3,"In test procedure file cpt01.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), complete verification of mission requirement PB-CDH.9 is questionable. The successful loading of an ATS table containing 70 commands has been taken as the proof that the order of commands has been preserved by FSW. Without a more rigorous examination of the contents of the uploaded table, this test is not complete.",3/17/06ProjectF - TIM - 1549,Unjustified verification declaration of PB-CDH.21 in test procedure cpt01.proc of SubSys1 Build 2.504,3,"In test procedure file cpt01.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), as part of verification of mission requirement PB-CDH.21, screen shots of various telemetry pages are captured and displayed. The Mission Requirements Document (MRD), Revision G.5, December 2005, correctly identifies the verification method for this requirement to be the ""inspection"" of the relevant telemetry. However, following the capture and display of this telemetry, and without allowing for any input from a human observer upon the inspection of the telemetry results, cpt01.proc proceeds to generate an unqualified statement, which in effect declares the verification of PB-CDH.21. Without a proper inspection of the telemetry, it is impossible to make any judgment on the meaningfulness of the contents of this telemetry, let alone its correctness. The test procedure needs to allow for the appropriate interactive dialogue with the test conductor, including detailed instructions as to how to inspect the generated telemetry, followed by the test conductor entering the requirement verification results, which will then be recorded in the test log and result files as the test procedure is running.",3/17/06ProjectF - TIM - 1548,Unjustified verification declaration of PB-CDH.20 in test procedure cpt01.proc of SubSys1 Build 2.504,3,"In test procedure file cpt01.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), as part of verification of mission requirement PB-CDH.20, screen shots of various telemetry pages are captured and displayed. The Mission Requirements Document (MRD), Revision G.5, December 2005, correctly identifies the verification method for this requirement to be the ""inspection"" of the relevant telemetry. However, following the capture and display of this telemetry, and without allowing for any input from a human observer upon the inspection of the telemetry results, cpt01.proc proceeds to generate an unqualified statement, which in effect declares the verification of PB-CDH.20. Without a proper inspection of the telemetry, it is impossible to make any judgment on the meaningfulness of the contents of this telemetry, let alone its correctness. The test procedure needs to allow for the appropriate interactive dialogue with the test conductor, including detailed instructions as to how to inspect the generated telemetry, followed by the test conductor entering the requirement verification results, which will then be recorded in the test log and result files as the test procedure is running.",3/17/06ProjectF - TIM - 1547,Unjustified verification declaration of PB-CDH.23 in test procedure cpt01.proc of SubSys1 Build 2.504,3,"In test procedure file cpt01.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), as part of verification of mission requirement PB-CDH.23, screen shots of various telemetry pages are captured and displayed. The Mission Requirements Document (MRD), Revision G.5, December 2005, correctly identifies the verification method for this requirement to be the ""inspection"" of the relevant telemetry. However, following the capture and display of this telemetry, and without allowing for any input from a human observer upon the inspection of the telemetry results, cpt01.proc proceeds to generate an unqualified statement, which in effect declares the verification of PB-CDH.23. Without a proper inspection of the telemetry, it is impossible to make any judgment on the meaningfulness of the contents of this telemetry, let alone its correctness. The test procedure needs to allow for the appropriate interactive dialogue with the test conductor, including detailed instructions as to how to inspect the generated telemetry, followed by the test conductor entering the requirement verification results, which will then be recorded in the test log and result files as the test procedure is running.",3/17/06ProjectF - TIM - 1546,Unjustified verification declaration of PB-CDH.22 in test procedure cpt01.proc of SubSys1 Build 2.504,3,"In test procedure file cpt01.proc, which is part of the SubSys1 Build 2.504 Comprehensive Performance Test (CPT), as part of verification of mission requirement PB-CDH.22, screen shots of various telemetry pages are captured and displayed. The Mission Requirements Document (MRD), Revision G.5, December 2005, correctly identifies the verification method for this requirement to be the ""inspection"" of the relevant telemetry. However, following the capture and display of this telemetry, and without allowing for any input from a human observer upon the inspection of the telemetry results, cpt01.proc proceeds to generate an unqualified statement, which in effect declares the verification of PB-CDH.22. Without a proper inspection of the telemetry, it is impossible to make any judgment on the meaningfulness of the contents of this telemetry, let alone its correctness. The test procedure needs to allow for the appropriate interactive dialogue with the test conductor, including detailed instructions as to how to inspect the generated telemetry, followed by the test conductor entering the requirement verification results, which will then be recorded in the test log and result files the test procedure is running.",3/17/06ProjectF - TIM - 1544,Derivation from MRD requirement PB.FSW-13 is broken,3,"Ref. 1) ProjectF Flight Software Requirements Specification (ProjectF-FSW-SRS) Rev. 3.0, 3 February 2006 2) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), v2.2, 1 August 2005 3) ProjectF Mission Requirements Document (THM-SYS-001), Rev. G. Section 3.2 of Ref. 1 maps requirement PB.FSW-13 of Ref. 3 to Section 7.2.2 of Ref. 1. Section 7.2.2 of Ref. 1 maps requirement PB.FSW-13 of Ref. 3 to Ref. 2. Section 7.2 of Ref. 2 contains the functional requirements for Ref. 2. There is nothing in Section 7.2 of Ref. 2 that corresponds, as is, to PB.FSW-13. IV&V recommendation: Provide the mapping from requirement PB.FSW-13 of Ref. 3 to Section 7.2 of Ref. 2.",2/27/06ProjectF - TIM - 1543,Derivation from MRD requirement PB.FSW-14 is broken,3,"Ref. 1) ProjectF Flight Software Requirements Specification (ProjectF-FSW-SRS) Rev. 3.0, 3 February 2006 2) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), v2.2, 1 August 2005 3) ProjectF Mission Requirements Document (THM-SYS-001), Rev. G. Section 3.2 of Ref. 1 maps requirement PB.FSW-14 of Ref. 3 to Section 7.2.2 of Ref. 1. Section 7.2.2 of Ref. 1 maps requirement PB.FSW-14 of Ref. 3 to Ref. 2. Section 7.2 of Ref. 2 contains the functional requirements for Ref. 2. There is nothing in Section 7.2 of Ref. 2 that corresponds, as is, to PB.FSW-14. Recommendation: provide the mapping from requirement PB.FSW-14 of Ref. 3 to Section 7.2 of Ref. 2.",2/27/06ProjectF - TIM - 1542,Derivation from MRD requirement PB.FSW-12 is incomplete,3,"Ref. 1) ProjectF Flight Software Requirements Specification (ProjectF-FSW-SRS) Rev. 3.1, 14 June 2006 2) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), v2.2, 1 August 2005 3) ProjectF Mission Requirements Document (THM-SYS-001), Rev. G. Section 3.2 of Ref. 1 maps requirement PB.FSW-12 of Ref. 3 to Section 7.2.2 of Ref. 1. Section 7.2.2 of Ref. 1 maps requirement PB.FSW-12 of Ref. 3 to Ref. 2. Section 3.2 of Ref. 1 maps requirement PB.FSW-9 of Ref. 3 to requirement FSW.HS-04 of Ref. 1. FSW.HS-04 concerns only the *request to initiate* a warm restart. The actual reload of the code area, preserving RAM data areas, requires FSW functionality that lies outside of HS. Thus, there is a child requirement of PB.FSW-12 that should be allocated to FSW functionality outside of HS. Section 7.2 of Ref. 2 contains the Boot functional requirements. Nothing in Section 7.2 of Ref. 2 unambiguously corresponds to the mapping of PB.FSW-12 identified in Section 3.2 of Ref. 1. There is an informal recognition of the need to map PB.FSW-12 to Boot, in the ""Remark"" column for PB.FSW-12 on p. 27 of Ref. 1. (Note, incidentally, that there is no ""Requirement 7.1.1"" in Ref. 2, as claimed in the ""Remark"" column for PB.FSW-12 on p. 27 of Ref. 1; the reference should be to Section 7.2 of Ref. 2.) Recommendation: provide the explicit mapping from requirement PB.FSW-12 of Ref. 3 to Section 7.2 of Ref. 2.",2/27/06ProjectF - TIM - 1541,Aggregate MRD timing requirement PB.FSW-10 is allocated to multiple CSCs,3,"Ref. 1) ProjectF Flight Software Requirements Specification (ProjectF-FSW-SRS) Rev. 3.1, 14 June 2006 2) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), v2.2, 1 August 2005 3) ProjectF Mission Requirements Document (THM-SYS-001), Rev. G. PB.FSW-10, Section 3.2 of Ref. 1 allocates an aggregate timing value to multiple CSCs (Boot, and Command Processing). No distribution of that aggregate timing requirement, by CSC, is provided, however. Recommendation: Allocate some part of the timing requirement to Boot, and the remainder to Command Processing.",2/27/06ProjectF - TIM - 1540,Derivation from MRD PB.FSW-10 is broken,4,"Ref. 1) ProjectF Flight Software Requirements Specification (ProjectF-FSW-SRS) Rev. 3.0, 3 February 2006 2) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), v2.2, 1 August 2005 3) ProjectF Mission Requirements Document (THM-SYS-001), Rev. G. Section 3.2 of Ref. 1 maps requirement PB.FSW-10 of Ref. 3 to Section 7.2.2 of Ref. 1. Section 7.2.2 of Ref. 1 maps requirement PB.FSW-10 of Ref. 3 to Ref. 2. Section 7.2 of Ref. 2 contains the functional requirements of Ref. 2. There is nothing in Section 7.2 Ref. 2 corresponding to this mapping. Recommendation: provide the mapping from requirement PB.FSW-10 of Ref. 3 to Section 7.2 of Ref. 2.",2/27/06ProjectF - TIM - 1539,Derivation from MRD PB.FSW-9 is broken,4,"Ref. 1) ProjectF Flight Software Requirements Specification (ProjectF-FSW-SRS) Rev. 3.0, 3 February 2006 2) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), v2.2, 1 August 2005. 3) ProjectF Mission Requirements Document (THM-SYS-001), Rev. G. Section 3.2 of Ref. 1 maps requirement PB.FSW-9 of Ref. 3 to requirement FSW.HS-05 of Ref. 1. FSW.HS-05 concerns only the *request to initiate* a Cold Start. The actual execution of a Cold Start requires Boot functionality. Thus, there is a child requirement of PB.FSW-9 that should be allocated to the Boot CSC. Section 7.2 of Ref. 2 contains the Boot functional requirements. Nothing in Section 7.2 of Ref. 2 corresponds to the mapping of PB.FSW-9 identified in Section 3.2 of Ref. 1. There is an informal recognition of the need to map PB.FSW-9 to Boot, in the ""Remark"" column for PB.FSW-9 on p. 27 of Ref. 1. (Note, incidentally, that there is no ""Requirement 7.1.1"", as referenced in the ""Remark"" column for PB.FSW-9 on p. 27 of Ref. 1 in Ref. 2; the reference should be to Section 7.2 of Ref. 2.) Recommendation: provide the mapping from requirement PB.FSW-9 of Ref. 3 to Section 7.2 of Ref. 2.",2/27/06ProjectF - TIM - 1538,Lack of Requirements Tracing in the IDPU Comprehensive Performance Test (CPT),3,"Related Artifacts: (1) ProjectF IDPU FSW Comprehensive Performance Test THM_FSW_009 dated: 08/01/05 According to the objective of the Comprehensive Performance Test, the tests that have been prepared for the CPT are to verify ""each module of the Instrument Flight Software (FSW) against its requirements"". While the tests are traced to the CSCs, there is no relationship set up between the requirements and the individual tests. In addition, it is not clear as to whether the ""requirements"" mentioned are to be found in the MRD, IDPU SRS, or elsewhere. Recommendation: Provide a cross-reference from requirements to test cases in the referenced document.",2/14/06ProjectF - TIM - 1537,SubSys1 FSW v3.003: Lock flaw in function DS_clear_bulk,3,"References: 1) SubSys1 FSW v3.003 2) rtems C Users Guide, v4.6.4 Statement of problem: -------------------- ProjectF functions DS_write_lock and DS_write_unlock are mutex semaphore-management wrappers that are fundamental to state-integrity management in ProjectF FSW data-store (DS) functions. The design-intent of these lock functions is to block potential state-corrupting interrupts in critical DS segments. DS_write_lock and DS_write_unlock suppress the return values of the rtems functions on which they stand. The ProjectF DS functions which use the DS-lock functions are thus forced to assume these lock-management functions will always be successful, given the way the lock functions are implemented. These are design and implementation flaws which fundamentally but unnecessarily compromise the robustness of the locks, the diagnosability of lock failures, and the integrity of state in ProjectF's DS functions which use the lock. If DS_write_lock fails, the memory to which DS function DS_clear_bulk writes could be corrupted by an interrupt, and ProjectF could be left in an incoherent state. If DS_write_unlock fails, ProjectF could fail to respond to time-critical events. The appropriate abstraction of the lock functions for ProjectF memory-copy use is in the OS-wrapper heritage code written by A. Cudmore and A. Ferrer, in FSW file osutils.c (see ""Recommendations, below), on which DS_write_lock and DS_write_unlock are based. Recommendation: -------------- Replace DS_write_lock and DS_write_unlock with calls to OS_MutSemTake and OS_MutSemGive respectively. In all calls to these functions, test the return values for ""success"". If the functions do not return a ""success"" value, report the failure through a logging mechanism (such as an eventf call), then call an exception handler that includes the possibility of invoking a reboot if necessary. Supporting analysis: ------------------- Function DS_clear_bulk is defined in ~\ds\dsmain.c. It calls DS_write_lock at line 1817 and releases the lock at line 1819. The lock blocks interrupts while function memset writes the value of zero (0) to the whole of bulk memory. Functions void DS_write_lock (void) and void DS_write_unlock (void) are defined in file ~/ds/dsutils.c at lines 398-406. DS_write_lock and DS_write_unlock are merely void-return wrappers for lower-level wrappers for: word OS_MutSemTake ( u_dword *generic_mut ) and word OS_MutSemGive ( u_dword *generic_mut ) respectively, defined in FSW ~/osutils.c, lines 1089-1109. Note specifically that OS_MutSemGive and OS_SemMutGive have *word* **** return values which are by implementation neither saved nor tested **** by DS_write_lock and DS_write_unlock OS_MutSemTake and OS_MutSemGive are themselves only wrappers for rtems semaphore services word rtems_semaphore_obtain (...) and word rtems_semaphore_release (...) respectively. rtems_semaphore_obtain and rtems_semaphore_release return values are described in the following excerpts from the rtems C Users Guide, URL http://www.rtems.com/onlinedocs/releases/rtemsdocs-4.6.4/share/rtems/pdf/c_user.pdf. Note in particular the robust set of ""failed"" return values which these services automatically provide, but which are by design obliterated by the FSW v3.003 implementation of DS_write_lock and DS_write_unlock. *********** begin extract from the rtems C Users Guide for rtems_semaphore_obtain 9.4.4 SEMAPHORE OBTAIN - Acquire a semaphore CALLING SEQUENCE: rtems_status_code rtems_semaphore_obtain( rtems_id id, rtems_unsigned32 option_set, rtems_interval timeout ); DIRECTIVE STATUS CODES: RTEMS_SUCCESSFUL - semaphore obtained successfully RTEMS_UNSATISFIED - semaphore not available RTEMS_TIMEOUT - timed out waiting for semaphore RTEMS_OBJECT_WAS_DELETED - semaphore deleted while waiting RTEMS_INVALID_ID - invalid semaphore id DESCRIPTION: This directive acquires the semaphore specified by id. The RTEMS_WAIT and RTEMS_NO_WAIT components of the options parameter indicate whether the calling task wants to wait for the semaphore to become available or return immediately if the semaphore is not currently available. With either RTEMS_WAIT or RTEMS_NO_WAIT, if the current semaphore count is positive, then it is decremented by one and the semaphore is successfully acquired by returning immediately with a successful return code. If the calling task chooses to return immediately and the current semaphore count is zero or negative, then a status code is returned indicating that the semaphore is not available. If the calling task chooses to wait for a semaphore and the current semaphore count is zero or negative, then it is decremented by one and the calling task is placed on the semaphore’s wait queue and blocked. If the semaphore was created with the RTEMS_PRIORITY attribute, then the calling task is inserted into the queue according to its priority. However, if the semaphore was created with the RTEMS_FIFO attribute, then the calling task is placed at the rear of the wait queue. If the binary semaphore was created with the RTEMS_INHERIT_PRIORITY attribute, then the priority of the task currently holding the binary semaphore is guaranteed to be greater than or equal to that of the blocking task. If the binary semaphore was created with the RTEMS_PRIORITY_CEILING attribute, a task successfully obtains the semaphore, and the priority of that task is greater than the ceiling priority for this semaphore, then the priority of the task obtaining the semaphore is elevated to that of the ceiling. The timeout parameter specifies the maximum interval the calling task is willing to be blocked waiting for the semaphore. If it is set to RTEMS_NO_TIMEOUT, then the calling task will wait forever. If the semaphore is available or the RTEMS_NO_WAIT option component is set, then timeout is ignored. NOTES: The following semaphore acquisition option constants are defined by RTEMS: • RTEMS_WAIT - task will wait for semaphore (default) • RTEMS_NO_WAIT - task should not wait Attempting to obtain a global semaphore which does not reside on the local node will generate a request to the remote node to access the semaphore. If the semaphore is not available and RTEMS_NO_WAIT was not specified, then the task must be blocked until the semaphore is released. A proxy is allocated on the remote node to represent the task until the semaphore is released. A clock tick is required to support the timeout functionality of this directive. ******** end extract from rtems C Users Guide: rtems_semaphore_obtain ******** begin extract from rtems C Users Guide: rtems_semaphore_release 9.4.5 SEMAPHORE RELEASE - Release a semaphore CALLING SEQUENCE: rtems_status_code rtems_semaphore_release( rtems_id id ); DIRECTIVE STATUS CODES: RTEMS_SUCCESSFUL - semaphore released successfully RTEMS_INVALID_ID - invalid semaphore id RTEMS_NOT_OWNER_OF_RESOURCE - calling task does not own semaphore DESCRIPTION: This directive releases the semaphore specified by id. The semaphore count is incremented by one. If the count is zero or negative, then the first task on this semaphore’s wait queue is removed and unblocked. The unblocked task may preempt the running task if the running task’s preemption mode is enabled and the unblocked task has a higher priority than the running task. NOTES: The calling task may be preempted if it causes a higher priority task to be made ready for execution. Releasing a global semaphore which does not reside on the local node will generate a request telling the remote node to release the semaphore. If the task to be unblocked resides on a different node from the semaphore, then the semaphore allocation is forwarded to the appropriate node, the waiting task is unblocked, and the proxy used to represent the task is reclaimed. The outermost release of a local, binary, priority inheritance or priority ceiling semaphore may result in the calling task having its priority lowered. This will occur if the calling task holds no other binary semaphores and it has inherited a higher priority. ******** end extract from rtems C Users Guide: rtems_semaphore_release",2/10/06ProjectF - TIM - 1536,FSW v3.003 lock flaw in function DS_three_copy,3,"Ref. 1) FSW v3.003 2) rtems C Users Guide, v4.6.4 Statement of problem -------------------- ProjectF functions DS_write_lock and DS_write_unlock are mutex semaphore-management wrappers that are fundamental to state-integrity management in ProjectF FSW data-storage (DS) functions. The design-intent of these lock functions is to block potential state-corrupting interrupts in critical segments. DS_write_lock and DS_write_unlock suppress the return values of the rtems functions on which they stand. The ProjectF DS functions which use the DS-lock functions are thus forced to assume these lock-management functions will always be successful, given the way the lock functions are implemented. These are design and implementation flaws which fundamentally but unnecessarily compromise the robustness of the locks, the diagnosability of lock failures, and the integrity of state in ProjectF's DS functions which use the lock. If DS_write_lock fails, the memory to which DS function DS_three_copy writes could be corrupted by an interrupt, and ProjectF could be left in an incoherent state. If DS_write_unlock fails, ProjectF could fail to respond to time-critical events. The appropriate abstraction of the lock functions for ProjectF memory-copy use is in the OS-wrapper heritage code written by A. Cudmore and A. Ferrer, in FSW file osutils.c (see ""Recommendations, below), on which DS_write_lock and DS_write_unlock are based. Recommendation -------------- Replace DS_write_lock and DS_write_unlock with calls to OS_MutSemTake and OS_MutSemGive respectively. In all calls to these functions, test the return values for ""success"". If the functions do not return a ""success"" value, report the failure through a logging mechanism (such as an eventf call), then call an exception handler that includes the possibility of invoking a reboot if necessary. Supporting analysis ------------------- Function DS_three_copy is defined in ~\ds\dsutils.c. It calls DS_write_lock at line 290 and releases the lock at line 294. The lock blocks interrupts while function OS_lmemcpy writes copies of data to three memory regions. Functions void DS_write_lock (void) and void DS_write_unlock (void) are defined in file ~/ds/dsutils.c at lines 398-406. DS_write_lock and DS_write_unlock are merely void-return wrappers for lower-level wrappers for: word OS_MutSemTake ( u_dword *generic_mut ) and word OS_MutSemGive ( u_dword *generic_mut ) respectively, defined in FSW ~/osutils.c, lines 1089-1109. Note specifically that OS_MutSemGive and OS_SemMutGive have *word* **** return values which are by implementation neither saved nor tested **** by DS_write_lock and DS_write_unlock OS_MutSemTake and OS_MutSemGive are themselves only wrappers for rtems semaphore services word rtems_semaphore_obtain (...) and word rtems_semaphore_release (...) respectively. rtems_semaphore_obtain and rtems_semaphore_release return values are described in the following excerpts from the rtems C Users Guide, URL http://www.rtems.com/onlinedocs/releases/rtemsdocs-4.6.4/share/rtems/pdf/c_user.pdf. Note in particular the robust set of ""failed"" return values which these services automatically provide, but which are by design obliterated by the FSW v3.003 implementation of DS_write_lock and DS_write_unlock. *********** begin extract from the rtems C Users Guide for rtems_semaphore_obtain 9.4.4 SEMAPHORE OBTAIN - Acquire a semaphore CALLING SEQUENCE: rtems_status_code rtems_semaphore_obtain( rtems_id id, rtems_unsigned32 option_set, rtems_interval timeout ); DIRECTIVE STATUS CODES: RTEMS_SUCCESSFUL - semaphore obtained successfully RTEMS_UNSATISFIED - semaphore not available RTEMS_TIMEOUT - timed out waiting for semaphore RTEMS_OBJECT_WAS_DELETED - semaphore deleted while waiting RTEMS_INVALID_ID - invalid semaphore id DESCRIPTION: This directive acquires the semaphore specified by id. The RTEMS_WAIT and RTEMS_NO_WAIT components of the options parameter indicate whether the calling task wants to wait for the semaphore to become available or return immediately if the semaphore is not currently available. With either RTEMS_WAIT or RTEMS_NO_WAIT, if the current semaphore count is positive, then it is decremented by one and the semaphore is successfully acquired by returning immediately with a successful return code. If the calling task chooses to return immediately and the current semaphore count is zero or negative, then a status code is returned indicating that the semaphore is not available. If the calling task chooses to wait for a semaphore and the current semaphore count is zero or negative, then it is decremented by one and the calling task is placed on the semaphore’s wait queue and blocked. If the semaphore was created with the RTEMS_PRIORITY attribute, then the calling task is inserted into the queue according to its priority. However, if the semaphore was created with the RTEMS_FIFO attribute, then the calling task is placed at the rear of the wait queue. If the binary semaphore was created with the RTEMS_INHERIT_PRIORITY attribute, then the priority of the task currently holding the binary semaphore is guaranteed to be greater than or equal to that of the blocking task. If the binary semaphore was created with the RTEMS_PRIORITY_CEILING attribute, a task successfully obtains the semaphore, and the priority of that task is greater than the ceiling priority for this semaphore, then the priority of the task obtaining the semaphore is elevated to that of the ceiling. The timeout parameter specifies the maximum interval the calling task is willing to be blocked waiting for the semaphore. If it is set to RTEMS_NO_TIMEOUT, then the calling task will wait forever. If the semaphore is available or the RTEMS_NO_WAIT option component is set, then timeout is ignored. NOTES: The following semaphore acquisition option constants are defined by RTEMS: • RTEMS_WAIT - task will wait for semaphore (default) • RTEMS_NO_WAIT - task should not wait Attempting to obtain a global semaphore which does not reside on the local node will generate a request to the remote node to access the semaphore. If the semaphore is not available and RTEMS_NO_WAIT was not specified, then the task must be blocked until the semaphore is released. A proxy is allocated on the remote node to represent the task until the semaphore is released. A clock tick is required to support the timeout functionality of this directive. ******** end extract from rtems C Users Guide: rtems_semaphore_obtain ******** begin extract from rtems C Users Guide: rtems_semaphore_release 9.4.5 SEMAPHORE RELEASE - Release a semaphore CALLING SEQUENCE: rtems_status_code rtems_semaphore_release( rtems_id id ); DIRECTIVE STATUS CODES: RTEMS_SUCCESSFUL - semaphore released successfully RTEMS_INVALID_ID - invalid semaphore id RTEMS_NOT_OWNER_OF_RESOURCE - calling task does not own semaphore DESCRIPTION: This directive releases the semaphore specified by id. The semaphore count is incremented by one. If the count is zero or negative, then the first task on this semaphore’s wait queue is removed and unblocked. The unblocked task may preempt the running task if the running task’s preemption mode is enabled and the unblocked task has a higher priority than the running task. NOTES: The calling task may be preempted if it causes a higher priority task to be made ready for execution. Releasing a global semaphore which does not reside on the local node will generate a request telling the remote node to release the semaphore. If the task to be unblocked resides on a different node from the semaphore, then the semaphore allocation is forwarded to the appropriate node, the waiting task is unblocked, and the proxy used to represent the task is reclaimed. The outermost release of a local, binary, priority inheritance or priority ceiling semaphore may result in the calling task having its priority lowered. This will occur if the calling task holds no other binary semaphores and it has inherited a higher priority. ******** end extract from rtems C Users Guide: rtems_semaphore_release",2/10/06ProjectF - TIM - 1535,FSW v3.003: memory-scrub lock management design flaws,3,"Ref. 1) ProjectF FSW code, v3.003 2) rtems C Users Guide, v4.6.4 Statement of problem -------------------- ProjectF functions DS_write_lock and DS_write_unlock are mutex semaphore-management wrappers that are fundamental to state-integrity management in ProjectF FSW memory-scrubbing functions. The design-intent of these lock functions is to block potential state-corrupting interrupts in critical memory-scrubbing segments. DS_write_lock and DS_write_unlock ignore the return values of the rtems functions on which they stand. The ProjectF memory-scrubbing functions are thus forced to assume these lock-management functions will always be successful, given the way the lock functions are implemented. These are design and implementation flaws which fundamentally but unnecessarily compromise the robustness of the locks, the diagnosability of lock failures, and the integrity of state in ProjectF's memory-scrub functions. If DS_write_lock fails, the ProjectF memory scrub function could be interrupted and ProjectF could be left in an incoherent state. If DS_write_unlock fails, ProjectF could fail to respond to time-critical events. The appropriate abstraction of the lock functions for ProjectF memory-scrubbing use is in the OS-wrapper heritage code written by A. Cudmore and A. Ferrer, in FSW file osutils.c., on which DS_write_lock and DS_write_unlock are based. Recommendation -------------- Replace DS_write_lock and DS_write_unlock with calls to OS_MutSemTake and OS_MutSemGive respectively. In all calls to these functions, test the return values for ""success"". If the functions do not return a ""success"" value, report the failure through a logging mechanism (such as an eventf call), then call an exception handler that includes the possibility of invoking a reboot if necessary. Supporting analysis ------------------- Functions void DS_write_lock (void) and void DS_write_unlock (void) are defined in file ~/ds/dsutils.c at lines 398-406. DS_write_lock and DS_write_unlock are merely void-return wrappers for lower-level wrappers for: word OS_MutSemTake ( u_dword *generic_mut ) and word OS_MutSemGive ( u_dword *generic_mut ) respectively, defined in FSW ~/osutils.c, lines 1089-1109. Note specifically that OS_MutSemGive and OS_SemMutGive have *word* **** return values which are by implementation **** neither saved nor tested **** by DS_write_lock and DS_write_unlock OS_MutSemTake and OS_MutSemGive are themselves only wrappers for rtems semaphore services word rtems_semaphore_obtain (...) and word rtems_semaphore_release (...) respectively. rtems_semaphore_obtain and rtems_semaphore_release return values are described in the following excerpts from the rtems C Users Guide, URL http://www.rtems.com/onlinedocs/releases/rtemsdocs-4.6.4/share/rtems/pdf/c_user.pdf. Note in particular the robust set of ""failed"" return values which these services automatically provide, but which are by design obliterated by the FSW v3.003 implementation of DS_write_lock and DS_write_unlock. *********** begin extract from the rtems C Users Guide for rtems_semaphore_obtain 9.4.4 SEMAPHORE OBTAIN - Acquire a semaphore CALLING SEQUENCE: rtems_status_code rtems_semaphore_obtain( rtems_id id, rtems_unsigned32 option_set, rtems_interval timeout ); DIRECTIVE STATUS CODES: RTEMS_SUCCESSFUL - semaphore obtained successfully RTEMS_UNSATISFIED - semaphore not available RTEMS_TIMEOUT - timed out waiting for semaphore RTEMS_OBJECT_WAS_DELETED - semaphore deleted while waiting RTEMS_INVALID_ID - invalid semaphore id DESCRIPTION: This directive acquires the semaphore specified by id. The RTEMS_WAIT and RTEMS_NO_WAIT components of the options parameter indicate whether the calling task wants to wait for the semaphore to become available or return immediately if the semaphore is not currently available. With either RTEMS_WAIT or RTEMS_NO_WAIT, if the current semaphore count is positive, then it is decremented by one and the semaphore is successfully acquired by returning immediately with a successful return code. If the calling task chooses to return immediately and the current semaphore count is zero or negative, then a status code is returned indicating that the semaphore is not available. If the calling task chooses to wait for a semaphore and the current semaphore count is zero or negative, then it is decremented by one and the calling task is placed on the semaphore’s wait queue and blocked. If the semaphore was created with the RTEMS_PRIORITY attribute, then the calling task is inserted into the queue according to its priority. However, if the semaphore was created with the RTEMS_FIFO attribute, then the calling task is placed at the rear of the wait queue. If the binary semaphore was created with the RTEMS_INHERIT_PRIORITY attribute, then the priority of the task currently holding the binary semaphore is guaranteed to be greater than or equal to that of the blocking task. If the binary semaphore was created with the RTEMS_PRIORITY_CEILING attribute, a task successfully obtains the semaphore, and the priority of that task is greater than the ceiling priority for this semaphore, then the priority of the task obtaining the semaphore is elevated to that of the ceiling. The timeout parameter specifies the maximum interval the calling task is willing to be blocked waiting for the semaphore. If it is set to RTEMS_NO_TIMEOUT, then the calling task will wait forever. If the semaphore is available or the RTEMS_NO_WAIT option component is set, then timeout is ignored. NOTES: The following semaphore acquisition option constants are defined by RTEMS: • RTEMS_WAIT - task will wait for semaphore (default) • RTEMS_NO_WAIT - task should not wait Attempting to obtain a global semaphore which does not reside on the local node will generate a request to the remote node to access the semaphore. If the semaphore is not available and RTEMS_NO_WAIT was not specified, then the task must be blocked until the semaphore is released. A proxy is allocated on the remote node to represent the task until the semaphore is released. A clock tick is required to support the timeout functionality of this directive. ******** end extract from rtems C Users Guide: rtems_semaphore_obtain ******** begin extract from rtems C Users Guide: rtems_semaphore_release 9.4.5 SEMAPHORE RELEASE - Release a semaphore CALLING SEQUENCE: rtems_status_code rtems_semaphore_release( rtems_id id ); DIRECTIVE STATUS CODES: RTEMS_SUCCESSFUL - semaphore released successfully RTEMS_INVALID_ID - invalid semaphore id RTEMS_NOT_OWNER_OF_RESOURCE - calling task does not own semaphore DESCRIPTION: This directive releases the semaphore specified by id. The semaphore count is incremented by one. If the count is zero or negative, then the first task on this semaphore’s wait queue is removed and unblocked. The unblocked task may preempt the running task if the running task’s preemption mode is enabled and the unblocked task has a higher priority than the running task. NOTES: The calling task may be preempted if it causes a higher priority task to be made ready for execution. Releasing a global semaphore which does not reside on the local node will generate a request telling the remote node to release the semaphore. If the task to be unblocked resides on a different node from the semaphore, then the semaphore allocation is forwarded to the appropriate node, the waiting task is unblocked, and the proxy used to represent the task is reclaimed. The outermost release of a local, binary, priority inheritance or priority ceiling semaphore may result in the calling task having its priority lowered. This will occur if the calling task holds no other binary semaphores and it has inherited a higher priority. ******** end extract from rtems C Users Guide: rtems_semaphore_release",2/3/06ProjectF - TIM - 1534,SubSys1 FSW v2.504 unused objects,3,"Ref. 1) SubSys1 FSW v2.504 source, delivered to ProjectF IV&V December 2005 2) Zip file: ""Unofficially everything needed to analyze SubSys1 v2."" Attached to email: From: ""Chris Xenophontos"" <cxenophontos@hammers.com> To: ""'Judi Connelly'"" <Judith.R.Connelly@nasa.gov> Cc: ""'Chris Xenophontos'"" <cxenophontos@hammers.com> Subject: RE: Fwd: here is the full list of missing header files Date: Sat, 6 Aug 2005 16:08:00 -0400 3) Scientific Toolworks, Inc. Understand for C++. v1.4, Build 237. 2005. IV&V used Ref. 3 to identify unused objects (i.e., declared/defined, but not used) in the union of Refs. 1 and 2. This analysis detected approximately 800 unused objects. These unused objects are implementation/design errors or artifacts of configuration management defects, and in either case are maintenance traps. The Unused Objects Report from Ref. 3 is an attachment to ""Relationships"". Consensus production-class software implementation practices since the mid-1970s have required the removal of unused objects by the time source is submitted for *unit* test, because the presence of unused objects unnecessarily increases the cost and schedule of any subsequent development, analysis, testing, and maintenance. The presence of such unused objects is generally regarded as a mark of immature code. Recommendation: If an unused objects is an implementation error, correct the implementation/design error. If the presence of an unused object is a configuration management problem, fix the CM problem. Else, delete the object declaration/definition from the source.",1/4/06ProjectF - TIM - 1533,SubSys1 FSW v2.504 unused functions,3,"Ref. 1) SubSys1 FSW v2.504 source, delivered to ProjectF IV&V December 2005 2) Zip file: ""Unofficially everything needed to analyze SubSys1 v2."" Attached to email: From: ""Chris Xenophontos"" <cxenophontos@hammers.com> To: ""'Judi Connelly'"" <Judith.R.Connelly@nasa.gov> Cc: ""'Chris Xenophontos'"" <cxenophontos@hammers.com> Subject: RE: Fwd: here is the full list of missing header files Date: Sat, 6 Aug 2005 16:08:00 -0400 3) Scientific Toolworks, Inc. Understand for C++. v1.4, Build 237. 2005. IV&V used Ref. 3 to identify unused functions (i.e., declared/defined, but not used) in the union of Refs. 1 and 2. This analysis detected 73 unused functions. These unused functions are implementation/design errors or artifacts of configuration management defects, and in either case are maintenance traps. The Unused Functions Report generated by Ref. 3 is accessible as a ""Relationships"" attachment. Consensus production-class software implementation practices since the mid-1970s have required the removal of unused functions by the time source is submitted for *unit* test, because the presence of unused objects (including unused functions) unnecessarily increases the cost and schedule of any subsequent development, analysis, testing, and maintenance. The presence of such unused functions is generally regarded as a mark of immature code. Recommendation: If an unused function is an implementation error, correct the implementation/design error. If the presence of an unused function is a configuration management problem, fix the CM problem. Else, delete the function declaration/definition from the source.",1/4/06ProjectF - TIM - 1532,FSW SRS v3.0 command and telemetry requirements (continue to be) missing,3,"References (1) ProjectF SubSys1 FSW SRS, v2.2 (2) ProjectF SubSys1 FSW Software Users Guide, Draft sections, December 2005 (3) ProjectF Flight Software Requirements Specification (ProjectF-FSW-SRS) Rev. 3.0, 3 February 2006 Refs. 1 and 3 (p. 26) state that detailed command and telemetry requirements will be contained in the Software Users Guide (Ref. 2). Ref. 2 does not contain these details. The project stated (on 8 December 2005 and 12 January 2006) that a future version of Ref. 2 will contain the detailed command and telemetry requirements list. Ref. 3 is, and will continue to be, incomplete until the command and telemetry details mentioned above are published as requirements. As of 2 March 2006, testing of the above-mentioned command and telemetry ""requirements"" was in progress, and the project claimed that several of these ""requirements"" had been tested, even though these ""requirements"" were contained in no requirements artifact identified as such by the project. Recommendation: immediately publish a specific, stable, and complete list of command and telemetry requirements, designated as such. Map this list into the test procedures.",12/13/05ProjectF - TIM - 1531,SubSys1 FSW 3.003: potential for corruption of global thruster START/STOP time values,3,"Ref. [1] ProjectF FSW v3.003, ~22 March 2006 statTop.thr[ thruster ID ][ START ].currRegTimes statTop.thr[ thruster ID ][ STOP ].currRegTimes Given that SN & TF tasks read and write to this pair of global variables, can SN be preempted in such a way that the values are changed unexpectedly? Unlike other global variables throughout the source code, no measures have been taken in the code to ensure that a write operation to a START/STOP pair for a thruster is executed without being interrupted. The project responded in late October 2005 by saying that the situation would not arise due to the architectural design of the system. Since this fact was not evident from the source code, IV&V requested detailed information on this, which the project agreed to provide. The requested information had not been provided as of 28 March 2006.",10/27/05ProjectF - TIM - 1530,SubSys1 FSW 3.10: potential for loss of event-order information in event messages,3,"Refs. [1] SubSys1 FSW Build 3.10 Line 209 in file hsutils.c in [1] is in function eventf, which provides an API for event-reporting and signaling throughout FSW (eventf is called from ~400 places in [1]): pkt.hdr.seq_count = os_event_seq_no++; If a task is executing line 209 of hsutils.c when it is preempted by a higher priority task and this higher priority task then calls eventf itself, there is a chance that the variable os_event_seq_no will be incremented by the higher-priority task, and thus the values of os_event_seq_no will not reflect the actual order of event-occurrence when control returns the to the preempted task. The intent of os_event_seq_no is to preserve the actual order of event-occurrences in the sequence of values of os_event_seq_no. This implies that Line 209 is in a critical region of the code and thus must be interrupt-protected. Recommendation: Frame line 209 in hsutils.c by an interrupt lock/unlock.",10/27/05ProjectF - TIM - 1529,manifest arrays found in procedure delcarations,4,"SubSys1 FSW Build 2 Tool Used: Splint 3.1.1 A number of references were found where the declaration or definition of a function contains an array formal parameter that includes a size specifier. Because an array formal parameter is treated as a pointer in C, the size specifier will be ignored in these cases. The list of these is attached to this TIM (see under references). Note that although splint complains about this construct, it could actually be helpful for type checking by static analysis tools.",10/26/05ProjectF - TIM - 1528,strange unsigned value comparisons,3,"SubSys1 FSW Build 2 Tool Used: Splint 3.1.1 There are a number of unsigned values comparisons in the code that consist of an unsigned value being compared to zero as follows: ""unsigned value <= 0"". This is a coding error. The list of these is attched to this TIM (see under relationships). Recommendation: fix the error.",10/26/05ProjectF - TIM - 1527,dangerous floating point comparisons,3,"SubSys1 FSW Build 2 Tool Used: Splint 3.1.1 Two real (float, double, or long double) values are compared directly. This may produce unexpected results since direct floating point comparisons are vendor-specific. A list of these comparisons is attached to this TIM (see under relationships). Recommendation: compare the difference to FLT_EPSILON or DBL_EPSILON.",10/26/05ProjectF - TIM - 1526,Inconsistent Extern Declaratives in SubSys1 FSW,3,"SubSys1 FSW Build 2 The following variables have extern declarations that do not match the actual variable declaration. In each case, an extern is declared as a scalar type (u_word) where the actual declaration is an array. Whether these implicit type conversions behave as expected can be compiler-release-specific. SBlog_pipes_enabled SBpacket_log SBpipe_tlm_overruns SBpipelines SBstream_table SBstrm_tlm_overruns ats_info_table ci_cb_buffer ci_packet_buffer ci_tf_buffer cs_control_table cs_master cs_master_DRAM cs_mem_scrub_table cs_mem_scrub_table_eeprom ds_filter_table_1 ds_filter_table_1_eeprom ds_filter_table_2 ds_filter_table_2_eeprom ds_filter_table_3 ds_filter_table_3_eeprom ds_filter_table_4 ds_filter_table_4_eeprom ds_filter_table_5 ds_filter_table_5_eeprom ds_filter_table_6 ds_filter_table_6_eeprom ds_filter_table_7 ds_filter_table_7_eeprom ds_filter_table_8 ds_filter_table_8_eeprom ds_quota_table ds_quota_table_eeprom ds_segment_table ds_segment_table_eeprom ds_vr_map_table ds_vr_map_table_eeprom hs_event_table hs_event_table_eeprom hs_nm_tbl hs_nm_tbl_eeprom lm_limit_entry_table lm_limit_entry_table_eeprom os_mode_log os_object_table rts_info_table sm_scp_table sm_scp_table_eeprom sm_tbl_working_buffer snTbl snTblEeprom to_channel_priority_table to_filter_table1 to_filter_table2 to_filter_table3 to_filter_table4 to_filter_table5 to_filter_table6 to_filter_table7 to_filter_table8 Recommendation: make the types consistent",10/26/05ProjectF - TIM - 1525,return values systematically ignored,3,SubSys1 FSW Build 2 Return values for certain functions are ignored systematically throughout the code. Return values should be handled or the functions changed to return nothing (i.e. void). These functions are: CS_build_checksu OS_BinSemGive OS_BinSemTake OS_BinSemTimedWait OS_MutSemGive OS_MutSemTake PerformCsi2Transfer RetrievePcmTelemtry SBget_pipeline_descriptor SBget_stream_descriptor SBint_send SBtask_delay TO_Configure_Cim TO_DisableScienceDataDownlink TO_EnableScienceDataDownlink TO_OR_abort_output TO_OR_skip_over_block TO_clear_pipe TO_insert_pkt_data TO_insert_vcdu_data TO_q_insert eventf rtems_task_delete rtems_task_set_priority rtems_task_wake_after snHasCmddStopTimeBeenReached snSetOrClearSspStatusBit xmain,10/26/05ProjectF - TIM - 1524,fall-through Case statement (no 'break'),3,"SubSys1 FSW v2 File gstask.c:190 Case HS_SEND_HK_PACKET_SID falls through to the next case (i.e. there is no 'break'). If this is intentional, an explanatory comment should be included. Else, a 'break' should be inserted in this case clause. -------------- SubSys1 FSW v2.504 File gstask.c: 190 & following case HS_SEND_HK_PACKET_SID: gtHk.hdr.seq_count++; sbRtrnStatus = SBsend_copy( &gtHk ); // NOTE: Software Bus Processing will post an event if SBsend_copy fails break;",10/26/05ProjectF - TIM - 1523,no value returned from function,3,rtems.c:188 No value is returned from this function. The function is declared to return a rtems_task. The code assumes that the call is successful. It does not explicitly handle the case if the call is not successful. Recommendation: modify the code to explicitly manage the returned value.,10/26/05ProjectF - TIM - 1522,SubSys1 FSW - macro defined twice,3,"SubSys1 FSW v2 and SubSys1 FSW v2.504 and SubSys1 FSW v3.1 releases reference file rhcf5208.h: 152:/* Interrupt Port assignment bits */ 153:#define RHCF5208_IRQPAR(mbar) RHCF5208_REG8(mbar,0x006) 158:/* PLL Control Register */ 159:#define RHCF5208_IRQPAR(mbar) RHCF5208_REG8(mbar,0x008) The macro, RHCF5208_IRQPAR, is defined twice in this file. What a compiler does with a multiply defined macro is vendor-specific and can be sensitive to what compiler options are in effect. Furthermore, a multiply defined macro can be sensitive to compilation order. Finally, a mutiply defined macro may be evidence of a coding error. IV&V Recommendation: Define the macro only once in this file.",10/26/05ProjectF - TIM - 1521,code makes risky assumption,3,SubSys1 FSW Build 2 csscrub.c:55-57 The referenced lines assume that the operation is atomic. Making this kind of an assumption is very risky. The operation in question should be verified as either atomic or not and if not changes should made to the code where necessary to ensure that the applicable operations are atomic.,10/26/05ProjectF - TIM - 1520,AC_UNITTEST misspelled,3,SubSys1 FSW Build 2 thrusterqueue.c:229 There are many instances of the conditional AC_UNITTEST (two Ts) found throughout the source code plus a single instance of AC_UNITEST (one T). The latter is likely a mistake. SubSys1 FSW Build v2.504: Subsequent exhaustive search of SubSys1 FSW Build Release v2.504 source code renders the original description moot.,10/26/05ProjectF - TIM - 1519,debug-specific code needs conditional compilation directives,5,"SubSys1 FSW Build 2 oslrint.c:86-88 oslrint.c: 153 The comments at Line 86 and 88 say that idpu_st_buffer at Line 87 is debug-specific code. However, the declaration is implemented unconditionally. The only other reference to idpu_st_buffer in oslrint.c is an assignment that is commented out. As implemented, and provided no one ever changes this code, therefore, the problem is harmless. However, this is a fragile coding practice. Recommendation: If the comments are correct, then Lines 87 and 153 in oslrint.c should be framed by debug-related conditional compilation directives. Else, the comments should be removed.",10/26/05ProjectF - TIM - 1518,Lack of declaration of testing of FSW.SC.27 in test procedure fssc_invalid,4,"In test procedure fssc_invalid, which is part of the SubSys1 Build 2 build test, the lists in the test procedure explicitly spelling out which requirements are to be tested as part of the test procedure, do not include FSW.SC.27. Yet, FSW.SC.27 is partially tested and the corresponding test results are attributed to this requirement.",10/20/05ProjectF - TIM - 1517,Lack of declaration of testing of FSW.SC.14 in test procedure fssc_scs,4,"In test procedure fssc_scs, which is part of the SubSys1 Build 2 build test, the test of the ability to start an Absolute Time Sequence (ATS) in the test procedure, which has only been attributed to requirement FSW.SC.11, should also be attributed to FSW.SC.14.",10/20/05ProjectF - TIM - 1516,Lack of initialization of error counter for load-testing of fssc_rts_64 as part of testing of FSW.SC.04 in test procedure fssc_rts,4,"In test procedure files fssc_rts and fssc_scs, which are part of the SubSys1 Build 2 build test, in the case of testing for the successful loading of Relative Time Sequence (RTS) 64, fssc_rts_64, in support of verification of FSW.SC.04, the old error counter, old_ec, has not been updated by setting it to the value of the command error counter, cmmerrcntr, prior to the start of this particular test. As a result, if the testing of the loading of the previous RTS, namely fssc_rts_63, in the two test procedures happens to have failed, the result for load-testing of RTS 64 will always, and sometimes incorrectly, be a failure as well.",10/20/05ProjectF - TIM - 1515,"Incorrect declaration of testing of, and attribution of test results to, FSW.DS.07 in test procedure fsds_ds",4,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.DS.07, which in reality consists of two requirements FSW.DS.07.01 and FSW.DS.07.02, is an incorrectly declared objective of the test procedure. By the same token, the results of this test are incorrectly attributed to FSW.DS.07 in general. This verification is limited to testing of FSW.DS.07.01 only.",10/20/05ProjectF - TIM - 1514,Uncertainty in complete verification of FSW.TC.07 in test procedure fstc_cmd,4,"In test procedure file fstc_cmd, which is part of the SubSys1 Build 2 build test, IV&V, not having access to either the details of the Stored Command Sequences (SCS's) used in this test procedure or the ProjectF flight software user's guide, ProjectF_FSW_SUG, cannot determine with certainty if the test procedure thoroughly verifies the acceptance and processing of all TC commands listed in ProjectF-FSW-SUG, as called for in requirement FSW.TC.07.",10/20/05ProjectF - TIM - 1513,Uncertainty in complete verification of FSW.TC.06 in test procedure fstc_cmd,4,"In test procedure file fstc_cmd, which is part of the SubSys1 Build 2 build test, IV&V, not having access to either the details of the Stored Command Sequences (SCS's) used in this test procedure or the ProjectF flight software user's guide, ProjectF_FSW_SUG, cannot determine with certainty if the test procedure thoroughly verifies the acceptance and processing of all TC commands listed in ProjectF-FSW-SUG, as called for in requirement FSW.TC.06.",10/20/05ProjectF - TIM - 1512,Incorrect attribution of test results for FSW.MM.23 to FSW.MM.24 in test procedure fsmm_cmd,4,"In test procedure file fsmm_cmd, which is part of the SubSys1 Build 2 build test, there is a possible error in printing the test results. The test results for FSW.MM.23 are erroneously attributed to FSW.MM.24.",10/20/05ProjectF - TIM - 1511,Lack of attribution of test results to FSW.MM.20 in test procedure fsmm_tblload,4,"In test procedure file fsmm_tblload, which is part of the SubSys1 Build 2 build test, the test results for FSW.MM.20 are not explicitly attributed to this requirement.",10/20/05ProjectF - TIM - 1510,Lack of attribution of test results to FSW.MM.16 in test procedure fsmm_tblload,4,"In test procedure file fsmm_tblload, which is part of the SubSys1 Build 2 build test, the test results for FSW.MM.16 are not explicitly attributed to this requirement.",10/20/05ProjectF - TIM - 1509,Lack of attribution of test results to FSW.MM.14 in test procedure fsmm_tblload,4,"In test procedure file fsmm_tblload, which is part of the SubSys1 Build 2 build test, the test results for FSW.MM.14 are not explicitly attributed to this requirement.",10/20/05ProjectF - TIM - 1508,Lack of attribution of test results to FSW.MM.13 in test procedure fsmm_tbldump,4,"In test procedure fsmm_tbldump, which is part of the SubSys1 Build 2 build test, the test results for FSW.MM.13 are not explicitly attributed to this requirement.",10/20/05ProjectF - TIM - 1507,Incorrect requirement description of FSW.MM.13 as a test target for test procedure fsmm_tbldump,4,"In test procedure fsmm_tbldump, which is part of the SubSys1 Build 2 build test, there is an error in the test procedure's stated objectives. There is a mismatch between one of the to-be-verified requirements' ID and description. The requirement ID is correctly stated as FSW.MM.13, but the given requirement description is incorrectly that of FSW.MM.12.",10/20/05ProjectF - TIM - 1506,Lack of attribution of test results to FSW.MM.11 in test procedure fsmm_tbldump,4,"In test procedure file fsmm_tbldump, which is part of the SubSys1 Build 2 build test, the test results for FSW.MM.11 are not explicitly attributed to this requirement.",10/20/05ProjectF - TIM - 1505,Lack of attribution of test results to FSW.MM.07 in test procedure fsmm_write,4,"In test procedure file fsmm_write, which is part of the SubSys1 Build 2 build test, the test results for FSW.MM.07 are not explicitly attributed to this requirement.",10/20/05ProjectF - TIM - 1504,Lack of declaration of test results for FSW.CP.14 in test procedure fscp_cop1,4,"In test procedure file fscp_cop1, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.CP.14 is one of the declared objectives of test procedure fscp_cop1. In fact, this requirement has been repeatedly tested throughout the test procedure. Yet, the results of these tests have not been summed up in terms of the declaration of their overall passage or failure at the end of the test procedure.",10/20/05ProjectF - TIM - 1503,Lack of initialization of error flag in testing of FSW.CP.14 in test procedure fscp_cop1,4,"In test procedure file fscp_cop1, which is part of the SubSys1 Build 2 build test, the error flag, cp14_failed, for testing requirement FSW.CP.14 has not been initialized to zero prior to start of the test. Depending on the system, this error flag may be initialized to a value other than zero, potentially producing ""false positive"" results for this test.",10/20/05ProjectF - TIM - 1502,Incorrect declaration of testing of FSW.TP.27.10 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.10, are included in the test procedure.",10/11/05ProjectF - TIM - 1501,Incorrect declaration of testing of FSW.TP.27.09 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.09, are included in the test procedure.",10/11/05ProjectF - TIM - 1500,Incorrect declaration of testing of FSW.TP.27.08 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.08, are included in the test procedure.",10/11/05ProjectF - TIM - 1499,Incorrect declaration of testing of FSW.TP.27.07 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.07, are included in the test procedure.",10/11/05ProjectF - TIM - 1498,Incorrect declaration of testing of FSW.TP.27.06 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.06, are included in the test procedure.",10/11/05ProjectF - TIM - 1497,Incorrect declaration of testing of FSW.TP.27.05 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.05, are included in the test procedure.",10/11/05ProjectF - TIM - 1496,Incorrect declaration of testing of FSW.TP.27.04 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.04, are included in the test procedure.",10/11/05ProjectF - TIM - 1495,Incorrect declaration of testing of FSW.TP.27.03 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.03, are included in the test procedure.",10/11/05ProjectF - TIM - 1494,Incorrect declaration of testing of FSW.TP.27.02 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.02, are included in the test procedure.",10/11/05ProjectF - TIM - 1493,Incorrect declaration of testing of FSW.TP.27.01 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.TP.27, which encompasses actual requirements FSW.TP.27.01 through FSW.TP.27.10, is a declared objective of the test procedure. However, no tests to verify any of these requirements, including FSW.TP.27.01, are included in the test procedure.",10/11/05ProjectF - TIM - 1492,Incorrect declaration of testing of FSW.TP.26 in test procedure fstp_cmd,3,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the requirement FSW.TP.26 is a declared objective of the test procedure. However, no tests to verify FSW.TP.26 are included in the test procedure.",10/11/05ProjectF - TIM - 1491,Incorrect testing of FSW.TP.25 in test procedure fstp_cmd,4,"In test procedure file fstp_cmd, which is part of the SubSys1 Build 2 build test, verification of the requirement FSW.TP.25 is partly incorrect. This is due to the test checking for the existence of either of the following two conditions: 1. if an invalid command has not been properly rejected 2. if the error counter associated with the processing of a command has not been properly incremented. FSW.TP.25 only calls for the proper rejection of an invalid Telemetry Processing (TP) command, as verified by condition 1 above. Therefore, it is possible that the failure of the test, as currently set up, may be due to the satisfaction of condition 2 alone, even though the functionality called for in FSW.TP.25 is satisfied. Furthermore, the message printed out by the test procedure in case of the satisfaction of either of the above conditions points to the satisfaction of condition 2 only, which, in general, is incorrect.",10/11/05ProjectF - TIM - 1490,SubSys1 FSW v3.10: unused macros and typedefs,3,"1) FSW v3.10 The following source code files, both procedural (.c) and Include declarative (.h), contain C language objects (primarily identified as C Macros or C Types by IV&V tools) that are referenced but never declared or defined. Their effect on compilation is unknown. See the Relationship Attachment file. Recommendation: IV&V recommends undefined referenced language objects that are unique to ProjectF be removed from any FSW prior to build release.",10/7/05ProjectF - TIM - 1489,Flight Software Build 2.000 Design vis-à-vis Implementation Ambiguity in Global Variables Referenced,3,"1) ProjectF Flight Software Build 2.000 Given the set of design artifacts or their designated proxies delivered to IV&V for the ProjectF Flight Software (FSW) and given the as implemented code including imbedded documentation identified as SubSys1 FSW 2.000 delivered to IV&V, the source files therein contain global variable references of ambiguous intent. Specifically, the following source code files, both procedural (.c) and Include declarative (.h), contain global variables that are referenced only once and then only as a declarative. (Such C constructs are undefined externs.): See the Relationship Attachment file. Recommendation: IV&V recommends undefined extern global variables be removed from any FSW prior to build release.",10/7/05ProjectF - TIM - 1488,SubSys1 FSW v3.10: unused global variables,3,"1) FSW v3.10 The following source code files, both procedural (.c) and Include declarative (.h), contain 125 global variables that are declared and/or defined, but are never referenced thereafter: See the Relationship Attachment file. Recommendation: IV&V recommends unused global variables that are unique to ProjectF be removed from any FSW prior to build release.",10/7/05ProjectF - TIM - 1487,SubSys1 FSW v3.10: unused functions,3,1) ProjectF FSW v3.10 The following source code procedural (.c) files contain 81 unused functions that either are never called or are called only by functions that are never called: See the Relationship Attachment file. Recommendation: IV&V recommends unused functions should be removed from any FSW prior to build release.,10/7/05ProjectF - TIM - 1486,SubSys1 FSW v3.10: globalsvariables with multiple definitions,3,"1) ProjectF Flight Software v3.10 Several global variables are defined more than one time in the FSW (1). These are enumerated in the attached file (see under Relationships). All but one definition for each of these variables should be removed. (JKH update, 24 Jan 2006): the issue remains in FSW v2.504 (JKH update, 7 June 2006): variables null_ref and table_id should be deleted from the Relationships files, leaving only variable os_event_seq_no in the list.",10/7/05ProjectF - TIM - 1485,"SubSys1 FSW v3,10: global variables defined and set but not referenced",3,"Refs. 1) FSW v3.10 source code The following source code files contain global variables that are declared, defined, assigned a value, and/or have their value modified, but their value is never referenced: See the Relationship Attachment file. Update (7 June 2006): Global variables variables os_perf_counter and to_downlink_encoding should be deleted from the Relationship Attachment file. The other 10 global variables in that file remain as described (from FSW v2.00). Recommendation: IV&V recommends unused global variables be removed from any FSW prior to build release.",10/7/05ProjectF - TIM - 1484,SubSys1 FSW v3.10: functions declared but not defined or used,3,Refs. 1) ProjectF FSW v3.10 source The following source code files in Ref. 1 contain functions that are declared but never defined or called: See the updated Relationship Attachment file. Recommendation: IV&V recommends unused functions should be removed from any FSW prior to build release.,10/7/05ProjectF - TIM - 1483,Subject: ProjectF Flight Software Build 2.X Configuration Management,3,"(1) ProjectF Flight Software Build 2.000 The set of artifacts delivered to IV&V as ProjectF Flight Software (FSW) Build 2.000 exhibits Configuration Management (CM) practice shortcomings. Specifically, a significant number of FSW subsystems contain multiple Makefiles supporting apparently mutually incompatible build and installation processes. The following source directories (./src/) contain redundant Make file and source (.c) files: Stdtask Makefile ci/ ciend.c ci/ cistart.c ci/ citask Makefile (MIDEX) ds/ dsftblrom.c ds/ dstblrom Makefile hs/ hsst5misc.c hs/ hstblrom Makefile it/ ittask Makefile os/rtl osdebug.c os/rtl osexcept.c os/rtl osfpu.c os/rtl osmavm.c os/rtl osmavtab.c os/start oshrini.c (Files’s header name is ostoini.c, a duplicate.) os/start ostasks.c sb/ hsutils.c sb/ sbtasks.c sc/ sceerts.c sc/ scrom Makefile sc/ sctask Makefile sm/ smend.c sm/ smrom Makefile sm/ smtask Makefile to/ toftblrom.c to/ totblrom Makefile The following source directories (./src/) contain redundant include (.h) files: inc/ old_faultdet.h inc/ old_osextint.h inc/ old_osfpgani (File’s header name is ostasks.h, a duplicate.) The following Include (.h) files contain function declarations that are wholly redundant: /ds/dsdump.h - DS_abort_dump; DS_dump_event; DS_process_dump_handshake /hs/hsst5misc.h – HS_check_uplink_watchdog; HS_clear_EDAC_double_bit_error_count; HS_clear_EDAC_single_bit_error_count; HS_clear_thruster_pulse_count; HS_enable_uplink_watchdog; HS_init_bfield_compensation; HS_init_uplink_watchdog; HS_reset_uplink_watchdog_expired_count; HS_select_SRAM_bank; HS_set_bfield_compensation; HS_set_uplink_watchdog_expired_count /inc/osmavn.h – OS_mavn_disable; OS_mavn_disable_isr; OS_mavn_enable; OS_mavn_enable_isr; OS_mavn_get_page_size; OS_mavn_set_context; OS_mavn_setup_page_sizes Other CM anomalies: /os/global File ostbls.c has no executable code. /os/rtl Makefile has non-operative reference to File osfpu.c commented. /os/int Makefile is a unique MIDEX target construction. /to/ totblrom Makefile has an apparent spelling error that precludes actual operations. /inc Include file debug.h has an undocumented state for some instantiation of some unspecified build configuration target. Recommendation: IV&V recommends an automated production quality CM process built around a current state-of-the-art tool. (A tool with the capabilities of CVS would be sufficient.) Such a tool-based process would help insure the reproducibility and pedigree of the software release version with no redundant files.",10/7/05ProjectF - TIM - 1482,maturity of FSW formal test procedures,3,"(1) ProjectF Flight Software Test Plan, ProjectF-FSW-STP, v 1.0, 3 June 2004 (2) ProjectF Flight Software Test Procedures, SubSys1 Build 2 The flight software is in its third and final phase of development (Build 3) and is undergoing build tests. However, the formal test procedures for the flight software have yet to be finalized. In particular, Paragraph 3 page 30 The SRS (1) states the following: “The STP also contains the Flight Software Testing Verification Matrix which provides full traceability from each Test Procedure to each Flight Software Requirement in this document, up to the Mission Requirements for ProjectF Flight Software.” Further, the STP (2) indicates, both in the table of contents and in the document body, that the ProjectF FSW traceability matrix is contained in Appendix A of the STP document. However, no matrix is provided in Appendix A of the STP as claimed. In addition, the STP (1) indicates, both in the table of contents and in the document body, that Appendix B of the document presents an overview of the ProjectF test procedures, listing all of the scenarios that will be run for each type of test. However, this information is not contained in Appendix B of the STP as claimed. Recommendation: populate Appendices A and B of Ref. 1 as indicated above",10/5/05ProjectF - TIM - 1481,Not all FSW requirements are covered by FSW test procedures,3,"(1) ProjectF Flight Software Requirements Specification, ProjectF–FSW–SRS, v 2.2, 2 May 2005 (2) ProjectF Flight Software Test Procedures, SubSys1 Build 2 The test procedures (2) cover only about 1/3 of the requirements documented in the SRS (1).",10/5/05ProjectF - TIM - 1480,"STP Appendix B, ProjectF Software Test Procedure Overview, is missing",3,"(1) ProjectF Flight Software Test Plan, ProjectF-FSW-STP, v 1.0, 3 June 2004 The STP (1) indicates, both in the table of contents and in the document body, that Appendix B of the document presents an overview of the ProjectF test procedures, listing all of the scenarios that will be run for each type of test. However, this information is not contained in Appendix B of the STP as claimed.",10/5/05ProjectF - TIM - 1479,FSW traceability matrix is missing,3,"(1) ProjectF Flight Software Requirements Specification, ProjectF–FSW–SRS, v 2.2, 2 May 2005 (2) ProjectF Flight Software Test Plan, ProjectF-FSW-STP, v 1.0, 3 June 2004 Paragraph 3 page 30 The SRS (1) states the following: “The STP also contains the Flight Software Testing Verification Matrix which provides full traceability from each Test Procedure to each Flight Software Requirement in this document, up to the Mission Requirements for ProjectF Flight Software.” Further, the STP (2) indicates, both in the table of contents and in the document body, that the ProjectF FSW traceability matrix is contained in Appendix A of the STP document. However, no matrix is provided in Appendix A of the STP as claimed.",10/5/05ProjectF - TIM - 1478,Incorrect testing of FSW.CP.24 in test procedure fscp_cmd,3,"In test procedure file fscp_cmd, which is part of the SubSys1 Build 2 build test, the test results for requirement FSW.CP.24 may be incorrect at times. While this test verifies the functionality called for in FSW.CP.24, namely the rejection of a Command Processing (CP) command which contains an invalid Function Code or argument, the Boolean logic used in it also verifies a byproduct of the detection of such an invalid command, namely the correct incrementation of the corresponding error counter, CCPERRCNTR. The ""OR"" Boolean operator used in the test causes a combination of correct rejection of an invalid CP command along with the failure in the correct incrementation of CCPERRCNTR to lead to the incorrect failure declaration of the test for FSW.CP.24, even though, strictly speaking, this particular combination of results should still point to the passage of FSW.CP.24. Moreover, in the case of a different combination of outcomes, namely when an invalid CP command is not rejected and nevertheless CCPERRCNTR is correctly incremented, the error message printed by the test procedure, declaring the incorrect incrementation of CCPERRCNTR, is incorrect.",10/5/05ProjectF - TIM - 1477,Incorrect testing of FSW.DS.17 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.17 is incorrect. Requirement FSW.DS.17 calls for ""simultaneous record and playback of the Bulk Memory."" Neither the presumed tests of FSW.DS.17 nor the message printouts that are triggered as a result of the presumed failure of these tests appear to be addressing the functionality, or lack thereof, called for in FSW.DS.17.",10/5/05ProjectF - TIM - 1476,Questionable testing of FSW.DS.16 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.16 is questionable. Requirement FSW.DS.16 calls for ""report[ing] the status of bulk memory playback activities in Real-time Housekeeping telemetry."" Neither the presumed tests of FSW.DS.16 nor the message printouts that are triggered as a result of the presumed failure of these tests appear to be addressing the functionality, or lack thereof, called for in FSW.DS.16.",10/5/05ProjectF - TIM - 1475,Incorrect testing of FSW.DS.08 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.08 is incorrect. Requirement FSW.DS.08 calls for ""the capability to mark sets of stored Transfer Frames within a Virtual Recorder as files or Datasets, up to a maximum of four (4)."" Neither the presumed tests of FSW.DS.08 nor the message printouts that are triggered as a result of the presumed failure of these tests appear to be addressing the functionality, or lack thereof, called for in FSW.DS.08. It should also be noted that the verification method listed for FSW.DS.08 in the SubSys1 SRS document is ""Source Inspection,"" not testing.",10/5/05ProjectF - TIM - 1474,Incorrect implied attribution of test results for FSW.DS.07.01 to FSW.DS.07.02 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.DS.07, which in reality consists of two requirements FSW.DS.07.01 and FSW.DS.07.02, is a declared objective of the test procedure. However, this verification is limited to testing of FSW.DS.07.01 only. As such, the general attribution of the result of this test to FSW.DS.07 will incorrectly imply the extention of this result to FSW.DS.07.02 as well. No testing of FSW.DS.07.02 takes place as part of this or any other test procedure currently available to IV&V.",10/5/05ProjectF - TIM - 1473,Incorrect declaration of testing of FSW. DS. 01.02 and universal test passage declaration in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.DS.01, which encompasses requirement FSW.DS.01.02, is a declared objective of the test procedure. Furthermore, the value of the error flag associated with the presumed verification of this general requirement contributes to the value of the global error flag, lpt_failed, which keeps track of the overall passage or failure of the tests included in fsds_ds. However, no tests to verify FSW.DS.01.02 are included in the test procedure and the value of the error flag, ds1_failed, associated with such a test, which contributes to the overall global error flag, lpt_failed, stays at its initialized value of zero which indicates the false passage of this test.",10/5/05ProjectF - TIM - 1472,Incorrect declaration of testing of FSW. DS. 01.01 and universal test passage declaration in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of the general requirement FSW.DS.01, which encompasses requirement FSW.DS.01.01, is a declared objective of the test procedure. Furthermore, the value of the error flag associated with the presumed verification of this general requirement contributes to the value of the global error flag, lpt_failed, which keeps track of the overall passage or failure of the tests included in fsds_ds. However, no tests to verify FSW.DS.01.01 are included in the test procedure and the value of the error flag, ds1_failed, associated with such a test, which contributes to the overall global error flag, lpt_failed, stays at its initialized value of zero which indicates the false passage of this test.",10/5/05ProjectF - TIM - 1471,Incomplete testing of FSW.DS.15 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.15 is incomplete. Requirement FSW.DS.15 explicitly calls for the rejection of any Data Storage (DS) command that contains an invalid Function Code or invalid argument. The case of a DS command with an invalid Function Code is indeed considered in the test procedure, and in fact, the comment at the start of this part of the test attributes the test to FSW.DS.15. However, the corresponding error flag, ds15_failed, for this requirement is not incremented when the rejection of the DS command due to the existence of the inavlid Code Function in the command fails and this failure is detected as part of the test procedure. Instead, this failure is only attributed to FSW.DS.10 by incrementing that requirement's own error flag, ds10_failed.",10/5/05ProjectF - TIM - 1470,Incorrect declaration of testing of FSW. DS. 14 and universal test passage declaration in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.14 is a declared objective of the test procedure. Furthermore, the value of the error flag associated with the presumed verification of this requirement contributes to the value of the global error flag, lpt_failed, which keeps track of the overall passage or failure of the tests included in fsds_ds. However, no tests to verify FSW.DS.14 are included in the test procedure and the value of the error flag, ds14_failed, associated with such a test, which contributes to the overall global error flag, lpt_failed, stays at its initialized value of zero which indicates the false passage of this test.",10/5/05ProjectF - TIM - 1469,Incomplete testing of FSW.DS.13 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.13 is at the least incomplete, if not questionable altogether. Requirement FSW.DS.13 calls for Data Storage (DS) to report the status of bulk memory storage activities in terms of information for each memory partition, consisting of the values of several parameters, such as the total number of bytes in the partition, the current mode of the partition, and the virtual recorder overflow status. Verification of the reporting of none of the above information could be found as part of this test procedure.",10/5/05ProjectF - TIM - 1468,Incorrect testing of FSW.DS.12 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.12 is incorrect. Requirement FSW.DS.12 assumes the pre-existing condition of a Virtual Recorder (VR) with its overwriting already disabled and, under such circumstances, calls for the appropriate action when this VR becomes full. However, the tests for FSW.DS.12 at two different loactions in the test procedure include the verification of the enable and disable states of the VR overwriting, respectively.",9/28/05ProjectF - TIM - 1467,Incorrect declaration of both testing and test passage of FSW.DS.11 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.11 is a declared objective of the test procedure. Furthermore, the value of the error flag associated with the presumed verification of this requirement contributes to the value of the global error flag, lpt_failed, which keeps track of the overall passage or failure of the tests included in fsds_ds. However, no tests to verify FSW.DS.11 are included in the test procedure and the value of the error flag, ds11_failed, associated with such a test, which contributes to the overall global error flag, lpt_failed, stays at its initiaized value of zero which indicates the false passage of this test.",9/28/05ProjectF - TIM - 1466,Incomplete testing of FSW.DS.10 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.10 is incomplete. The test includes the verification of the processing of a number of Data Storage (DS) commands. However, there are a few DS commands such as Rewind, Dump Event Buffer, and Abort Dump, which are not verified as part of this test. No other test procedure file, currently available to IV&V, includes the remaining test procedures for FSW.DS.10.",9/28/05ProjectF - TIM - 1465,Incorrect declaration of both testing and test passage of FSW.DS.06 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.06 is a declared objective of the test procedure. Furthermore, the value of the error flag associated with the presumed verification of this requirement contributes to the value of the global error flag, lpt_failed, which keeps track of the overall passage or failure of the tests included in fsds_ds. However, no tests to verify FSW.DS.06 are included in the test procedure and the value of the error flag, ds6_failed, associated with such a test, which contributes to the overall global error flag, lpt_failed, stays at its initiaized value of zero which indicates the false passage of this test.",9/28/05ProjectF - TIM - 1464,Incorrect declaration of both testing and test passage of FSW.DS.03 in test procedure fsds_ds,3,"In test procedure file fsds_ds, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.DS.03 is a declared objective of the test procedure. Furthermore, the value of the error flag associated with the presumed verification of this requirement contributes to the value of the global error flag, lpt_failed, which keeps track of the overall passage or failure of the tests included in fsds_ds. However, no tests to verify FSW.DS.03 are included in the test procedure and the value of the error flag, ds3_failed, associated with such a test, which contributes to the overall global error flag, lpt_failed, stays at its initiaized value of zero which indicates the false passage of this test.",9/28/05ProjectF - TIM - 1463,Incomplete testing of FSW.CP.23 in test procedure fscp_cmd,3,"In test procedure file fscp_cmd, which is part of the SubSys1 Build 2 build test, requirement FSW.CP.23 is only partially tested. The test includes the verification of the processing of a number of Command Processing (CP) commands such as CP No Operation and Checksumming Enable and Disable. However, there are other CP commands such as Transmit Housekeeping Status and Unlock Transfer Frame Layer which are not verified as part of this test. No other test procedure file, currently available to IV&V, includes the remaining test procedures for FSW.CP.23.",9/28/05ProjectF - TIM - 1462,Incorrect testing of FSW.CP.21 in test procedure fscp_cmd,3,"In test procedure file fscp_cmd, which is part of the SubSys1 Build 2 build test, requirement FSW.CP.21 is incorrectly tested. The failure of the test for bad APID handling is conditional upon either the CP command counter, CCPCMDCNTR, not having been kept at its initial value before the start of this test or the CP error counter, CCPERRCNTR, not having been incremented by one with respect to its value before the test. It is the latter condition which has not correctly been set up. The condition has incorrectly been stated as ""CCPERRCNTR.NE.old_ec."" Instead, it should be ""CCPERRCNTR.NE.old_ec+1.""",9/28/05ProjectF - TIM - 1461,Incorrect testing of FSW.CP.19 in test procedure fscp_cmd,3,"In test procedure file fscp_cmd, which is part of the SubSys1 Build 2 build test, requirement FSW.CP.19 is incorrectly tested. The failure of the test for bad APID handling is conditional upon either the CP command counter, CCPCMDCNTR, not having been kept at its initial value before the start of this test or the CP error counter, CCPERRCNTR, not having been incremented by one with respect to its value before the test. It is the latter condition which has not correctly been set up. The condition has incorrectly been stated as ""CCPERRCNTR.NE.old_ec."" Instead, it should be ""CCPERRCNTR.NE.old_ec+1.""",9/28/05ProjectF - TIM - 1460,Incorrect declaration of both testing and test passage of FSW.CP.15 in test procedure fscp_cop1,3,"In test procedure file fscp_cop1, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.CP.15 is a declared objective of this test procedure. However, no verification of FSW.CP.15 takes place as part of the test procedure. Consequently, the value of error flag, cp15_failed, for testing FSW.CP.15, remains unchanged at its initialized value of zero, triggering the incorrect ""PASSED"" declaration of the testing for FSW.CP.15 at the completion of the test procedure.",9/28/05ProjectF - TIM - 1459,Incomplete testing of FSW.CP.14 in test procedure fscp_cop1,3,"In test procedure file fscp_cop1, which is part of the SubSys1 Build 2 build test, verification of requirement FSW.CP.14 is incomplete, in that it is limited to checking for the correct incrementation of the corresponding error flag, cp14_failed. There is no verification of the actual discarding of an invalid Transfer Frame by Command Processing.",9/28/05ProjectF - TIM - 1458,"Incorrect incrementation of error flag, rsc32_failed, for testing FSW.SC.32 in test procedures fssc_rts and fssc_scs",3,"In test procedure files fssc_rts and fssc_scs, which are part of the SubSys1 Build 2 build test, the validity of attribution of certain test results to FSW.SC.32 (as raised in ProjectF - TIM - 1457) aside, the error flag, rsc32_failed, for this test has incorrectly been incremented using the undeclared and uninitialized error flag, rmm32_failed, instead of the previous value of rsc32_failed itself as the basis for the incrementation.",9/21/05ProjectF - TIM - 1457,Incorrect attribution of test results for FSW.SC.31 to FSW.SC.32 in test procedures fssc_rts and fssc_scs,3,"In test procedure files fssc_rts and fssc_scs, which are part of the SubSys1 Build 2 build test, the results for the table size test in the case of Relative Time Sequence (RTS) 64, fssc_rts_64, have incorrectly been attributed to FSW.SC.32. Such a table size test only yields the size of the only entry in the RTS table for RTS 64. This is a test of FSW.SC.31 which addresses the size of each entry in an RTS table. On the other hand, FSW.SC.32 addresses the number of entries in an RTS table.",9/21/05ProjectF - TIM - 1456,Incorrect attribution of test results to FSW.SC.32 in test procedures fssc_rts and fssc_scs,3,"In test procedure files fssc_rts and fssc_scs, which are part of the SubSys1 Build 2 build test, the attribution of the Relative Time Sequence (RTS) table comparison test result for RTS 64, fssc_rts_64, to FSW.SC.32 is questionable. Requirement FSW.SC.32 addresses the RTS table entry size; whereas, an RTS table comparison tests the successful dumping of an already-loaded RTS into a table. Such comparison is more appropriate for a partial test of FSW.SC.09, as already included in test procedure fssc_loaddump.",9/21/05ProjectF - TIM - 1455,"Incorrect incrementation of error flag, rsc31_failed, for testing FSW.SC.31 in test procedures fssc_rts and fssc_scs",3,"In test procedure files fssc_rts and fssc_scs, which are part of the SubSys1 Build 2 build test, at places in the test procedure files, the error flag, rsc31_failed, for testing FSW.SC.31 has erroneously been incremented using the undeclared and uninitialized error flag, rmm31_failed, instead of the previous value of rsc31_failed itself as the basis for this incrementation.",9/21/05ProjectF - TIM - 1454,Failure of a failed test result for FSW.SC.27 to trigger the overall failure declaration of test procedure fssc_invalid,3,"In test procedure file fssc_invalid, which is part of the SubSys1 Build 2 build test, based on the actual evidence in the test procedure, it is assumed that (at least a partial) testing of FSW.SC.27 is one of the (undeclared) objectives of this test procedure. Yet, the failure of the test for FSW.SC.27 does not trigger the overall failure declaration of the test procedure, as the failure of tests for other requirements in the test procedure does.",9/21/05ProjectF - TIM - 1453,Incomplete testing of FSW.SC.27 in test procedure fssc_invalid,3,"In test procedure file fssc_invalid, which is part of the SubSys1 Build 2 build test, the test for FSW.SC.27 is incomplete. The test is limited to the verification of the failure of acceptance and processing of the ""cscswitchats"" switch command. This is only one of many Stored Command (SC) commands that according to FSW.SC.27, with its details deferred to the software user's guide (ProjectF-FSW-SUG), SC shall accept and process. No other test procedure file, currently available to IV&V, includes other testing of FSW.SC.27.",9/21/05ProjectF - TIM - 1452,Incorrect declaration of testing of FSW.SC.22 in test procedure fssc_rts,3,"In test procedure file fssc_rts, which is part of the SubSys1 Build 2 build test, the test for FSW.SC.22 has erroneously been declared at the start of the test procedure file, as one of the objectives of the test procedure, which is not the case.",9/21/05ProjectF - TIM - 1451,Incomplete testing of FSW.SC.19.01 in test procedure fssc_invalid,3,"In test procedure file fssc_invalid, which is part of the SubSys1 Build 2 build test, the test for the failure of rejection of a Stored Command Sequence (SCS) due to the failure of the checksum validation, as part of requirement FSW.SC.19.01, is incomplete, in that it is limited to checking for correct incrementation of the corresponding error counter and does not check for the actual rejection of the SCS.",9/21/05ProjectF - TIM - 1450,Incomplete testing of FSW.SC.16.01 in test procedure fssc_invalid,3,"In test procedure file fssc_invalid, which is part of the SubSys1 Build 2 build test, the test for the failure of rejection of a newly submitted Stored Command Sequence (SCS) which is already running, as part of requirement FSW.SC.16.01, is incomplete, in that it includes checking for correct incrementation of the corresponding error counter and does not check for the actual rejection of the new SCS.",9/21/05ProjectF - TIM - 1449,Incomplete testing of FSW.SC.15 in test procedure fssc_invalid,3,"In test procedure file fssc_invalid, which is part of the SubSys1 Build 2 build test, the testing of the failure of rejection of an already-disabled Stored Command Sequence (SCS), as part of requirement FSW.SC.15, is incomplete, in that it is limited to checking for correct incrementation of the corresponding error counter and does not check for the status of the execution of the disabled SCS.",9/21/05ProjectF - TIM - 1448,Incomplete testing of FSW.SC.14 in test procedure fssc_scs,3,"In test procedure file fssc_scs, which is part of the SubSys1 Build 2 build test, the verification of requirement FSW.SC.14 is incomplete. For one thing, out of the three functionalities called for in FSW.SC.14, namely the ability to start, stop, and disable a specified Stored Command Sequence (SCS) from a ground command or from within another SCS, only two of the three aforementioned features, namely the ability to start and stop an SCS have been tested. For another, even in the case of the test for the ability to stop an SCS, it is an incomplete test. This is because of the way the test has been set up which does not ensure that an SCS has already started and is executing when attempting to stop it as part of this test. There could be cases in which an SCS has not even been properly started or is properly executing and the attempt to stop this SCS will not truly test the ability to stop an SCS.",9/21/05ProjectF - TIM - 1447,Conflict in statements on RTS 33 configuration for testing FSW.SC.06 in test procedure fssc_scs,3,"In test procedure file fssc_scs, which is used as part of the SubSys1 Build 2 build test, there is a conflict in the test procedure file regarding the configuration for Relative Time Sequence (RTS) 33, fssc_rts_33, which is used to test FSW.SC.06. One description in the file states that there are ""12 csbnoops 4 seconds apart"" in RTS 33. However, another description in the file, immediately before initiating the test for FSW.SC.06, states that there are ""10 csbnoops 2 seconds apart"" in RTS 33. Meanwhile, the messages, which are instructed by the test procedure to be issued upon the failure of this test, partially support the former RTS 33 configuration, as they refer to an expected 4-second interval between the commands in RTS 33.",9/21/05ProjectF - TIM - 1446,BSW.012: first step wording is imprecise,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 16, BSW.012, Sentence 1. The wording of Sentence 1 is vague; it should reference reading a flag. Recommendation: Replace Sentence 1 with ""Immediately following the SubSys1 Cold Boot Configuration, the Boot Process shall read a flag in the Boot Register.""",9/19/05ProjectF - TIM - 1445,BS.011: CSAR7 (requirements vs. implementation),4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 16, BSW.011, Sentence 1. The use of ColdFire register CSAR7 is an implementation detail, not a requirement. Recommendation: Replace Sentence 1 with ""The Boot Software shall utilize a mechanism independent of the Mode Log to designate information that will be required in the event of multiple successive loading failures."" Update the BSW Software Design Document (there was none as of the release of BSW V2.51 source) to identify ColdFire register CSAR7 as the implementation of the revised requirement.",9/19/05ProjectF - TIM - 1444,BSW.005: parameters required by the Boot Process,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 15, BSW.005, Sentence 3. The requirement does not state which parameters are required by the Boot Process. Recommendation: Specifically enumerate the parameters required by the Boot Process",9/19/05ProjectF - TIM - 1443,BSW.009: validating FSW image,4,"Refs. 1) ProjectF Boot Software Requirements Specification, (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 2) ProjectF Boot Software Source V2.51, circa August 2005 3) ProjectF Risk Management System, ProjectF-RMS-1001 Ref. 1, p. 16. BSW.009. Although this requirement suggests that several data elements might be used to ""support identification ... [and] ... validation"" of the FSW image, in fact the functional design of BSW (Ref. 1, p. 8, Figure 5-B), and the as-built BSW (Ref. 2) uses only a CRC to determine FSW image integrity. A CRC test ensures (single-bit error rates < 10^(-9)) only that the stream of bits being tested is identical with the stream of bits originally recorded. Typical software design practice includes a test of a unique identifier (e.g., date/time/version information) to assess item integrity. Recommendation. Add a requirement stating, ""The Boot Software shall test the Image Identification mark and a CRC of the FSW Image to determine the integrity of a candidate FSW Image.""",9/19/05ProjectF - TIM - 1442,Maintenance Mode code compilation,3,"Boot Software revision 2.5.1 main.c, 202 - 216 IV&V recommends adding a conditional compilation block (e.g. GROUND_ONLY) around this code such that this code segment is not included in the release build. This adds a further preventative measure to ensure maintenance mode is not accessible in flight as required by BSW.023. See ProjectF-TIM-1438 for wording suggestion related to this requirement. IV&V would further recommend that the bodies of all maintenance mode and supporting functions be conditionally removed as is done with those functions in regs.c using the REG_DEBUG.",9/15/05ProjectF - TIM - 1441,BSW.026: requirement/design wording is inverted,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 18, BSW.026. Sentence 2 of this text block is the actual requirement, but is not cast in the imperative. Sentence 1 is a design description, but not a requirement; however, it is cast in the imperative. Recommendation: Replace the existing text block with ""If any one FSW image fails, it shall not affect both FSW images. """,9/15/05ProjectF - TIM - 1440,BS.024: user-defined address wording is ambiguous,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 18, BSW.024, Sentence 1. A ""user-defined location"" needs to be an address in the range of addresses of the image of the selected uploaded S-record-formatted file in SubSys1 Processor Memory. As formulated, the requirement does not restrict the user-defined address to lie in such a range. Recommendation: In sentence 1, change ""... a user designated location ..."" to read ""... a user-designated address in the range of addresses of the image of the selected uploaded S-record-formatted file in SubSys1 Processor Memory ...""",9/15/05ProjectF - TIM - 1439,BSW.024: reference to S-record formatted files,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 18, BSW.024. The reference to S-record-formatted files needs a precise reference. Recommendation: include a reference to documentation describing S-record-formatted files",9/15/05ProjectF - TIM - 1438,BSW.023: Maintenance Mode available on ground only,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 18, BSW.023, Sentence 2. Maintenance Mode is required to be available only during ground testing and required to be unavailble during flight. The requirement as stated does not make this clear (a ""shall"" vs. ""is"" problem). Recommendation: change Sentence 2 to read ""Maintenance Mode shall be available only during ground testing and shall not be capable of being invoked during flight.""",9/15/05ProjectF - TIM - 1437,BSW.023: character sequence timing not specified,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 18, BSW.023. The maximum time over which three consecutive space characters can be received is not specified. Recommendation: specify the maximum time over which the three consecutive space characters can be received",9/15/05ProjectF - TIM - 1436,BSW.023: delay timing wording is vague,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 18, BSW.023. The word ""approximately"" in this timing requirement is too vague. Recommendation: state an absolute time interval in the requirement",9/15/05ProjectF - TIM - 1435,BSW.022: Boot Register update wording is vague,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.022. It is not clear from the wording of this requirement what would constitute an acceptable Boot Register update Recommendation: state what would constitute an acceptable Boot Register update",9/15/05ProjectF - TIM - 1434,BS.022: Mode Log update wording is vague,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.022. It is not clear from the wording of this requirement what would constitute an acceptable Mode Log update Recommendation: Explicitly reference the Mode Log Format on p. A-9 in Ref. 1, specify the fields in the Mode Log that will be updated, and state in what general way each field will be updated.",9/15/05ProjectF - TIM - 1433,BSW.021: Boot Register update wording is vague,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.021. It is not clear from the wording of this requirement what would constitute an acceptable Boot Register update Recommendation: state what an acceptable Boot Register update would be",9/15/05ProjectF - TIM - 1432,BSW.020: Boot Register update wording is vague,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.020. It is not clear from the wording of this requirement what would constitute an acceptable Boot Register update Recommendation: state what would constitute an acceptable Boot Register update.",9/15/05ProjectF - TIM - 1431,BSW.019: Boot Register update wording is vague,4,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.019. It is not clear from the wording of this requirement what would constitute an acceptable Boot Register update Recommendation: state what would constitute an acceptable Boot Register update",9/15/05ProjectF - TIM - 1430,BSW.018: Boot Register update wording is vague,3,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.018. It is not clear from the wording of this requirement what would constitute an acceptable Boot Register update Recommendation: state what would constitute an acceptable update",9/15/05ProjectF - TIM - 1429,Test 8 does not clearly verify that the boot software meets requirement BSW.026,3,"ProjectF Boot Software Test Procedure, Rev 1.5 ProjectF Boot Software Requirements Specification, Release 2.2 Build2510Test08.txt (Test 8 output file) It is not at all clear how Test 8 verifies that the boot software meets requirement BSW.026. The requirement states that each FSW image must be interleaved across a distinct pair of EEPROMs, but in the test there is no clear evidence of the use of two distinct EEPROMS.",9/15/05ProjectF - TIM - 1428,BSW.021: Mode Log update wording is vague,3,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.021. It is not clear from the wording of this requirement what would constitute an acceptable Mode Log update Recommendation: Explicitly reference the Mode Log Format on p. A-9 in Ref. 1, specify the fields in the Mode Log that will be updated, and state in what general way each field will be updated.",9/15/05ProjectF - TIM - 1427,Test 8 procedure does not match test output,3,"ProjectF Boot Software Test Procedure, Rev 1.5 ProjectF Boot Software Requirements Specification, Release 2.2 Build2510Test08.txt (Test 8 output file) In the Test 8 output file, there is evidence that a number of dump commands (maintenance command 'd') were run during the running the test. Test 8 does not call for any dumps to be run. If it is necessary for these dumps to be run in order to verify BSW.026 then Test 8 needs to explicitly include these these commands as steps in the process and include the expected results thereof.",9/15/05ProjectF - TIM - 1426,BSW.020: Mode Log update wording is vague,3,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.020. It is not clear from the wording of the requirement what would constitute an acceptable Mode Log update. Recommendation: Explicitly reference the Mode Log Format on p. A-9 in Ref. 1, specify the fields in the Mode Log that will be updated, and state in what general way each field will be updated.",9/15/05ProjectF - TIM - 1425,Inconclusive test results for FSW.SC.19.03 in test procedure fssc_invalid,3,"In test procedure fssc_invalid, which is part of the SubSys1 Build 2 build test, the test for FSW.SC.19.03, which calls for the rejection of a Stored Command Sequence (CSC) with an invalid APID, is shared with, and uses the same table containing the test set-up for, FSW.SC.19.02, which calls for the rejection of a CSC with an invalid length. Consequently, it is impossible to ascertain the failure of the part of the test for FSW.SC.19.03 from the failure of the test as a whole, as it could also be due to the failure of the part of the test for FSW.SC.19.02.",9/14/05ProjectF - TIM - 1424,Inconclusive test results for FSW.SC.19.02 in test procedure fssc_invalid,3,"In test procedure fssc_invalid, which is part of the SubSys1 Build 2 build test, the test for FSW.SC.19.02, which calls for the rejection of a Stored Command Sequence (CSC) with an invalid length, is shared with, and uses the same table containing the test set-up for, FSW.SC.19.03, which calls for the rejection of a CSC with an invalid APID. Consequently, it is impossible to ascertain the failure of the part of the test for FSW.SC.19.02 from the failure of the test as a whole, as it could also be due to the failure of the part of the test for FSW.SC.19.03.",9/14/05ProjectF - TIM - 1423,Incomplete testing of FSW.SC.16.02 in test procedure fssc_enadis,3,"In test procedure fssc_enadis, which is part of the SubSys1 Build 2 build test, contrary to one of the test procedure's laid-out objectives, the second part of requirement FSW.SC.16.02, namely the impossibility of restarting a Stored Command Sequence (SCS) without first re-enabling it, is not tested.",9/14/05ProjectF - TIM - 1422,Incomplete testing of FSW.SC.13 in test procedure fssc_invalid,3,"In test procedure fssc_invalid, which is part of the SubSys1 Build 2 build test, items 4 through 6 in the test procedure for FSW.SC.13, as laid out in the test procedure file, have not been tested. These items are concerned with: - stopping ATS A and starting ATS B, and verifying that ATS B has started (item 4); - trying to start ATS A (while ATS B is already running) and verifying the rejection of ATS A (item 5); and - stopping ATS B (and presumably verifying its stopping) (item 6).",9/14/05ProjectF - TIM - 1421,Incomplete testing of FSW.SC.13 in test procedure fssc_invalid,3,"In test procedure file fssc_invalid, which is part of the SubSys1 Build 2 build test, the test for the failure of starting a second ATS while an ATS is already active, as required in FSW.SC.13, is incomplete since it does not explicitly check for the status of the execution of the second ATS.",9/14/05ProjectF - TIM - 1420,Incorrect universal passage declaration of test results for FSW.MM.24 in test procedure fsmm_tblperm,3,"In test procedure fsmm_tblperm, which is part of the SubSys1 Build 2 build test, the error flag, pc_failed, associated with verifying FSW.MM.24 has neither been declared nor initialized nor updated in the test procedure file. In all likelihood, the system will then revert to a default value of zero for pc_failed. This implies that the test for FSW.MM.24 will always be incorrectly reported as passed.",9/14/05ProjectF - TIM - 1419,Incorrect attribution of test results for FSW.MM.17 to FSW.MM.24 in test procedure fsmm_tblperm,3,"In test procedure file fsmm_tblperm, which is part of the SubSys1 Build 2 build test, the test results have incorrectly been attributed to FSW.MM.24. The tests in this test procedure are strictly verifying the functionality called for in requirement FSW.MM.17 (despite the proc file's incorrect claim to cover FSW.MM.08 as well) , which does not address the cases of ""invalid Function Code"" or ""invalid argument,"" which are the focus of FSW.MM.24.",9/14/05ProjectF - TIM - 1418,Incorrect attribution of test results for FSW.MM.23 to FSW.MM.24 in test procedure fsmm_cmd,3,"In test procedure file fsmm_cmd, which is part of the SubSys1 Build 2 build test, the test results for both FSW.MM.23 and FSW.MM.24 are erroneously attributed to the latter.",9/14/05ProjectF - TIM - 1417,Incorrect universal declaration of test results in test procedure fsmm_tblperm,3,"In test procedure file fsmm_tblperm, which is used as part of the SubSys1 Build 2 build test, the results for the entire test procedure are always incorrectly declared as having ""PASSED."" This is due to the error flag, fail_flag, for the entire test procedure having been initialized to zero, but never updated when a test fails.",9/14/05ProjectF - TIM - 1416,Incorrect test result declaration and its incorrect attribution to FSW.MM.24 in test procedure fsmm_tblperm,3,"In test procedure file fsmm_tblperm, which is used as part of the SubSys1 Build 2 build test, the passage or failure of FSW.MM.24, which has nothing to do with this test procedure is incorrectly declared as part of the test results. In fact, in all likelihood, the result in this case is always the erroneous passage declaration of FSW.MM.24, as the error flag used to come to this conclusion has never been either declared or initialized or updated in the proc file and hence is probably set to zero by the system, which is equivalent to always passing the test.",9/14/05ProjectF - TIM - 1415,BSW.019: Mode Log update wording is vague,3,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.019. It is not clear from the wording of this requirement what would constitute an acceptable Mode Log update Recommendation: Explicitly reference the Mode Log Format on p. A-9 in Ref. 1, specify the fields in the Mode Log that will be updated, and state in what general way each field will be updated.",9/9/05ProjectF - TIM - 1414,BSW.018: Mode Log update wording is vague,3,"Refs. 1) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 17, BSW.018. It is not clear from the wording of this requirement what would constitute an acceptable Mode Log update Recommendation: Explicitly reference the Mode Log Format on p. A-9 in Ref. 1, specify the fields in the Mode Log that will be updated, and state in what general way each field will be updated.",9/9/05ProjectF - TIM - 1413,ETC-11 was deleted from IDPU SRS Rev. F,3,"FSW.ETC-11 stated: ""ETC FSW shall jam the spin number, time, and SST attenuator position into the packet headers."" The rationale for deletion in Rev F of the IDPU SRS: ""Scientists are in the process of redefining the ETC header format."" As stated the reason for deletion of ETC-11 is to wait for the scientists to redefine the ETC header format. From discussions with the development team from UCB, there will not be another IDPU SRS. By this reasoning, it is apparent that the project does not intend to re-insert the requirement, ETC-11. Recommendation: IV&V recommends that after the scientists finish redefining the ETC header format, ETC-11 be placed back into the IDPU SRS if its functions are still appropriate.",9/8/05ProjectF - TIM - 1412,BSW.014: Mode Log initialization,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 Aug 2005 Table 7.2, p. 17, sentence 1. The requirement does not fully specify what values must be placed in the Mode Log at initialization. Recommendation: fully specify the values that must be placed in the Model Log at initialization.",9/8/05ProjectF - TIM - 1411,BSW.009: lack of specificity,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 Aug 2005 Table 7.2, p. 16, BSW.009. The requirement does not contain a range of acceptable values for any of the fields Recommendation: provide a range of acceptable values for each of the fields.",9/8/05ProjectF - TIM - 1410,"Boot SRS: ""shall"" vs. ""will""",3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 Aug 2005 Table 7.2, pp. 15-18. It is often difficult to impossible to distinguish binding requirements statements from non-binding information in this table. Recommendation: throughout Ref. 1, reserve the word ""shall"" to designate binding requirements. State this convention in the introduction to Ref. 1.",9/8/05ProjectF - TIM - 1409,BSW.001: is redundant or is not a requirement,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 Aug 2005 Table 7.2, p. 15, BSW.001, sentence 1. Formulation is unclear Recommendation: Replace sentence 1 with ""BSW execution shall begin when the Coldfire reset line (*RSTI) is activated"".",9/8/05ProjectF - TIM - 1408,BSW.006: wording change recommendation,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 15, BSW.006, Sentence 1. The formulation of the requirement is confusing and unspecific. In particular: 1. The first sentence of this requirement (quoted below) is poorly formed and difficult to understand. ""The Mode Log shall contain a parameter by which the image the Boot Software is to attempt to load and validate first."" We recommend changing the wording of this as follows: ""The Mode Log shall contain a parameter which indicates which image the Boot Software should attempt to load and validate first."" 2. This requirement does not address the question of which of the seven 32 bit words in the mode log is to be be used for this purpose. The requirement should specify this since the nomenclature used to identify these words does not make this self-evident. For example, the requirement could be made to read as follows, where 'Nth' would indicate which of the seven 32-bit words is the one intended (e.g. 1st, 2nd, 3rd, 4th, 5th, 6th, or 7th): ""The Boot Software shall first attempt to load and validate the image indicated by the value stored in the Nth 32-bit word in the Mode Log.""",9/8/05ProjectF - TIM - 1407,BSW.005: Mode Log history of boot events,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 Aug 2005 Table 7.2, p. 15, Ref. 1, BSW.005, Sentence 8. This sentence does not identify what data is to be maintained in the history, nor does it specify which sections of the Mode Log shall contain that information. Recommendation: specify in detail what history information is to be maintained in the Mode Log, and specify in detail what section of the Mode Log is to be used for this information.",9/7/05ProjectF - TIM - 1406,BSW.005: information conveyed from boot to boot,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 Aug 2005 Table 7.2, p. 15, Ref. 1, BSW.005, Sentence 7. This sentence does not identify what data is conveyed from boot to boot, nor does it specify which sections of the Mode Log shall contain that information. Recommendation: specify in detail what information is conveyed from boot to boot, and specify in detail what section of the Mode Log is to be used for this information.",9/7/05ProjectF - TIM - 1405,BSW.005: information conveyed to FSW,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 15, Ref. 1, sentence 6. This is either a requirement, in which case the list of information to be conveyed to the FSW should be enumerated, or it is not a requirement, in which case it should be deleted. Recommendation: determine whether the referenced sentence is a requirement. If it is, enumerate the values of data to be conveyed to the FSW. If the sentence is not a requirement, delete the sentence.",9/7/05ProjectF - TIM - 1404,BSW.005: FSW requirements are not Boot requirements,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 15, Ref. 1, BSW.005 sentences 5-8. These are either requirements, in which case they are requirements on SubSys1 FSW and should be allocated to the SubSys1 FSW, or they are not requirements, in which case they should be deleted. Recommendation: determine whether the referenced sentences are requirements. If they are, re-allocate them to SubSys1 FSW. If not, delete the sentences.",9/7/05ProjectF - TIM - 1403,BSW.005: parameters stored in the Mode Log,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 15, Ref. 1, BSW.005, Sentence 3. The parameters required by the Boot Process are not specified. Recommendation: specify the parameters in a table.",9/7/05ProjectF - TIM - 1402,BSW.005: address of the Mode Log,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 15, BSW.005, sentence 2. The ESRAM range is not specified. Recommendation: specify the ESRAM range.",9/7/05ProjectF - TIM - 1401,BSW.004 wording is a little vague,4,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Table 7.2, p. 15, Ref. 1, Requirement BSW.004. Recommendation: Change ""... each ..."" to ""... either ...""",9/7/05ProjectF - TIM - 1400,BSW.002 formulation is not precise enough,3,"Refs. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005. The formulation of BSW.002 is not precise enough in Ref. 1, Table 7.2, p. 15. A specific intent is to restrict execution of Boot *only* to the PROM and to use *only* the ColdFire ISRAM for data, bss, and stack segments. Recommendation: change BSW.002 from ""The Boot ... execute out of PROM ... and use the SRAM internal ..."" to ""The Boot ... execute only out of PROM ... and use only the SRAM internal ...""",9/7/05ProjectF - TIM - 1399,BSW.020 wording recommendation,4,"Refs. 1) ProjectF Boot Software Requirments Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Recommend changing the wording in BSW.020 from ""Upon the last unsuccesful CRC verification attempt ..."" to ""Upon five (5) unsuccessful CRC verification attempts as described in BSW.019 ..."". The recommended wording is what is intended.",9/6/05ProjectF - TIM - 1398,TM-12 was deleted from IDPU SRS Rev. F,3,"ProjectF IDPU Requirement, TM-12, has been deleted in revision F of the IDPU SRS without sufficient rationale to support its deletion. The note for change says, ""Deleted - Same as TM-6"". After reviewing TM-6 and TM-12 it can not be determined that the two requirements are the same.",9/6/05ProjectF - TIM - 1397,UTIL-15 was deleted from IDPU SRS revision F,3,"ProjectF IDPU Requirement, UTIL-15, has been deleted in revision F of the IDPU SRS without sufficient rationale to support its deletion. The note for change says, ""Deleted - not needed"". It is unclear whether the functions of UTIL-15 are being performed by other requirements or if IDPU no longer needs ""SUM16 [to] calculate the sum of an array at [DE] size A, and return [CDE] as the sum"".",9/6/05ProjectF - TIM - 1396,UTIL-14 was deleted from IDPU SRS revision F,3,"ProjectF IDPU Requirement, UTIL-14, has been deleted in revision F of the IDPU SRS without sufficient rationale to support its deletion. The note for change says, ""Deleted - not needed"". It is unclear whether the functions of UTIL-14 are being performed by other requirements or if IDPU no longer needs ""MIN16 [to] find maximum of an array at [DE] of size A, and return the max value"".",9/6/05ProjectF - TIM - 1395,FSW.UTIL-13 was deleted from IDPU SRS revision F,3,"ProjectF IDPU Requirement, FSW.UTIL-13, has been deleted in revision F of the IDPU SRS without sufficient rationale to support its deletion. The note for change says, ""Deleted - not needed"". It is unclear whether the functions of UTIL-13 are being performed by other requirements or if IDPU no longer needs ""MAX16 [to] find maximum of an array at [DE] of size A, and return the max value"".",9/6/05ProjectF - TIM - 1394,UTIL-12 was deleted from IDPU SRS revision F,3,"ProjectF IDPU Requirement, UTIL-12, has been deleted in revision F of the IDPU SRS without sufficient rationale to support its deletion. The note for change says, ""Deleted - not needed"". It is unclear whether the functions of UTIL-12 are being performed by other requirements or if the IDPU no longer needs to ""provide 8-to-19 bit decompression"".",9/6/05ProjectF - TIM - 1393,HSK-3 was deleted from IDPU SRS revision F,3,"ProjectF IDPU Requirement, HSK-3, has been deleted in revision F of the IDPU SRS without sufficient rationale to support its deletion. The note for change says, ""Deleted - not needed"". It is unclear whether the functions of HSK-3 are being performed by other requirements or if the IDPU no longer needs to ""receive and execute commands to the module at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."".",9/6/05ProjectF - TIM - 1392,TM-8 was deleted from IDPU SRS revision F,3,"ProjectF IDPU Requirement, TM-8, has been deleted in revision F of the IDPU SRS without sufficient rationale to support its deletion. The note for change says, ""Deleted - not needed"". It is unclear whether the functions of TM-8 are being performed by other requirements or if the spacecraft no longer needs to ""provide engineering packets to the SSR when not in a command pass"".",9/6/05ProjectF - TIM - 1390,"Abstraction of integer types, Boot SW v2.1",4,"Refs. 1) ProjectF Boot SW, v2.1, circa 13 June 2005 thms_types.h in Ref. 1 implements the beginnings of a very good approach to arithmetic type definitions. The approach is limited, however, because the precision of the arithmetic types presumed by the typedefs in this header file is not mandated by the C language standard. In particular, the C standard mandates a minimum range of values for integer types, and these minimum ranges coincide for several different integer types. An even better approach to ensuring the portability of arithmetic type precision would be to use the sizeof operator in additon to the typedefs of the arithmetic type. If the compiler supports the C99 standard or its successors, furthermore, at least the integer types desired can be implemented through the predefined header stdint.h.",7/26/05ProjectF - TIM - 1389,Mapping of SubSys1 FSW SRS v3.1to SubSys1 FSW v3.16 code,4,"Refs. 1) ProjectF SubSys1 FSW SRS, v2.2 2) ProjectF SubSys1 FSW, v2, circa 5 July 2005 3) ProjectF_RMS_TIM-1002 4) ProjectF SubSys1 FSW SRS v3.1 5) ProjectF SubSys1 FSW v3.16 (Update 6 July 2006) There is no systematic mapping from Ref. 4 to Ref. 5. ------ entry prior to 6 July 2006 There is no systematic documentation on the mapping from Ref. 1 to Ref. 2. ------ end of entry prior to 6 July 2006",7/26/05ProjectF - TIM - 1388,SubSys1 FSW: Change tracking from SubSys1 FSW v1 design to SubSys1 FSW v2 design to SubSys1 FSW v3 design,4,"Refs. 1) ProjectF FSW v1 design 2) ProjectF FSW v2 design 3) ProjectF_RMS_TIM-1001 4) FSW v2.504 source code 5) FSW v3.1 source code 6) FSW v3 design There is no documentation on the mapping from Ref. 1 to Ref. 2, or from Ref. 2 to Ref. 6. There is so little detailed design documentation on Ref. 1, Ref. 2, and Ref. 6 that IV&V can track few, if any, design changes across the course of the development.",7/26/05ProjectF - TIM - 1387,Mapping of Boot SW v2.1 to Boot SW v2.4 Unit tests,3,"Refs. 1) ProjectF Boot SW, v2.1, circa 16 June 2005 2) ProjectF Boot SW v2.4 Unit Test cases 3) ProjectF_RMS_TIM-1001 4) Boot SW v2.4 Unit Test Cases description, v0.2 IV&V was supplied a copy of Ref. 1 to support analysis of Ref. 2. There is no documentation on the mapping between Ref. 1 and Ref. 2.",7/26/05ProjectF - TIM - 1386,Boot SRS change tracking explanations missing,3,"Refs. 1) ProjectF Boot SRS, v2.1, 13 June 2005 2) ProjectF Boot SRS, v2.0, 24 May 2005 3) ProjectF_RMS_TIM-1001 4) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 There is no documentation that explains the changes from Ref. 1 to Ref. 2. (added 19 Oct 2005): There is no documentation that explains the changes from Ref. 1 to Ref. 4.",7/26/05ProjectF - TIM - 1385,Mapping of Boot SRS v2.1 to Boot SW v2.1,3,"Refs. 1) ProjectF Boot SRS, v2.1, 13 June 2005 2) ProjectF Boot SW, v2.1, circa 16 June 2005 3) ProjectF_RMS_TIM-1001 4) Memo, IV&V to project. ProjectF Boot Software notes. 16 June 2005. 5) Project response to Ref. 4, circa 20 July 2005. 6) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 7) ProjectF Boot SW, v2.51. There is no documentation on the mapping from Ref. 1 to Ref. 2. (added 19 October 2005): There is not documentation on the mapping from Ref. 6 to Ref. 7.",7/26/05ProjectF - TIM - 1384,Inadequate Presentation: Document Precedence Figure 3-1,3,"In Figure 3-1, Section 3.1, page 23, the intention of the diagram is to show the ""order of [d]ocument [p]recedence"" as related to the SubSys1 SRS document. However, as the project has already conceded in the similar case of such a document precedence for the BSW SRS document, the diagram showing such document precedence is not adequate as currently presented. In both cases, the diagrams only list a number of documents flowing to the SRS document under consideration without providing any ""order"" of precedence in either case.",7/17/05ProjectF - TIM - 1383,Typographical Error: Requirement Number for PB-16,5,"In Table 3-1, Section 3.2, page 24, the MRD requirement PB-16 has been incorrectly labeled as ""*P-16.""",7/17/05ProjectF - TIM - 1382,Typographical Error: Title for FSW.CS.05,5,"In Table 7-13, Section 7.2.13, page 63, the word ""EEPRAM"" should be corrected to ""EEPROM"" in the name for requirement FSW.CS.05.",7/17/05ProjectF - TIM - 1381,Incomplete TBD's Listing: SAI-SPEC-TBD and FSW.CS.05,4,"In the table in the section, entitled ""LIST OF TBDs, TBRs and TBCs,"" page 19, the following entries should be added under the ""Section/Reqt."" and ""Description"" headings: 1. Section/Reqt.: 3.1, Description: ProjectF Bus Avionics Unit Specification SAI-SPEC-TBD 2. Section/Reqt.: EEPROM Validation Frequency (FSW.CS.05), Description: The CS Flight Software shall validate all EEPROM memory at a minimum rate of every 60 minutes per 500K bytes (TBD).",7/17/05ProjectF - TIM - 1380,Ambiguous Requirement: FSW.CS.17,3,"In Table 7-13, Section 7.2.13, page 64, requirement FSW.CS.17 is ambiguous in that it establishes only an upper bound default value of ""less than once per hour"" for the frequency ( or ""rate"") of scrubbing Bulk Memory. In fact, even this upper bound value is ambiguous since it does not use a terminology such as ""no more than once per hour."" The requirement needs to clearly specify a range of default frequencies for the task of scrubbing Bulk Memory.",7/17/05ProjectF - TIM - 1379,Syntax Error: FSW.TP.37,5,"In Table 7-4, Section 7.2.4, page 44, in requirement FSW.TP.37, the word ""that"" should be replaced by ""in which"" for correctness and better readability.",7/17/05ProjectF - TIM - 1378,Outdated Figure: PROM Memory Size in Fig. 5-1,5,"In Figure 5-1, Section 5, page 29, the figure has not been updated to reflect the change in the memory size of PROM from 64 KB to 16 KB and still contains the outdated value of 64 KB. In fact, the date stamp of ""12/8/03"" at the lower right corner of this figure suggests that this figure is out of date and needs to be updated.",7/17/05ProjectF - TIM - 1377,Inaccurate Trace Source Categorization: Sec. 3.2 and Table 3-1,5,"In Section 3.2, in the opening text, page 24, and also in the heading for Table 3-1, pages 24 through 27, the word ""Section"" does not accurately describe where the traces from the relevant MRD requirements to the SubSys1 SRS document end. The reason is that in many cases the traces point to one or more SubSys1 requirements, as opposed to one or more document sections. The word ""Section"" needs to be replaced by ""Section/Requirement"" in both the text and table heading.",7/17/05ProjectF - TIM - 1376,Incorrect Reference: Revision Value for BSW SRS in Sec. 2,5,"In Table 2-1, Section 2, page 20, the Revision value for ProjectF Boot Software Requirements Specification, ProjectF-BSW-SRS, has incorrectly been listed as ""Draft."" The appropriate Revision for the BSW SRS document at the time of the release of the SubSys1 SRS document version under present consideration (2.2) is ""1.0."" In fact, this has been true, even in the case of the previous version 2.1 of the SubSys1 SRS document, and correctly noted in that version of the document.",7/17/05ProjectF - TIM - 1375,Incomplete Change Log and Notes: Revision History and Section 7.2.8,4,"The heading for the defunct Section 7.2.8, page 50, as well as the change note for Section 7.2.8 in the change log table in Revision History section, page 13, dated 17-Mar-2005 as initiated by Chris Xenophontos, contain insufficient, and arguably misleading, information on the changes made to Section 7.2.8. The details of these changes, as described below, need to be included in both the section heading and the change log. While, as the change log notes, the BA1 component of the flight software has been eliminated, not all of the requirements associated with this component have been deleted. Similarly, while two of the original BA1 requirements have been replaced by CP and TP requirements, not all of the original BA1 requirements have been moved to the CP and TP sections, as the heading to Section 7.2.8 suggests. Original requirement FSW.BA1.02 has been replaced by a combination of two requirements FSW.CP.26 and FSW.TP.38 in Sections 7.2.3 and 7.2.4, respectively. Also, original requirement FSW.BA1.03 has been replaced by a combination of two requirements FSW.CP.27 and FSW.TP.39 in Sections 7.2.3 and 7.2.4, respectively. Meanwhile, requirements FSW.BA1.04, FSW.BA1.05, and FSW.BA1.06 have been deleted altogether. (FSW.BA1.01 has incorrectly been deleted without having been replaced or renamed, as noted in a separate IV&V issue.)",7/17/05ProjectF - TIM - 1374,Missing Requirement: FSW.BA1.01,3,"In the defunct Table 7-8, in the defunct Section 7.2.8, page 50, requirement FSW.BA1.01 has been deleted without the functionality addressed in it being covered in any other SubSys1 requirement. With the elimination of the Bus Avionics Manager 1 (BA1) component of the flight software, according to the header to Section 7.2.8, page 50, the requirements in this section have been moved to Sections 7.2.3 and 7.2.4, which contain the requirements for the Command Processing (CP) and Telemetry Processing (TP) components of the flight software, respectively. In fact, of the six original BA1 requirements in Section 7.2.8, only two requirements, namely FSW.BA1.02 and FSW.BA1.03 have reappeared (each) as (two) new requirements in Sections 7.2.3 and 7.2.4. Of the remaining four original BA1 requirements, the total elimination of three of these requirements, namely FSW.BA1.04, FSW.BA1.05, and FSW.BA1.06, can be justified, as these requirements address functionalities that are specific to the BA1 component itself, which does not exist anymore. However, one original BA1 requirement, namely FSW.BA1.01, calls for the confirmation of data interfaces in the Communications Interface Module (CIM), which is still a valid and important functionality, that needs to be restored.",7/17/05ProjectF - TIM - 1373,Incorrect Trace: FSW.BA1.06 to MDR Req. PB.FSW-17,4,"In Table 3-1, Section 3.2, page 27, requirement FSW.BA1.06 has mistakenly been listed as a child requirement to the MDR requirement PB.FSW-17 and should be removed from the list. FSW.BA1.04 does not exist anymore, as the BA1 component of the flight software has been eliminated and the functionality called for in FSW.BA1.06 is not relevant anymore.",7/17/05ProjectF - TIM - 1372,Incorrect Trace: FSW.BA1.04 to MDR Req. PB.FSW-16,4,"In Table 3-1, Section 3.2, page 27, requirement FSW.BA1.04 has mistakenly been listed as a child requirement to the MDR requirement PB.FSW-16 and should be removed from the list. FSW.BA1.04 does not exist anymore, as the BA1 component of the flight software has been eliminated and the functionality called for in FSW.BA1.04 is not relevant anymore.",7/17/05ProjectF - TIM - 1371,Incorrect Trace: FSW.HS.06 versus FSW.HS.13 to MRD Req. PB.FSW-16,4,"In Table 3-1, Section 3.2, page 27, one of the child requirements to the MDR requirement PB.FSW-16 has mistakenly been listed as FSW.HS.06. Requirement FSW.HS.06 does not address the objective of the parent requirement PB.FSW-16, namely the rejection by flight software of commands that cannot be validated. The correct missing child requirement is FSW.HS.13.",7/17/05ProjectF - TIM - 1370,Inconsistent Requirement Fidelity: FSW.HS.05 versus MRD Req. PB.FSW-9,4,"In Table 7.5, Section 7.2.5, page 45, in requirement FSW.HS.05, the conditions, under which the Cold Restart functionality called for in the requirement should take place, are missing. According to Table 3-1, Section 3.2, page 26, requirement FSW.HS.05 is child to the MRD requirement PB.FSW-9, which specifies the conditions that should trigger a Cold Restart. However, FSW.HS.05 lacks the details found in the parent requirement PB.FSW-9.",7/17/05ProjectF - TIM - 1369,Outdated Tentative Value and Document Reference: FSW.TF.04 and Associated ACS Req. 3.2.1.8.32,3,"In Table 7-16, Section 7.3.2, page 75, in requirement FSW.TF.04, the tentative TBD value of ""forty"" for the size of the buffers holding the 48-bit thruster start and stop times should be replaced by, and finalized to, the value of ""four (4)"" instead, as indicated in the ACS requirement 3.2.1.8.32 in the ACS specification document, SAI-SPEC-1142, Revision B. Furthermore, the parenthetic reference to ""ProjectF-FSW-TBD"" should be removed. Similarly, the first change above should be made to the requirement ACS 3.2.1.8.32 itself, as presented in association with requirement FSW.TF.04 in Table 7-14, Section 7.3, page 69.",7/17/05ProjectF - TIM - 1368,Defunct Requirements: FSW.SN.20 and Associated ACS Req. 3.2.1.8.30,3,"In Table 7-15, Section 7.3.1, page 73, requirement FSW.SN.20 should be removed as the ACS requirement 3.2.1.8.30 to which FSW.SN.20 traces has been deleted from the ACS specification document, SAI-SPEC-1142, Revision B. Similarly, in Table 7-14, Section, 7.3, page 69, the entry for FSW.SN.20 and its associated ACS requirement 3.2.1.8.30 should be removed.",7/17/05ProjectF - TIM - 1367,Inconsistent Requirements Titles: Titles to FSW.SN.19 and Associated ACS Req. 3.2.1.8.29,5,"In Table 7-15, Section 7.3.1, page 73, the title for requirement FSW.SN.19 should be modified by replacing ""Too High"" to ""Invalid"" to reflect the same modification in the title for ACS requirement 3.2.1.8.29 in the ACS specification document, SAI-SPEC-1142, Revision B. Similiarly, in Table 7-14, Section 7.3, page 68, the titles for requirement FSW.SN.19 and its associated ACS requirement 3.2.1.8.29 should be modified accordingly.",7/17/05ProjectF - TIM - 1366,Defunct Requirements: FSW.SN.18 and Associated ACS Req. 3.2.1.8.28,3,"In Table 7-15, Section 7.3.1, page 73, requirement FSW.SN.18 should be removed to reflect the deletion of the ACS requirement 3.2.1.8.28 in the ACS specification document, SAI-SPEC-1142, Revision B. This deletion has presumably occurred due to the modification made to the ACS requirement 3.2.1.8.27, which now addresses the objective in 3.2.1.8.28 as well. For the same reason, in Table 7-14, Section 7.3, page 68, the entry for requirement FSW.SN.18 and its associated ACS requirement 3.2.1.8.28 should be removed.",7/17/05ProjectF - TIM - 1365,Inconsistent Requirement: FSW.SN.17 versus ACS Req. 3.2.1.8.27,3,"In Table 7-15, Section 7.3.1, page 73, it is presumed that the wording of requirement FSW.SN.17 should match that of the ACS requirement 3.2.1.8.27, to which it traces, as has been the case in the past. Therefore, FSW.SN.17 should be updated to reflect the latest version of the ACS requirement 3.2.1.8.27, as found in the ACS specification document, SAI-SPEC-1142, Revision B. This is also the case with the ACS requirement 3.2.1.8.27 itself, as presented in Table 7-14, Section 7.3, page 68, which does not match its latest wording in SAI-SPEC-1142, Revision B. The new wording of 3.2.1.8.27 is especially critical since it addresses not only, as before, the upper-bound value of the ""thruster frequency"" condition for the functionality called for in this requirement, but also, for the first time, its lower-bound value.",7/17/05ProjectF - TIM - 1364,Typographical Error: ACS Req. 3.2.1.8.26 as a Trace to FSW.SN.16,5,"In Table 7-14, Section 7.3, page 68, the word ""is"" is missing in the ACS requirement 3.2.1.8.26, to which requirement FSW.SN.16 traces, before ""out"" and after ""phase."" Similarly, the same problem exists with 3.2.1.8.26 as it appears in its parent document, namely the ACS specification document, SAI-SPEC-1142, Revision B, Section 3.2.1.8.",7/17/05ProjectF - TIM - 1363,Ambiguous Requirement: ACS Req. 3.2.1.8.21 and Associated FSW.SN.11,3,"In Table 7-14, Section 7.3, page 67, the ACS requirement 3.2.1.8.21, as also appearing in the ACS specification document, SAI-SPEC-1142, Revision B, to which requirement FSW.SN.11 traces, contains an ambiguouslyly worded condition. The condition addresses a situation in which ""the thruster commands are received ... too close to the [maneuver] start time for the software to respond to."" No time threshold value has been provided to define what ""too close"" means in the context of the aforementioned condition. In a practical sense, the definition of ""too close"" will become clear only when the software is not able to execute a thruster command, that has been received too close to the prescribed start time of a maneuver, on time. However, it is critical for the flight software to recognize this fact BEFORE executing such a thruster command too late, and to implement the functionality called for in 3.2.1.8.21 or FSW.SN.11, namely ""stop[ping] commanding thrusters and generat[ing] appropriate telemetry."" This can only be realized by providing a time threshold value as part of these two requirements so that the software is able to recognize the problem in time and take ""preventive"" action in this regard before it is too late.",7/17/05ProjectF - TIM - 1362,Inconsistent Requirement: FSW.SN.11 versus ACS Req. 3.2.1.8.21,3,"In Table 7-15, Section 7.3.1, page 72, an important condition in requirement FSW.SN.11, on which the functionality called for in this requirement depends, is missing. This missing condition addresses the situation in which the thruster commands are received ""too close to the [maneuver] start time for the software to respond to."" This condition is part of the original ACS requirement 3.2.1.8.21 in the ACS specification document, SAI-SPEC-1142, Revision B to which FSW.SN.11 traces. (There is another problem with the vague wording of this condition in the original ACS requirement 3.2.1.8.21 itself, which does not define, or elaborate on, what is meant by ""too close."" However, this problem is addressed in a separate IV&V issue.)",7/17/05ProjectF - TIM - 1361,Typographical Error: FSW.SN.09 versus ACS Req. 3.2.1.8.19,4,"In Table 7-15, Section 7.3.1, page 72, both the title and description of requirement FSW.SN.09 contain typographical errors. The words ""Start"" and ""start"" in the title and description, respectively, should be replaced by ""Stop"" and ""stop,"" respectively to comply with the initial ACS requirement 3.2.1.8.10, as found in the ACS specification document, SAI-SPEC-1142, Revision B, to which FS.SN.09 traces. Similarly, in Table 7-14, Section 7.3, page 67, the title for FSW.SN.09, in conjunction with ACS requirement 3.2.1.8.19, contains the same error in that the word ""Start"" should be replaced by ""Stop.""",7/17/05ProjectF - TIM - 1360,Typographical Error: FSW.SN.08 versus ACS Req. 3.2.1.8.18,4,"In Table 7-15, Section 7.3.1, page 72, both the title and description of requirement FSW.SN.08 contain typographical errors. The words ""Stop"" and ""stop"" in the title and description, respectively, should be replaced by ""Start"" and ""start,"" respectively to comply with the initial ACS requirement 3.2.1.8.18, as found in the ACS specification document, SAI-SPEC-1142, Revision B, to which FS.SN.08 traces. Similarly, in Table 7-14, Section 7.3, page 67, the title for FSW.SN.08, in conjunction with ACS requirement 3.2.1.8.18, contains the same error in that the word ""Stop"" should be replaced by ""Start.""",7/17/05ProjectF - TIM - 1359,Inconsistent Requirement: FSW.SN.03 versus ACS Req. 3.2.1.8.13,3,"In Table 7-15, Section 7.3.1, page 71, it is presumed that the wording for requirement FSW.SN.03 should match that of the ACS requirement 3.2.1.8.13, to which it traces, as has been the case in the past. FSW.SN.03 needs to be updated to reflect the latest version of the ACS requirement 3.2.1.8.13, as found in the ACS specification document, SAI-SPEC-1142, Revision B. The new version of 3.2.1.8.13 contains the disabledness of the transition from sun synchronous to pulse train thrusting as an additional condition to trigger the functionality called for in this requirement. The update should also take place with the ACS requirement 3.2.1.8.13 itself, as presented in Table 7-14, Section 7.3, page 66, which does not match its latest wording in SAI-SPEC-1142, Revision B.",7/17/05ProjectF - TIM - 1358,Incosistent Requirement Fidelity: FSW.BA2.14 versus ACS Req. 3.2.1.8.12,3,"In Table 7-10, Section 7.2.10, page 55, requirement FSW.BA2.14 has less fidelity than the ACS requirement 3.2.1.8.12 to which it traces. The important frequency threshold above which the functionality in question should occur is missing in FSW.BA2.14. In the same vain, in Table 7-14, Section 7.3, page 66, the ACS requirement 3.2.1.8.12, which is the source for FSW.BA2.14, is incomplete and lacks the same frequency information. The complete and correct ACS requirement 3.2.1.8.12 may be found in the ACS specification document, SAI-SPEC-1142, Revision B.",7/17/05ProjectF - TIM - 1357,Incorrectly Deleted Requirement: ACS Req. 3.2.1.8.11 as a Trace to FSW.AC.09,2,"In Table 7-14, Section 7.3, page 66, requirement FSW.AC.09 has been (correctly) traced to 3.2.1.8.11. Meanwhile, in the as-yet unreleased ACS specification document, SAI-SPEC-1142, Revision B, the ACS requirement 3.2.1.8.11, covering the pulse train thrusting functionality, has incorrectly been deleted. The basis given for this deletion is SCN-019, issued on April 12, 2005. However, SCN-019 calls only for the removal of the ""command capability"" of thrusting in the pulse train mode. As also noted in SCN-019, the pulse train thrusting in general should remain an (autonomous) capability of FSW so that a probe can continue an attitude maneuver which has already started in the sun-synchronous mode and may be interrupted by a solar eclipse or an otherwise inability of the sun sensor to detect the sun. The ACS requirement 3.2.1.8.11 addresses this general pulse train capability and should stay. While FSW.AC.09 remains to be treated as an active SubSys1 requirement in the current Release 2.2 of the SubSys1 SRS document, the other concern is that the deletion of 3.2.1.8.11 in the to-be-released Revision B of the ACS specification document may eventually precipitate the incorrect deletion of FSW.AC.09 , to which 3.2.1.8.11 is traced, from Table 7-16, Section 7.3.2 as well.",7/17/05ProjectF - TIM - 1356,Inconsistent Requirement: ACS Req. 3.2.1.6.11 as a Trace to FSW.BA2.14,4,"In Table 7-14, Section 7.3, page 65, the second sentence in the ACS requirement 3.2.1.6.11, with incorrectly listed number of 3.2.1.16.11 as noted in a separate IV&V issue, to which requirement FSW.BA2.14 traces, does not belong to this requirement anymore, as this requirement has been updated in the latest version of the ACS specification document, SAI-SPEC-1142, Revision B, and hence its second sentence should be removed.",7/17/05ProjectF - TIM - 1355,Typographical Error: FSW.BA2.14 Trace to ACS Req. 3.2.1.6.11,4,"In Table 7-14, Section 7.3, page 65, the number for the ACS requirement, entitled, ""Thruster Watch Dog Timer,"" to which requirement FSW.BA2.14 traces, has a typographical error. Instead of 3.2.1.16.11, it should be 3.2.1.6.11.",7/17/05ProjectF - TIM - 1354,Document precedence definition location?,4,"Ref. (1) ProjectF Mission Requirements Document THM- SYS- 001 Revision E, May 2004 (2) ProjectF Boot SRS, v2.1, 13 June 2005 (3) ProjectF_RMS_TIM-1001 A discussion of Ref. 2 during the Project/IV&V tagup on 13 July 2005 proposed to close Ref. 2 by relabeling a diagram in Ref. 2. The diagram was originally labeled as a ""precedence"" diagram, but the developer stated that it is actually a requirements dataflow diagram only. The characterization of the diagram referenced in Ref. 2 as a dataflow diagram then opens the question of what the document precedence is, and where it is defined. The only self-consistent location for a precedence specification for Ref. 1 is in Ref. 1. Other, lower-level precedence specifications can occur in documents other than Ref. 1. For example, the precedence of the SubSys1 FSW SRS requirements over the Boot SRS requirements (assuming that such precedence is intended, of course) could be contained in the SubSys1 FSW SRS. Ref. 1 was scanned for occurrences of ""precedence"", ""conflict"", and ""supersede"". None of these words occur in Ref. 1. This is strong evidence that there is no precedence definition in Ref. 1. Recommendation: insert the precedence definition for Ref. 1 in Ref. 1.",7/13/05ProjectF - TIM - 1353,"BSW Unit Test, Test 5 does not test the requirements it claims to test",3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 Test 5 in the BSW unit test documentation claims that it is ""a negative test of all requirements relating to the image header"". Requirements that in some way mention the image header are BSW.005, BSW.009, BSW.016, and BSW.017. It is not at all clear how this test is relevant to any of these requirements.",7/12/05ProjectF - TIM - 1352,BSW.014 & BSW.015 not consistent with similar requirements,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 BSW.014 and BSW.015 do not mention when in the boot sequence they must be met. The requirements are not formulated precisely enough.",7/12/05ProjectF - TIM - 1351,BSW.014 only partially tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 This requirement consists of two distinct parts. The second part, the selection of image 1 as the image to load, is verified by the test 2 as claimed. The first part, initialization of the Mode Log on Power-Up start, is not proven in the test.",7/12/05ProjectF - TIM - 1350,BSW.012 only partially tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 The second part of this requirement can be verified as claimed but this also requires inspecting the source code to verify that b0-b4 maintenance mode commands do actually set the boot register. The requirement that reading this flag is the first step in the boot process does not appear to be validated in the given test (test 2); this portion of the requirement may require source code inspection as a means of verification.",7/12/05ProjectF - TIM - 1349,BSW.011 only partially tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 Only one of the three individual parts of this requirement gets tested: usage of the CSAR7 as a mechanism independent of the Mode Log to designate information that will be required in the event of multiple successive image loading failures is tested as claimed. However, the requirement to leave the 'valid bit' set to invalid is not tested, nor are the value limits specified in the requirement.",7/11/05ProjectF - TIM - 1348,BSW.009 only partially tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 Only one of the two distinct parts of this requirement is tested as given in the unit test document. Verification of the header format is not covered by any unit test while usage of the image header by the boot software is verified by test 1 as claimed",7/11/05ProjectF - TIM - 1347,Test 1 does not clearly test BSW.006,3,"ProjectF-BSW-SRS 2.1 6/13/2005 The first sentence of the requirement description is poorly formed and difficult to follow. More importantly, it is not clear which of the 7 mode log parameters used by the boot code that this requirement refers to.",7/11/05ProjectF - TIM - 1346,Test 1 does not test BSW.005,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 According to the ProjectF Boot Software Unit Test document, requirement BSW.005 is satisfied by Test 1. It is unclear how this test verifies this very involved compound requirement, which not only specifies a minimum size for the mode log, but also includes constraints on its location, content, and format.",7/11/05ProjectF - TIM - 1345,BSW.025 is not tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 BSW.025 is not tested. Was this requirement intended to be tested in this test suite? If not, where/when will it be tested?",7/11/05ProjectF - TIM - 1344,BSW.024 is not tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 BSW.024 is not tested. Was this requirement intended to be tested in this test suite? If not, where/when will it be tested?",7/11/05ProjectF - TIM - 1343,BSW.023 is not tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 BSW.023 is not tested. Was this requirement intended to be tested in this test suite? If not, where/when will it be tested?",7/11/05ProjectF - TIM - 1342,BSW.010 is not tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 BSW.010 is not tested. Was this requirement intended to be tested in this test suite? If not, where/when will it be tested?",7/11/05ProjectF - TIM - 1341,BSW.003 is not tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 BSW.003 is not tested. Was this requirement intended to be tested in this test suite? If not, where/when will it be tested?",7/11/05ProjectF - TIM - 1340,BSW.002 is not tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 BSW.002 is not tested. Was this requirement intended to be tested in this test suite? If not, where/when will it be tested?",7/11/05ProjectF - TIM - 1339,BSW.001 is not tested,3,"ProjectF Boot Software Unit Test, Revision 0.2 ProjectF Boot Software Requirements Specification, Release 2.1 Requirement BSW.001 is not tested. Was this requirement intended to be tested in this test suite? If not, where/when will it be tested?",7/7/05ProjectF - TIM - 1338,requirements change tracking unclear,3,"References. (a) ProjectF Boot Software Requirements Specification, Release 2.1, June 13, 2005. This SRS has been signficantly modified from its first version. How does the project track the impact on the design and implementation? There does not seem to be anything, either in the BSW SRS, or elsewhere, that talks to this issue.",7/5/05ProjectF - TIM - 1337,requirement BSW.003 poorly formulated,3,"References. 1) ProjectF Boot Software Requirements Specification (ProjectF-BSW-SRS), Release 2.1, June 2005. 2) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 Ref. 1, p. 15. Section 7.2. Requirement BSW.003. This requirement is not testable because it is either a tautology (it says memory areas will not be modified except where they are modified), or it is not a tautology, in which case there is no specification of the area which will be permitted to be modified. Recommendation: specify, in objectively verifiable and self-contained terms, which memory areas will be modified, and which will not. (added 19 October 2005): This issue remains in Ref. 2.",7/5/05ProjectF - TIM - 1336,requirement BSW.002 poorly formulated,3,"References. (a) ProjectF Boot Software Requirements Specification, Release 2.1, June 13, 2005. p. 15. Section 7.2. Requirment BSW.002. This requirement is not testable as formulated because it is either a tautology (i.e., ""the software will execute where the software executes""), or it is not a tautology, in which case the ""required areas"" phrase is too vague. Recommendation: specify, in objectively verifiable and self-contained terms, where the SW will execute.",7/5/05ProjectF - TIM - 1335,verification activity type missing,4,"References. (1) ProjectF Boot Software Requirements Specification, release 2.1, June 13, 2005. (2) ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 p. 15 ff. Section 7.2. The type of verification activity is not identified in this table. Recommendation: add the verification activity type to the table. (added 20 October 2005): the issue persists in Ref. 2.",7/5/05ProjectF - TIM - 1334,SubSys1 Boot: requirements allocation to test plan incomplete,3,"Refs. [1] ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 [2] ProjectF Flight Software Test Plan (ProjectF-FSW-STP), v1.2, 2 February 2006 [1], p. 11. The Boot SW SRS verification cross-reference matrix is claimed to be in [2]). [2] contains no such matrix. An SRS-to-test-case verification cross-reference matrix is contained in the test materials for BSW source V2.51. Recommendation: incorporate the verification cross-reference matrix in the test materials for BSW V2.51 as the Boot verification cross-reference matrix in [2].",7/5/05ProjectF - TIM - 1333,"""requirements"" are actually product descriptions",3,"References. (a) ProjectF Boot Software Requirements Specification, Release 2.1, June 13, 2005. (b)ProjectF Boot Software Specification (ProjectF-BSW-SRS), Release 2.2, 1 August 2005 p. 15 ff, Section 7.2. Implementation-specifics are embedded in several of the requirements in Ref (a). Some ""requirements"" are actually contingent on implementation specifics of the ColdFire processor, or are merely descriptions of implementation details (see ""requirements"" BSW.001, BSW.002, BSW.003, BSS.010, BSW.011). Implementation specifics should not appear in an SRS. The mapping between requirements and implementation should appear in a physical design document. (added 27 October 2005): Most of these issues were addressed in Ref. 2. Any remaining problems of this nature have been captured in newer TIMs.",7/5/05ProjectF - TIM - 1332,Boot SW SRS diagram confusing,4,"References. (a) ProjectF Boot Software Requirements Specification, Release 2.1, June 13, 2005. p. 3. How does one read the diagram on this page as a predence diagram? A precedence diagram must be at least a directed acyclic graph (DAG), but this diagram is not a DAG.",7/5/05ProjectF - TIM - 1331,software being developed against a COTS board,5,SubSys1 is being developed against a COTS version of the ColdFire board instead of the flight-prepared version of the board.,6/30/05ProjectF - TIM - 1330,Macros defined but never used,5,BSW Build 2.510 See attached file for the updated list.,6/30/05ProjectF - TIM - 1329,Unused Global Variables,5,eepromend <Declare> inc\thmsmemory.h(261) <Define> bt\eeprom.c(72) eepromstart <Declare> inc\thmsmemory.h(260) <Define> bt\eeprom.c(71) eepromwait <Declare> inc\thmsmemory.h(262) <Define> bt\eeprom.c(73) <Init> bt\eeprom.c(73) inbuf <Define> bt\misc.c(62) inptr <Define> bt\misc.c(66) <Init> bt\misc.c(66) insize <Define> bt\misc.c(65) <Init> bt\misc.c(65) lower_address <Define> bt\eeprom.c(68) <Init> bt\eeprom.c(68) outcnt <Define> bt\misc.c(67) <Init> bt\misc.c(67) register_dump <Define> bt\misc.c(122) upper_address <Define> bt\eeprom.c(69) <Init> bt\eeprom.c(69) window <Define> bt\misc.c(63) window_set <Define> bt\eeprom.c(67) <Init> bt\eeprom.c(67),6/30/05ProjectF - TIM - 1328,functions that are never called,5,Function File mem_copy thmsmemory.h checksum thmsmemory.h checksum32 thmsmemory.h noPrintChecksum thmsmemory.h store_ee_byte thmsmemory.h store_ee_half thmsmemory.h store_ee_word thmsmemory.h Write_Virtual_Buffer thmsmemory.h rs_is_char_port serial.c _fault main.c start_main main.c fault_handler main.c called from assembler code memcpy misc.c probably not part of the build malloc misc.c free misc.c recover misc.c fault_handler misc.c,6/30/05ProjectF - TIM - 1327,comment needed on commented-out code block,5,ui.c: 357: parse The comment above this block of commented-out code should include the reason that the code has been commented out.,6/29/05ProjectF - TIM - 1326,potential infinite loop,5,ui.c: 132: get_char If rs_is_char never returns true this is an infinite loop.,6/29/05ProjectF - TIM - 1325,IF with no code block where ELSE has a code block,5,"thmsmemory.c: 229-232: targetWrite The code block for this IF is empty (it consists of only a semicolon) while the else clause code block is non-empty. This is very strange. Recommend changing the IF to check for the inverse condition and moving the code block there, eliminating the ELSE.",6/29/05ProjectF - TIM - 1324,question on code breakdown,5,"In serial.c, rs_is_char is a separate function from rs_get_char. Likewise, rs_is_char_port is a separate function from rs_get_char_port. It would seem reasonable to assume that one would always want to make sure the ready flag is set before reading. Recommend calling rs_is_char from rs_get_char and calling rs_is_char_port from rs_get_char_port to make sure characters are available for reading.",6/29/05ProjectF - TIM - 1323,strange code,5,"serial.c: 105-110 The logic seems flawed here. It checks 10,000 times to see if the transmit ready flag is set then sends it anyway if it is not.",6/29/05ProjectF - TIM - 1322,unused parameter in LoadImage,5,main.c: 640-655: LoadImage Parameter ImageNum is used only in a dprintf statement and as the return value of the function (in other words it has no effect on what image actually gets loaded). A note should be made of this fact in a comment block as was done in the comment block preceding the function WaitForRestart.,6/29/05ProjectF - TIM - 1321,no check to see if a char is available,5,main.c: 201: start_main This code calls rs_get_char_port to fetch a character from the UART without first calling rs_is_char_port to see if there is a character available.,6/29/05ProjectF - TIM - 1320,using instruction cycles as delays,3,eeprom.c: 135: SetEepromPower eeprom.c: 151: SetEepromPower main.c: 199: start_main main.c: 545-550: delay Creating a delay by waiting for instruction cycles to pass is not very portable since the time is takes to execute an instruction depends on the hardware as well as the compiler version used to generate the binary.,6/29/05ProjectF - TIM - 1319,redundant code,5,bufferedSrec.c There seems little point in incrementing both buffPos and buff since buff could be left alone and buffPos used as an index (buff[buffPos]),6/29/05ProjectF - TIM - 1318,unused header run.h,5,No files include the header file run.h.,6/29/05ProjectF - TIM - 1317,possibly copyright issue,3,"dsprintf.c in its original form appears to be part of a real time c library called newlib and appears to be copyrighted by RedHat, Inc. According to the license, redistribution in source form must retain the copyright notice and redistribution in binary form must reproduce the copyright in accompanying documentation.",6/29/05ProjectF - TIM - 1316,header file misc.h not used,5,"The header file misc.h is included only by misc.c, which is not used.",6/29/05ProjectF - TIM - 1315,unused file,5,None of the functions in misc.c are ever invoked.,6/29/05ProjectF - TIM - 1314,differing declarations for memcpy,5,"misc.h: 74, dsprintf.c: 71 There are two different declarations for memcpy here.",6/29/05ProjectF - TIM - 1313,output to UART while in-flight,5,There are numerous calls to a routine dsprintf throughout the code which prints texts to a UART to which a console is connected. What will happen in space when there is no console?,6/29/05ProjectF - TIM - 1312,buffer overflow potential in maintenance mode,5,ui.c: 142: gets This function does nothing to protect against potential buffer overflow. A fixed size buffer is passed in to the function yet there is no limit to the number of characters the function may try to place in this buffer. We recommend passing the size of the buffer in to the function as a parameter and limiting the number of characters placed in the buffer accordingly.,6/28/05ProjectF - TIM - 1311,questionable cast,5,bufferedSrec.c: 665: download_buffered_srecord Argument 1 to the function targetWrite is cast to type ulong for some reason when the function actually wants a uint32. If these are of differing size data precision could be sacrificed.,6/28/05ProjectF - TIM - 1310,return value not checked,5,bufferedSrec.c: 665: download_buffered_srecord The return value (int status) from the function targetWrite is not checked.,6/27/05ProjectF - TIM - 1309,parameter declared with wrong type,5,"bufferedSrec.c: 264 The calling routine passes a uint in to the ""int port"" parameter of the function download_srecord and port is assumed to be a uint in the function body. Recommend changing the declaration to ""uint port"" for consistency.",6/27/05ProjectF - TIM - 1308,conditional expression style,5,bufferedSrec.c: 208 This IF is really the ELSE clause for the IF on line 202.,6/27/05ProjectF - TIM - 1307,compile error,5,"misc.c: 107 There is an extra paren on this line. With a standard compiler, this will not compile. This file is likely not part of the build. If this is true the file should be archived and removed from the build tree.",6/27/05ProjectF - TIM - 1306,Boot Register unitialized on reset,4,"Since the Boot Register (CSAR7) is uninitialized on reset it will have an unpredictable value on power-on reset. It would seems that there is a very small chance that it would randomly contain one of the expected values (0xF050, 0xF000, 0xF001, 0xF002).",6/27/05ProjectF - TIM - 1305,Effect of watchdog timer failure on BSW,3,"main.c: 628: WaitForRestart main.c: 536: fault_handler BSW halts execution by entering an infinite loop, relying on the watchdog timer to reset the system due to inactivity. What happens if the watchdog timer fails to reset the system?",6/24/05ProjectF - TIM - 1304,Active printf commands,5,The listed functions in the following files contain a printf as active code: File: Function: csscrub.c CS_memory_scrub csscrub.c CS_memory_scrub_all dsutils.c DS_lmemcpy iruprocess.c IRU_prcsFidAbNothing irutask.c IRU_task_main irutask.c IRU_prcsSidCmd irutask.c IRU_handleInvldCmd net_task.c BindToRandom net_task.c NET_task_main netrtems.c Init osstart.c randomize_everything osstart.c xmain osstart11_1.c OS_seminit_Acdss osstart11_1.c OS_seminit_MAGdata osstart11_1.c OS_seminit_ACdeltav osstart11_1.c OS_seminit_TC1hz osstart11_1.c OS_seminit_Tofifo osstart11_1.c OS_mutinit osstart11_1.c xmain osutils.c OS_change_modes_internal rtems.c Init sbmacros.h sbpipe.c SBinit_pipelines sbtask.c SB_task_main,5/11/05ProjectF - TIM - 1303,Clarification needed for commented out code for CS_valid_table_entry,5,"The function, CS_valid_table_entry, has been modfied on a couple different occasions. It was updated once in 1993 and once in 1994. The comment concerning adding additional criteria to the function is valid; however, the criteria for checking an SCP table are commented out. As the code is written, any SCP table is considered invalid. If this code is accurate, additional information is needed to clarify this omission.",5/9/05ProjectF - TIM - 1302,Inconsistency between the PDL and the code in function CS_get_code_table,5,"There are inconsistencies between the psuedo code and the actual software for the function, CS_get_code_table. The psuedo code references the SYS_TOT_CNT where the code uses CN_TOT_CNT. SYS_TOT_CNT is not found in any of the code. In the first IF statement and WHILE loop, the following tasks are performed in addition to what the psuedo code requires: Update Live Checksumming Telemetry, Reset the local_code_checksum, and Recompute Code Table.",4/20/05ProjectF - TIM - 1301,Inconsistent Initial Checksum value CS_build_master_cslists,4,"The PDL (psuedo code) for the function, CS_build_master_cslists, has an initial checksum value, 0xFFFF, instead of the coded value, 0x0000, which is stored in the variable, CS_INITIAL_VALUE.",4/18/05ProjectF - TIM - 1300,Incosistency between code and psuedo code for function CS_Add_Code,4,"There are discrepancies between the psuedo code (PDL) and the actual code for the function, CS_Add_Code, in the file cstask.c. The psuedo code sets the checksum as valid if an expansion slot is available, while the code sets it as false. In the portion of the psuedo code where the size is zero, the slot address and checksum are marked as invalid, which is not found in the code. The event messages are all commented out.",4/13/05ProjectF - TIM - 1299,Uninitialized Counters,4,While ANSI standard compilers will initialize extern and static variables to zero it is considered good practice to explicitly initialize these variables in the code. The following global counter variables are not explicitly initialized. ****** ci_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:155 ****** os_timer1_isr_cnt of type u_dword Define: by osglmem.c in osglmem.c at line:116 ****** os_timer2_isr_cnt of type u_dword Define: by osglmem.c in osglmem.c at line:117 ****** os_ci_code_blk_ready_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:122 ****** os_ci_underflow_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:123 ****** os_ci_overflow_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:124 ****** os_to_fifo_less_than_1qtr_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:125 ****** os_to_fifo_less_than_half_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:126 ****** os_to_fifo_less_than_3qtr_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:127 ****** os_to_fifo_underflow_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:128 ****** os_to_fifo_overflow_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:129 ****** os_to_fifo_out_of_sync_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:130 ****** os_tc_corr_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:131 ****** os_tc_1hz_isr_cnt of type u_word Define: by osglmem.c in osglmem.c at line:132 ****** cs_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:156 ****** hs_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:159 ****** it_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:160 ****** sb_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:165 ****** sm_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:167 ****** tc_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:168 ****** to_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:169 ****** to_isr_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:176 ****** tc_isr_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:177 ****** ci_isr_exec_cnt of type u_word Define: by osglmem.c in osglmem.c at line:178 ****** to_fill_seq_cnt of type u_dword Define: by todlinkfifo.c in todlinkfifo.c at line:204 ****** to_vcdus_output_cnt of type u_dword Define: by todlinkfifo.c in todlinkfifo.c at line:208 ****** ci_hk_stat_seq_count of type u_word Define: by ciglobl.c in ciglobl.c at line:110 ****** os_fpu_inexact_count of type u_dword Define: by osglmem.c in osglmem.c at line:187 ****** os_fpu_overflow_count of type u_dword Define: by osglmem.c in osglmem.c at line:188 ****** os_fpu_underflow_count of type u_dword Define: by osglmem.c in osglmem.c at line:189 ****** os_fpu_divzero_count of type u_dword Define: by osglmem.c in osglmem.c at line:190 ****** os_fpu_invalid_count of type u_dword Define: by osglmem.c in osglmem.c at line:191 ****** os_fpu_unimplemented_count of type u_dword Define: by osglmem.c in osglmem.c at line:192 ****** os_fpu_nop_count of type u_dword Define: by osglmem.c in osglmem.c at line:193 ****** os_tick_count of type u_word Define: by osglmem.c in osglmem.c at line:244 ****** os_soft_poweron_count of type u_word Define: by osmodelg.c in osmodelg.c at line:126 ****** os_perf_counter of type u_dword Define: by osglmem.c in osglmem.c at line:218 ****** ds_odd_packet_count of type u_dword Define: by dsmain.c in dsmain.c at line:197 ****** sc_hk_stat_seq_count of type u_word Define: by scglmem.c in scglmem.c at line:197 ****** to_odd_packet_count of type u_dword Define: by tomain.c in tomain.c at line:123,4/7/05ProjectF - TIM - 1298,Potential Divide By Zero,3,Line 51 of nfs.h defines a macro in terms of a division operation. IV&V could not find a definition for the operands of the division operation so this may result in a floating point error. Since this is a preliminary build and there are in fact a lot of undefined objects we will hold this issue until we can review Build 2. See snippit below: #define NFS_HZ (hz / nfs_ticks) /* Ticks/sec */,3/23/05ProjectF - TIM - 1297,Multiply defined macro SS_TASK_ID,3,The macro SS_TASK_ID is defined in multiple places and not always as the same value. See snipits below: hsutils.c: 78:#define SS_TASK_ID sender_id sbcmd.c: 64:#define SS_TASK_ID SB_TASK_ID sbmacros.h: 131:#define SS_TASK_ID SB_TASK_ID sbprof.h: 63:#define SS_TASK_ID SB_TASK_ID ossnint.c: 68:#define SS_TASK_ID SNISR_TASK_ID acfdsif.c: 106:#ifndef SS_TASK_ID 107: #define SS_TASK_ID FDSIF_TASK_ID /* Task Identifier */ 108:#endif,3/1/05ProjectF - TIM - 1296,Use of C++ keyword (operator) for structure element identifier,4,"The structure lm_limit_entry (defined on lines 300 - 314 of file structs.h and used on lines 256, 511 and 514 of file LMfuncdecl.c) uses the C++ keyword operator as one of its element names. While this should not cause any problems as long as this code is compiled as standard C code it will not compile correctly as C++ code. This could pose a reuse problem should some of the code that uses this structure be reused in a C++ environment. See snipits below: structs.h: typedef struct { u_byte enable; u_word apid; u_byte offset; u_byte type; u_byte operator; u_byte chaining; u_byte chain_index; u_byte rts_id; u_byte subsystem_id; u_byte event_id; u_byte count; u_dword limit_value; } OS_PACK lm_limit_entry; //128 bits LMfuncdecl.c: 256: switch(lm_limit_entry_table[ID].operator) 511: if( (table[index].operator != LM_GREATER_THAN) && (table[index].operator != LM_LESS_THAN) && (table[index].operator != LM_EQUAL) && (table[index].operator != LM_NOT_EQUAL) && (table[index].operator != LM_MASK_AND) && (table[index].operator != LM_MASK_OR) && (table[index].operator != LM_MASK_XOR)) 514: eventf(LM_TASK_ID, LM_INVALID_MONITOR_POINT_OPERATOR, 0, index, table[index].operator, 0, 0);",3/1/05ProjectF - TIM - 1295,"Non-Initialized - SubSys1 Code Release 1 - ""next_reference.block"" in line 190 of dstif.c",3,"In SubSys1 code file dstif.c, function DS_next_block_ref, the ""block"" element of object ""next_reference"" is uninitialized. This is a result of the commenting out of line 190 of the code in which ""next_reference.block"" is supposed to be assigned a value. The change log for dstif.c does not contain any information on commenting out line 190.",2/16/05ProjectF - TIM - 1294,"Non-Initialized - SubSys1 Code Release 1 - ""next_reference.block"" in line 166 of dstif.c",3,"In SubSys1 code file dstoif.c, function DS_next_ref, the ""block"" element of object ""next_reference"" is uninitialized when the condition current_reference.block_index + 1 >= NUMBER_OF_VCDUS_PER_BLOCK is true. This is a result of the commenting out of line 166 of the code in which ""next_reference.block"" is supposed to be assigned a value. The change log for dstoif.c does not contain any information on commenting out line 166.",2/16/05ProjectF - TIM - 1293,Potential NULL Pointer Dereference,3,"The function TO_current_filter defined on lines 250 - 261 in file tofilter.c can return NULL as one of the valid return values. The return values should be checked before using to guard against a NULL pointer dereference. This function is called four times (lines 284, 315, 316 and 343 of file tofilter.c) and in the first three cases the return value is used without testing for NULL. see snipits below: File tofilter.c: 250 filter_entry_type *TO_current_filter(int ap_id) 251 { 252 int i; 253 for(i=0; i < FILTER_TABLE_SIZE; i++) 254 { 255 if(to_filter_ptr_table[(to_hk_status.current_filter_table-1)][i].apid == ap_id) 256 { 257 return to_filter_ptr_table[(to_hk_status.current_filter_table-1)] + i; 258 } 259 }; 260 return NULL; 261 } ... 284 TO_current_filter(jam_cmd->ap_id)->rate = jam_cmd->n; ... 315 t1 = TO_current_filter(swap_cmd->ap_id1); 316 t2 = TO_current_filter(swap_cmd->ap_id2); 317 filter_entry_type temp = *t1; 318 *t1 = *t2; 319 *t2 = temp; ... 343 filter_entry_type *filter = TO_current_filter(apid); 344 345 //filter any packet not listed. 346 if(filter == NULL) 347 return 1;",2/16/05ProjectF - TIM - 1292,Use of uninitalized pointer for memcpy() destination,1,"The pointer tp (of type tf_time_pkt_type) used to reference the time of the updated thruster firing values is not set to a valid address before being used as a destination address for memcpy(). The pointer is declared on line 93 of file TFtask.c. It is used as an argument to a function on line 96 and then used to set the values of seconds and subseconds on lines 99 and 100 respectively. See snipits below: TFtask.c: 91: void TF_Read_Updated_Thruster_Value(TFTimeStruct *tf, u_word pid) 92: { 93: static tf_time_pkt_type *tp; 94: if(tf->valid) 95: { 96: SBret_status ret = SBreceive_copy(pid, tp, SB_CHECK); 97: if(ret == SB_NORMAL) 98: { 99: tf->time.secs = tp->time.secs; 100: tf->time.subsecs = tp->time.subsecs; 101: tf->valid = 1; 102: }; 103: }; 104: }; sb.h: 213: #define SBreceive_copy(pid,ptr,t) SBint_receive(pid,ptr,t,SS_TASK_ID,COPY_MODE) sbrecv.c: 436: memcpy((char *) ptr, (char *)header, (u_word) (header->packet_length+7));",2/14/05ProjectF - TIM - 1291,Potential Array Out of Bounds (to_ort),3,"The global array to_ort accessed in file todsif.c on lines 208, 274, 316, 394, and 462 may be accessed out of bounds if recorder_id is equal to MAX_TELEMETRY_SOURCE. In some cases this condition is guarded against by the calling function (e.g. DS_restart_playback, DS_restart_retransmit and DS_update_continuous_playback). It appears that this condition could be guarded against in all cases by using the strictly less than (<) rather than the less than or equal to (<=) in the if statements on lines 206, 272, 314, 385 and 458. See snipit below: todsif.h: 118 typedef enum { 119 REAL_TIME, 120 RECORDER_1, 121 RECORDER_2, 122 RECORDER_3, 123 MAX_TELEMETRY_SOURCES 124 } telemetry_source; tobuffer.c: 113 ort_entry to_ort[MAX_TELEMETRY_SOURCES][2]; todsif.c: 206 if ((recorder_id > 0 ) && (recorder_id <= MAX_TELEMETRY_SOURCES))207 {208 ort_entry *ort = &to_ort[recorder_id][retransmit != 0];",2/3/05ProjectF - TIM - 1290,Logic Error in SM_mem_dump_send(),3,"The function SM_mem_dump_send() located in file sm_mem.c beginning on line 476 has two related errors. They are in the part that pads the last dump packet with zeros beginning on line 513. The first error is that the offset pointer into the array (pkt_ptr) is set too far past the data. This is due to the conversion of u_dword to u_word being done twice (once on line 520 and again on line 526). So if there were 10 words left the pointer would be set 20 words into the array to begin padding. The second error is that the upper bound on the for loop index ( SM_MAX_DATA_WSIZE - sm_mdump_tlm.num_bytes*2 ) multiplies the num_bytes by 2 when it appears that the intention was to multiply the SM_MAX_DATA_WSIZE by two. This causes the loop to not execute at all for words_left greater than 24. It is assumed that the casting of the pointer to the data_dump array to u_word is intentional, but since this is done the pointer will need to be incremented twice for each element since the array was declared as u_dword. Multiplying SM_MAX_DATA_WSIZE by two as described above is one way to address this. There may be other better ways to do this however. See snipit below: constants.h: 59 #define SM_MAX_DATA_WSIZE 100 smpkt.h: 111 typedef struct 112 { 113 seds_packet_header_type hdr; 114 tlm_sec_hdr_type sec_hdr; 115 u_word processor_id; 116 u_word copy_num; 117 u_dword fr_mem_addr; 118 u_word num_bytes; 119 u_word spare2; 120 u_dword dump_end; 121 u_dword dump_data[SM_MAX_DATA_WSIZE]; 122 } OS_PACK sm_mem_dump_tlm_fmt; //3424 bits sm_mem.c: 507 for ( i = 0 ; i < packets_to_send ; i++ ) 508 { 509 510 /* 511 ** Adjust words_left. 512 */ 513 if (sm_dump_cntrl.words_left > SM_MAX_DATA_WSIZE) 514 { 515 sm_mdump_tlm.num_bytes = SM_MAX_DATA_WSIZE*2 ; 516 sm_dump_cntrl.words_left -= SM_MAX_DATA_WSIZE ; 517 } 518 else 519 { 520 sm_mdump_tlm.num_bytes = sm_dump_cntrl.words_left*2 ; 521 sm_dump_cntrl.words_left = 0 ; 522 523 /* 524 ** Zero fill remainder of dump packet. 525 */ 526 pkt_ptr = (u_word *)(sm_mdump_tlm.dump_data + sm_mdump_tlm.num_bytes*2) ; 527 for ( j = 0 ; j < ( SM_MAX_DATA_WSIZE - sm_mdump_tlm.num_bytes*2 ) ; j++ ) 528 { 529 *pkt_ptr = 0 ; 530 pkt_ptr++; 531 } 532 533 534 }",1/25/05ProjectF - TIM - 1289,Array Index Out of Bounds,3,In the function DS_get_vr (file dstlm.c line 180) if the apid is not matched (line 185) the for loop will terminate with i equal to DS_FILTER_TABLE_SIZE. The if statement following the for loop will not execute and the second return statement (line 192) will cause ds_vr_map_table to be accessed one element beyond its bounds. The value returned will be undetermined. See snipit below: dstypes.h: 94 #define DS_FILTER_TABLE_SIZE 16 dsglobal.h: 95 extern vr_map_table_type ds_vr_map_table[DS_FILTER_TABLE_SIZE]; dstlm.c: 180 u_word DS_get_vr(word apid) 181 { 182 int i; 183 for(i=0; i < DS_FILTER_TABLE_SIZE; i++) 184 { 185 if(apid == ds_vr_map_table[i].apid) 186 { 187 break; 188 }; 189 }; 190 if(i > DS_FILTER_TABLE_SIZE) 191 return NUMBER_OF_RECORDERS + 1; 192 return ds_vr_map_table[i].virtual_recorder; 193 },1/25/05ProjectF - TIM - 1288,FSW.SC.10 is not supported in the SubSys1 design,4,"FSW.SC.10 states, ""The SC Flight Software shall allow selected ground commands to execute concurrently with Stored Command Sequences (SCSs)."" This requirement does not appear to be supported in the SubSys1 design.",11/2/04ProjectF - TIM - 1287,FSW.SC.07 is not supported in the SubSys1 design,4,"FSW.SC.07 states, ""A relative time tag of zero shall cause the command to be issued as soon as possible after, and in the same second as, the previous command."" This requirement does not appear to be supported in the SubSys1 design.",11/2/04ProjectF - TIM - 1286,FSW.SC.06 is not supported in the SubSys1 design,4,"FSW.SC.06 states, ""A command’s time tag shall be interpreted as the execution delay from the previous command in the sequence."" This requirement does not appear to be supported in the SubSys1 design.",11/2/04ProjectF - TIM - 1285,FSW.SC.05 is not supported in the SubSys1 design,4,"FSW.SC.05 states, ""The resolution for the time tag of a relative time tagged command shall be one (1) second."" This requirement does not appear to be supported in the SubSys1 design.",11/2/04ProjectF - TIM - 1284,FSW.SC.03 is not supported in the SubSys1 design,4,"FSW.SC.03 states, ""Absolute time tagged commands shall be issued to their destination when the spacecraft time matches the individual command’s absolute time tag."" This requirement does not appear to be supported in the SubSys1 design.",11/2/04ProjectF - TIM - 1283,FSW.SC.02 is not supported in the SubSys1 design,4,"FSW.SC.02 states, ""The resolution for absolute time tagged commands shall be 1 second."" This requirement does not appear to be supported in the SubSys1 design.",11/2/04ProjectF - TIM - 1282,IDPU Operational States,3,"The design mini-spec thm_fsw_201_exec defines the operational modes as ""Safe"", ""Normal"", and ""Engineering"". The IDC thm_sys_101 defines them as ""Safe Power"", ""Low Power"", ""Science"" and ""Engineering"". The descriptions also contain varying levels of detail with the mini-spec failing to address FSW.EXEC-15 and 16 which specify the use of the ""Low Power"" and ""Power Down Imminent"" status flags. These definitions should be consistent or one should defer to the other. Also the full set of capabilities that are enabled/disabled for each state should be described. This type of information is often clarified with the addition of a state chart. See example.",11/2/04ProjectF - TIM - 1281,Conflict: TP SubSys1 Design - Fill Data Virtual Channel and Priority Assignments,3,"According to the telemetry virtual channel assignments table on pg. 140 of the FSW Volume (5) of the MCDR material, June 15, 2004, the Fill Data is to use Virtual Channel 7 with a Priority 5. This is in contradiction with the SubSys1 SRS requirement FSW.TP.06.6 which assigns Virtual Channel 1 with a Priority 7 to this type of data. It is also in contradiction with a similar table in the ProjectF Telemetry Data Format Specification document, thm_sys_115d_TelemetrySpecification, Rev. d, 1/28/2004, in which a Priority 7 has been assigned to this type of data.",10/29/04ProjectF - TIM - 1280,Conflict: TP SubSys1 Design - Probe Events Data Virtual Channel and Priority Assignments,3,"According to the telemetry virtual channel assignments table on pg. 140 of the FSW Volume (5) of the MCDR material, June 15, 2004, the Probe Events data is to use Virtual Channel 6 with a Priority 4. This is in contradiction to the SubSys1 SRS requirement FSW.TP.06.5 which assigns Virtual Channel 1 with a Priority 6 to this type of data. It is also in contradiction with a similar table in the ProjectF Telemetry Data Format Specification document, thm_sys_115d_TelemetrySpecification, Rev. d, 1/28/2004, in which a Priority 6 has been assigned to this type of data.",10/29/04ProjectF - TIM - 1279,Conflict: TP SubSys1 Design - IDPU Playback Science Data Virtual Channel Assignment,3,"According to the telemetry virtual channel assignments table on pg. 140 of the FSW Volume (5) of the MCDR material, June 15, 2004, the IDPU Playback Science Data is to use Virtual Channel 3 with a Priority 3. This is in contradiction to the SubSys1 SRS requirement FSW.TP.06.4 which assigns Virtual Channel 0 with a Priority 3 to this type of data.",10/29/04ProjectF - TIM - 1278,Conflict: TP SubSys1 Design - IDPU Realtime Science Data Virtual Channel Assignment,3,"According to the telemetry virtual channel assignments table on pg. 140 of the FSW Volume (5) of the MCDR material, June 15, 2004, the IDPU Realtime Science Data is to use Virtual Channel 2 with a Priority 2. This is in contradiction with the SubSys1 SRS requirement FSW.TP.06.3 which assigns Virtual Channel 1 with a Priority 2 to this type of data.",10/29/04ProjectF - TIM - 1277,Traceability: TP SubSys1 Design - Autonomous Restart of Downlink Requirement,3,"Autonomous restart of Downlink is one of the Telemetry Processing (TP) functional requirements listed on pg. 131 of the FSW Volume (5) of the MCDR material, June 15, 2004. Yet no FSW SRS requirement, or any other higher-level FSW requirement, could be found to be a parent to this all-too-fundamental functionality.",10/29/04ProjectF - TIM - 1276,Incomplete: CP SubSys1 Design - Command Packets Flow Specifications,4,"No information could be found on pg. 32 of the Flight Software volume (5) of the MCDR package, June 15, 2004, or anywhere else in this volume, that addressed any aspects of the flow of the command packets to the FSW tasks, such as queuing specifications or any limits imposed on the number of command packets received by a given FSW task.",10/29/04ProjectF - TIM - 1275,Conflict: CP SubSys1 Design - Role of CP in SC-Originated Commands,4,"The diagram on pg. 32 of the FSW Volume (5) of the MCDR material, June 15, 2004, has the flow of the commands from SC to both “Other FSW Tasks” and CP. It is understood from the text on the same page that CP processes any commands that it receives by validating their CCSDS protocol before sending them to Software Bus itself. However, the diagram contradicts another statement on this page, which states that the commands from SC are sent “directly” to their intended destination via Software Bus (without going through CP).",10/29/04ProjectF - TIM - 1274,Ambiguous: CP SubSys1 Design - CLTU Tail Sequence Length Specifications,4,"The diagram on pg. 123 of the FSW Volume (5) of the MCDR material, June 15, 2004, on Command Link Transfer Unit (CLTU) is ambiguous, in that it does not contain the information on the length of the tail sequence at the end of the CLTU.",10/29/04ProjectF - TIM - 1273,Ambiguous: CP SubSys1 Design - CLTU Multiple Codeblock Length Specifications,4,"The diagram on pg. 123 of the FSW Volume (5) of the MCDR material, June 15, 2004, on Command Link Transfer Unit (CLTU) is ambiguous, in that it does not contain the information on the length, or maximum length, for the multiple codeblocks contained within the CLTU.",10/29/04ProjectF - TIM - 1272,Inconsistent: CP SubSys1 Design - CP Command List,3,"The CP command list on pg. 127 of the FSW Volume (5) of the MCDR material, June 15, 2004, does not contain two of the commands listed on pg. 122, namely “Increment Sequence Counter” and “Lock/Unlock FARM.”",10/29/04ProjectF - TIM - 1271,Traceability: CP SubSys1 Design - Command Processing Statistics Requirement,4,"The FSW Design statement on Command Processing, on Pg. 122 of the FSW Volume (5) of the MCDR material, “The Flight Software shall maintain Command Processing statistics including: - current command packet count, command packets accepted, and command packets rejected” has incorrectly been traced to FSW.CP.14. The correct trace is probably to FSW.CP.25.",10/29/04ProjectF - TIM - 1270,Traceability: CP SubSys1 Design - FARM-Related Commands Requirement,4,"The FSW Design statement on Command Processing, on Pg. 122 of the FSW Volume (5) of the MCDR material, June 15, 2004, “CP Subsystem shall accept and process commands to: - Increment Sequence Counter - Lock/Unlock FARM - Reset Frame Sequence Counter to zero” has been incorrectly traced to FSW SRS requirements FSW.CP.09, FSW.CP.10, and FSW.CP.11. In fact, no FSW SRS requirement could be found to satisfy this statement.",10/29/04ProjectF - TIM - 1269,Traceability: CP SubSys1 Design - Command Distribution Criterion Requirement,4,"The FSW Design statement on Command Processing, on Pg. 122 of the FSW Volume (5) of the MCDR material, June 15, 2004, “Valid Commands are distributed to Subsystem by APID of CCSDS Packet Header” has been traced to the incorrect FSW SRS requirements, FSW.CP.05, FSW.CP.06, and FSW.CP.13. The correct trace is to FSW.CP.22.",10/29/04ProjectF - TIM - 1268,Ambiguous: CP SubSys1 Design - Code Blocks Validation Functionality,4,"The FSW Design statement on Command Processing, on Pg. 121 of the FSW Volume (5) of the MCDR material, June 15, 2004, calling for validating code blocks, is ambiguous in that it does not provide any detail for this functionality.",10/29/04ProjectF - TIM - 1267,Traceability: CP SubSys1 Design - Handling of Software Commands,4,"The presumable FSW Design requirement on Command Processing, on Pg. 121 of the FSW Volume (5) of the MCDR material, June 15, 2004, “All other SubSys1, IDPU, and Software commands are handled by the Command Processing Task” and its related details have been incorrectly traced to FSW.CP.02 and FSW.CP.03. The correct trace should be to FSW.CP.09 and FSW.CP.10.",10/29/04ProjectF - TIM - 1266,Traceability: CP SubSys1 Design - Transfer Frames Requirement - “Control Flag”,4,"The FSW Design feature on Command Processing, on Pg. 121 of the FSW Volume (5) of the MCDR material, June 15, 2004, validating the Transfer Frames for “Control Flag” could not be found as any FSW SRS requirement.",10/29/04ProjectF - TIM - 1265,Traceability: CP SubSys1 Design - Transfer Frames Requirement - “Bypass Flag”,4,"The FSW Design feature on Command Processing, on Pg. 121 of the FSW Volume (5) of the MCDR material, June 15, 2004, validating the Transfer Frames for “Bypass Flag” could not be found as any FSW SRS requirement.",10/29/04ProjectF - TIM - 1264,"Traceability: CP SubSys1 Design - Transfer Frames Requirement - ""Spacecraft ID""",4,"The FSW Design feature on Command Processing, on Pg. 121 the FSW Volume (5) of the MCDR material, June 15, 2004, validating the Transfer Frames for “Spacecraft ID” could not be found as any FSW SRS requirement.",10/29/04ProjectF - TIM - 1263,"Traceability: CP SubSys1 Design - ""Special Commands"" Requirement",4,"FSW Design statement on Command Processing, on Pg. 120 of the FSW Volume (5) of the MCDR material, June 15, 2004, “’Special Commands’ are not processed by Flight Software” has been incorrectly traced to the FSW SRS requirement FSW.CP.08. The correct trace is to FSW.CP.11.",10/29/04ProjectF - TIM - 1262,Special Command VC Assignment,4,The Special Command Virtual Channel assignment specified in the SubSys1 SRS by FSW.CP.10 is not consistent with the assignments documented in the CDR presentation on slide 121.,10/22/04ProjectF - TIM - 1261,No traceability between MRD requirement IN.DPU-11 and the PWR module in the SRS,3,"Rev E of the IDPU SRS corrected the traceability issue described in TIM 1150, however, another issue appears to have been created. The NOTES column for IN.DPU-11 now states ""PWR provides safing function for SMAs."" IV&V assumes ""safing"" should be ""saving."" If that is an accurate assumption, there does not appear to be a requirement in the PWR section of the SRS that indicates the PWR module provides a saving function for SMAs. Additionally, the PWR mini-spec does not appear to support this capability. Recommend correcting the spelling error, updating the PWR section of the SRS and updating the PWR mini-spec.",10/20/04ProjectF - TIM - 1260,Unreferenced Subroutines,4,The following 57 subroutines (see attachment) appear to be unreferenced by any other code. In each case this may be due to the incomplete nature of the code at this point in time or it may be an indication that the code is in fact unused.,10/19/04ProjectF - TIM - 1259,No interfaces for the IO module are shown in IDPU FSW OVERVIEW,4,"The IDPU FSW OVERVIEW diagram found in the ""Diagrams"" tab of thm_fsw_005_Design does not show any interfaces for the IO module. This diagram should be updated to reflect the IO interfaces.",10/15/04ProjectF - TIM - 1258,Incomplete statement in the IO mini-spec,4,"The following statement is in Section 1.1.1.7 of the IO mini-spec: RAM_AREA DS 20 length now 14, will grow to ? LXI H,RAM_AREA CALL HSK_DCB The “?” should be updated with the appropriate value.",10/15/04ProjectF - TIM - 1257,FSW.CMP-8 is not supported in the CMP mini-spec,4,"FSW.CMP-8 states, “CMP FSW functions shall include Huffman4, Delta-Modulation, and a combination of these, in order to achieve a nominal 2x compression factor.” This requirement is not supported in the CMP mini-spec. The mini-spec should be updated to discuss this requirement. This should include a pointer to thm_fsw_005_Design, which provides detail in the Huffman and DELTAMOD tabs.",9/23/04ProjectF - TIM - 1256,The initialization requirements need additional support in the mini-specs,3,"TIM 1103 addressed the vague nature of several initialization requirements in the SRS. The solution to this was to add a statement in each requirement pointing the reader to the appropriate mini-spec for additional details. However, many of the mini-specs do not provide additional detail on the INIT functions. Recommend updating the following mini-specs with INIT details: FSW.BKG-1 (Initialization section of the mini-spec is blank)FSW.CMP-1 FSW.SCI-1 FSW.TM-1 (Partially addressed in the mini-spec) FSW.HSK-1 FSW.LD-1 (Partially addressed in the mini-spec) FSW.IO-1 FSW.PWR-1 FSW.SSR-1 FSW.ACS-1 FSW.ETC-1 FSW.SCM-1 FSW.DEP-1 FSW.FIT-1 The FGM mini-spec provides a good example of what would be expected for each of the mini-specs.",9/23/04ProjectF - TIM - 1255,FSW.SCI-2 is not addressed in the SCI mini-spec,3,"FSW.SCI-2 states, ""SCI_CMD shall receive and execute commands to the module at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" This requirement is not addressed in the SCI mini-spec or the thm_fsw_003 or thm_fsw_005 design documents. Recommend updating the design documents to supported this requirement. This issue is similar to TIMs 1193, 1203, 1211, 1223, 1235, 1238, 1243 and 1249.",9/22/04ProjectF - TIM - 1254,Compression rates are not described in detail in the CMP mini-spec,3,"The first paragraph in the CMP mini-spec states ""The CMP module selects packets in the SSR for compression and compresses each packet based upon the type of data in the packet"" and the second paragraph states ""Compression runs at a variable rate through the memory since the compression rate is dependent upon the ingested data set."" The mini-spec should provide details on the compression rates for each type of packet or should point to where this information is provided. I was unable to locate the information in thm_fsw_005 or thm_fsw_003 (003 has data rate and data storage tabs but I did not see compression rate information).",9/22/04ProjectF - TIM - 1253,FSW.CMP-9 is not sufficiently supported in the CMP mini-spec,3,"FSW.CMP-9 states, ""CMP FSW shall identify in engineering telemetry what compression algorithms are being used."" The CMP mini-spec should describe how each algorithm is identified in the telemetry or it should point to where this information is documented. Recommend updating the mini-spec to support the requirement. The IDPU command and telemetry specification (thm_fsw_003_ctm_v1.03.xls) indicates a compression flag in engineering telemetry on sheet 451 but it is a one bit binary flag and appears to only indicates if compression was used or not. thm_sys_116a paragraph 3.1.1.1.4 implies that the information required by FSW.CMP-9 is contained in the configuration ID but this is not completely clear.",9/22/04ProjectF - TIM - 1252,The CMP mini-spec does not sufficiently support FSW.CMP-6,3,"FSW.CMP-6 states, ""CMP FSW shall use the APID to select the appropriate compression algorithm."" The CMP mini-spec should describe which algorithm is appropriate for each data type or should identify where this information is documented. Recommend updating the mini-spec to support the requirement.",9/22/04ProjectF - TIM - 1251,FSW.CMP-4 is not completely supported in the mini-spec,4,"FSW.CMP-4 states, ""If Enabled, CMP_MGR shall compress uncompressed CCSDS packets in the SSR memory on a time-available basis."" The first paragraph of the CMP mini-spec hints at this when it states that all completed particle and wave burst segments are compressed after survey data is compressed. The mini-spec does not describe what happens if data is not compressed (presumably it is downloaded but the download process takes longer since it is not compressed). Recommend updating the mini-spec to completely support the requirement.",9/22/04ProjectF - TIM - 1250,FSW.CMP-3 is not supported in the CMP mini-spec,3,"FSW.CMP-3 states, ""CMP FSW shall allow on-orbit replacement of compression algorithms."" This capability is not described in the CMP mini-spec. Recommend updating the mini-spec to support the requirement.",9/22/04ProjectF - TIM - 1249,The CMP mini-spec does not sufficiently support FSW.CMP-2,4,"FSW.CMP-2 states, ""CMP_CMD shall receive and execute commands to the module at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" This requirement is not addressed in the CMP mini-spec and it is unclear where in Ref 26 the commands are described. The CMP_CMD command is in the code, however it is not supported in the mini-spec. Recommend updating the mini-spec to support this requirement. Based on the results of the performance analysis documented in thm_fsw_005 it would appear that this requirement is not being met. Since it is not possible to complete the compression of any significant amount of data in 2msec or less the requirement may not be worded clearly. Based on the updated design document (thm_fsw_200) it appears the the CMP module is not required to meet the timing constraints specified in requirement FSW.CMP-2. If this is the case then the requirement should be deleted or changed as appropriate.",9/22/04ProjectF - TIM - 1248,None of the FFP requirements or routines are discussed in additional detail in the FFP mini-spec,2,"The FFP mini-spec contains one statement, ""Each of these values except N are 3-byte floating point values. N begins at 32 points and usually end between 24 and 30 by the end of the fitting process."" No additional detail is provided in the FFP mini-spec. Nearly all of the FFP routines described in the requirements are in the code. One difference is FIX (FSW.FFP-9) is not in the code, however FIX32 is in the code and may be the corresponding routine. The mini-spec should be updated to reflect FIX32 if that is indeed the case. Also, there are two routines (FLT32 and FSQRT) in the code that do not appear in the SRS. These should be described in the mini-spec as well. Recommend adding data to support the requirements and any other design artifacts to the mini-spec if the appropriate information is available.",9/22/04ProjectF - TIM - 1247,MATRIX mini-spec is incomplete,3,The MATRIX mini-spec consists of one sentence and five headings with no support information. Presumably additional support information is available that could provide design details for this module. Recommend adding support data and design artifacts to the mini-spec if the appropriate information is available.,9/22/04ProjectF - TIM - 1246,FSW.FIT-5 is not supported in the FIT mini-spec,3,"FSW.FIT-5 states, “FIT_TELEM shall return telemetry bytes or fill.” This module should be described in additional detail in the FIT mini-spec.",9/21/04ProjectF - TIM - 1245,FSW.FIT-4 is not supported in the FIT mini-spec,3,"FSW.FIT-4 states, “FIT_SAMP Shall store samples collected from sensors.” This module should be described in additional detail in the FIT mini-spec.",9/21/04ProjectF - TIM - 1244,FSW.FIT-3 is not supported in the FIT mini-spec,3,"FSW.FIT-3 states, “FIT_SYNC shall synchronize sampling to sun angle.” This module should be described in additional detail in the FIT mini-spec.",9/21/04ProjectF - TIM - 1243,FSW.FIT-2 is not supported in the FIT mini-spec,3,"FSW.FIT-2 states, “DEP_CMD shall receive and execute commands to the module at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less.” This module should be described in additional detail in the FIT mini-spec. This issue is similar to TIMs 1193, 1203, 1211, 1223, 1235, 1238, 1249 and 1255.",9/21/04ProjectF - TIM - 1242,DEP_CMD is in FSW.FIT-2 rather than FIT_CMD,5,"In the IDPU SRS Rev E Tables, FSW.FIT-2 states, ""DEP_CMD shall receive and execute commands to the module at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" DEP_CMD should be FIT_CMD. This was probably a simple copy/paste error.",9/21/04ProjectF - TIM - 1241,FSW.DEP-6 is not supported in the DEP mini-spec,3,"FSW.DEP-6 states, ""DEP FSW Controls EFI Boom Deployment Motors using CDI commands as follows: 000 = Motors Off 001 = SPB1 On 010 = SPB2 On 011 = SPB1&2 On 100 = Motors Off 101 = SPB3 On 110 = SPB4 On 111 = SPB3&4 On CDI Motor control commands are briefly mentioned in the first paragraph of the DEP mini-spec, however, the specific commands listed in the requirement are not discussed in the mini-spec. Additionally, boom deployment is in the DEP code but the specific commands in the requirement are not used. Recommend updating the mini-spec with the correct commands.",9/21/04ProjectF - TIM - 1240,FSW.DEP-5 is not sufficiently supported in the DEP mini-spec,3,"FSW.DEP-5 states, ""When deploying in pairs, DEP shall maintain a maximum of 2 ""click"" difference between boom lengths."" This requirement is not addressed in the SCM mini-spec. “Click” is described in the mini-spec, however the need to maintain a 2 “click” difference is not discussed.",9/21/04ProjectF - TIM - 1239,FSW.DEP-3 is not supported in the DEP mini-spec,3,"FSW.DEP-3 states, ""DEP shall not deploy booms unless the IDPU is in Engineering Mode."" This requirement is not addressed in the DEP mini-spec.",9/21/04ProjectF - TIM - 1238,FSW.DEP-2 is not completely supported in the DEP mini-spec,4,"FSW.DEP-2 states, ""DEP_CMD shall receive and execute commands to the module at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" This requirement does not appear to be supported by the design specified in thm_fsw_200. This issue is similar to TIMs 1193, 1203, 1211, 1223, 1235, 1243, 1249 and 1255.",9/21/04ProjectF - TIM - 1237,FSW.SCM-5 is not supported in the SCM mini-spec,3,"FSW.SCM-5 states, ""SCM software shall automatically turn off Calibration after no more than 32 seconds."" This requirement is not addressed in the SCM mini-spec. The mini-spec should be updated to support this requirement.",9/21/04ProjectF - TIM - 1236,FSW.SCM-4 is not supported in the SCM mini-spec,3,"FSW.SCM-4 states, ""SCM software shall provide calibrate On/Off commands to the SCM Preamplifier circuit. Ref 26."" This requirement is not addressed in the SCM mini-spec. There is a heading for ""Commands,"" however it is blank. The mini-spec should be updated to describe these commands.",9/21/04ProjectF - TIM - 1235,FSW.SCM-2 is not supported in the SCM mini-spec,3,"FSW.SCM-2 states, ""SCM shall receive and execute commands to the module and SCM Preamp at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" This requirement is not addressed in the SCM mini-spec. There is a heading for ""Commands,"" however it is blank. The mini-spec should specifically address the commands, where they are received from and the output of the execution. This issue is similar to TIMs 1193, 1203, 1211, 1223, 1238, 1243, 1249 and 1255.",9/21/04ProjectF - TIM - 1234,FSW.FGM-6 is not supported in the FGM mini-spec,3,"FSW.FGM-6 states, ""FGM shall control the collection of FGM TML data transfers into the SSR."" This requirement is not addressed in the EFI mini-spec. This requirement is identified and covered in the code. The control and transfer of the data should be described in the mini-spec.",9/21/04ProjectF - TIM - 1233,FSW.FGM-5 is not completely supported in the FGM mini-spec,4,"FSW.FGM-5 states, ""FGM shall control the range of X, Y and Z values by ground command."" Section 1.1.3 is presumably supporting this requirement however it uses BX, BY and BZ rather than X, Y and Z. This requirement is identified and covered in the code (uses X, Y and Z). The inconsistency should be corrected in the mini-spec. Additionally, the mini-spec does not indicate that the range is controlled by ground. This interface should be described in the mini-spec.",9/21/04ProjectF - TIM - 1232,FSW.FGM-4 is not completely supported in the FGM mini-spec,4,"FSW.FGM-4 states, ""FGM shall provide initial turn-on sequence of up to 16 CDI commands to FGE."" This requirement is not addressed in the EFI mini-spec. This requirement is identified and covered in the code. Section 1.1.3 of the mini-spec refers to commands; however, additional detail is necessary to fully support the requirement.",9/21/04ProjectF - TIM - 1231,FSW.ETC-14 is not supported in the ETC mini-spec,3,"FSW.ETC-14 states, ""ETC FSW software shall calculate the spacecraft potential and send it to the ETC."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1230,FSW.ETC-13 is not supported in the ETC mini-spec,3,"FSW.ETC-13 states, ""ETC FSW shall jam the spin number, time, and SST attenuator position into the packet headers."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1229,FSW.ETC-12 is not supported in the ETC mini-spec,3,"FSW.ETC-12 states, ""ETC FSW shall control the collection of SST data transfers to the SSR."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1228,FSW.ETC-11 is not supported in the ETC mini-spec,3,"FSW.ETC-11 states, ""ETC FSW shall control the collection of ESA data transfers to the SSR."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1227,FSW.ETC-10 is not supported in the ETC mini-spec,3,"FSW.ETC-10 states, ""ETC FSW shall jam ESA HV to commanded value if the commanded value is less than current value."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1226,FSW.ETC-9 is not supported in the ETC mini-spec,3,"FSW.ETC-9 states, ""ETC FSW shall ramp up ESA HV from current value up to commanded value at a programmable rate."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1225,FSW.ETC-8 is not supported in the ETC mini-spec,3,"FSW.ETC-8 states, ""ETC FSW shall hold ESA HV registers at 0V when ESA HV is disabled."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1224,FSW.ETC-7 is not supported in the ETC mini-spec,3,"FSW.ETC-7 states, ""ETC FSW shall request and collect ESA and SST housekeeping data and format per Ref 26."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1223,FSW.ETC-6 is not supported in the ETC mini-spec,3,"FSW.ETC-6 states, ""ETC_CMD shall receive and execute commands to the module, the ESA and SST sensors at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement. This issue is similar to TIMs 1193, 1203, 1211, 1235, 1238, 1243, 1249 and 1255.",9/21/04ProjectF - TIM - 1222,FSW.ETC-5 is not supported in the ETC mini-spec,3,"FSW.ETC-5 states, ""ETC FSW shall load energy bin translation tables for all distributions of ESA and SST data."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1221,FSW.ETC-4 is not supported in the ETC mini-spec,3,"FSW.ETC-4 states, ""ETC FSW shall load angle bin translation tables for all distributions of ESA and SST data."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1220,FSW.ETC-3 is not supported in the ETC mini-spec,3,"FSW.ETC-3 states, ""ETC FSW shall load tables of exponentials."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1219,FSW.ETC-2 is not supported in the ETC mini-spec,3,"FSW.ETC-2 states, ""ETC FSW shall load tables of up to 40KB of constants for ESA and SST partial moment calculations."" This requirement is not addressed in the ETC mini-spec. Recommend updating the mini-spec to support the requirement.",9/21/04ProjectF - TIM - 1218,Inconsistent Action if Critical Tasks Fail to Check In,4,"SubSys1 SRS requirement FSW.HS.02 specifies that corrective action for critical tasks that fail to check in can be: None, Warm Restart or Cold Restart. SubSys1 SDD slide 111 bullet 7 specifies only warm restart.",9/20/04ProjectF - TIM - 1217,COP-1 Sliding Window Size Off By One,4,SubSys1 SRS requirement FSW.CP.12 specifies a sliding window size of 128 transfer frames. ProjectF Telecommand Format Specification document (thm_sys_102c) section 4.4.2 specified a sliding window size of 127. This is probably just a case of counting from zero rather than counting from one but they should be consistent.,9/20/04ProjectF - TIM - 1216,Inconsistent Telemetry Packet Length Specification,3,The SubSys1 SDD (CDR presentation) does not specify a maximum telemetry packet length but references the ProjectF Telemetry Packet Data Format Specification (thm_sys_116) for specifics on the telemetry packets. thm_sys_116 specifies 4096 bytes as the maximum size for the telemetry packets but the FSW SRS (requirement TP.04) specifies 512 bytes as the maximum telemetry packet length.,9/20/04ProjectF - TIM - 1215,FSW.EFI-6 is not supported in the EFI mini-spec,3,"FSW.EFI-6 states, ""EFI shall calculate the Spacecraft Potential and make available to the SST module."" This requirement is not addressed in the EFI mini-spec. Recommend updating the mini-spec to support this requirement.",9/17/04ProjectF - TIM - 1214,FSW.EFI-5 is not supported in the EFI mini-spec,3,"FSW.EFI-5 states, ""EFI shall control the collection of EFI data transfers to the SSR."" This requirement is not addressed in the EFI mini-spec. Recommend updating the mini-spec to support this requirement.",9/17/04ProjectF - TIM - 1213,FSW.EFI-4 is not supported in the EFI mini-spec,3,"FSW.EFI-4 states, ""EFI shall recover housekeeping data from BEB and DFB to provide to general housekeeping telemetry."" This requirement is not addressed in the EFI mini-spec. Recommend updating the mini-spec to support this requirement.",9/17/04ProjectF - TIM - 1212,FSW.EFI-3 is not supported in the EFI mini-spec,3,"FSW.EFI-3 states, ""EFI shall send command sets to configure the BEB and DFB boards depending upon Sampling mode."" This requirement is not addressed in the EFI mini-spec. Recommend updating the mini-spec to support this requirement.",9/17/04ProjectF - TIM - 1211,FSW.EFI-2 is not supported in the EFI mini-spec,3,"FSW.EFI-2 states, ""EFI shall receive and execute commands to the module and BEB circuitry at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" This requirement is not addressed in the EFI mini-spec. Recommend updating the mini-spec to support this requirement. This issue is similar to TIMs 1193, 1203, 1223, 1235, 1238, 1243, 1249 and 1255.",9/17/04ProjectF - TIM - 1210,SSR mini-spec Incomplete,4,"The SSR mini-spec contains three TBDs in place of diagrams. They are at the end of sections 1.1.3.2, 1.1.3.3 and 1.1.3.4. Additionally, the title for section 1.1.4 contains a question mark, which implies that the section is incomplete. Recommend updating the mini-spec with the diagrams and completing section 1.1.4.",9/17/04ProjectF - TIM - 1209,FSW.SSR-12 is not supported in the mini-spec,3,"FSW.SSR-12 states, ""SSR shall provide status telemetry on how much data is contained in each memory segment."" This requirement is not addressed in the SSR mini-spec. Recommend updating the SSR mini-spec to support the requirement.",9/17/04ProjectF - TIM - 1208,FSW.SSR-11 is partially supported in the mini-spec,4,"FSW.SSR-11 states, ""SSR shall be capable of replaying the Burst segment in decreasing order of the content evaluation."" Section 1.1.5 discusses some playback facts, however, it does not support details on the second part of the requirement (""decreasing order of content evaluation""). Recommend updating the mini-spec to provide support information on the entire requirement.",9/17/04ProjectF - TIM - 1207,Inconsistency between FSW.SSR-9 and the mini-spec,3,"FSW.SSR-9 states, ""SSR shall subdivide Burst Segment into (N+1) search and N collect segments, where N = 1 to 8."" Sections 1.1.3.3 and 1.1.3.4 of the mini-spec state 1<N<16. Recommend updating the SRS or the mini-spec with the correct maximum value for ""N.""",9/17/04ProjectF - TIM - 1206,FSW.SSR-7 is not supported in the mini-spec,3,"FSW.SSR-7 states, ""SSR shall provide a programmable table mapping sensor data to memory segment."" This requirement is not supported in the SSR mini-spec. Recommend adding detail on this requirement to the mini-spec.",9/17/04ProjectF - TIM - 1205,Memory allocation is different between FSW.SSR-6 and the SSR mini-spec,3,"FSW.SSR-6 states, ""SSR shall set the default allocations for memory segments as: - Engineering : 4 MB - Quick Look : 4 MB - Survey : 96 MB - Burst : 96 MB The mini-spec allocates the memory as follows: - Engineering : 5 MB - Survey : 95 MB - Particle Burst : 50 MB - Wave Burst : 50 MB Recommend updating the SRS or the mini-spec with the correct storage area values. Given that the segments in the code are Engineering, Quick Look, Survey and Burst the assumption is that the mini-spec needs updated.",9/17/04ProjectF - TIM - 1204,Memory subdivision is different between FSW.SSR-5 and the SSR mini-spec,3,"FSW.SSR-5 states, SSR shall be capable of subdividing the SSR Memory into Engineering, Quick Look, Survey, and Burst memory segments."" The mini-spec states the storage should be divided into Engineering, Survey, Particle Burst and Wave Burst memory segments. Based on the mini-spec, it appears the ""Quick Look"" allocation was deleted and the Burst allocation was divided into two smaller memory locations. Recommend updating the SRS or the mini-spec with the correct storage area names. The segments in the code are Engineering, Quick Look, Survey and Burst. Assumption is that the mini-spec needs updated.",9/17/04ProjectF - TIM - 1203,FSW.SSR-2 is not supported in the SSR mini-spec,4,"FSW.SSR-2 states, ""SSR shall receive and execute commands to the module and SSR Memory Circuit at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less. This requirement is not addressed in the SSR mini-spec. SSR command execution is in the code, it should be described in the SSR mini-spec. This issue is similar to TIMs 1193, 1211, 1223, 1235, 1238, 1243, 1249 and 1255.",9/17/04ProjectF - TIM - 1202,TBRs/TBS in the PWR mini-spec,4,"There are several TBRs and one TBS in the PWR mini-spec. The TBRs are: Section 1.1.4, first paragraph Section 1.1.4, third paragraph Section 1.1.5 The TBS is in the final paragraph of section 1.1.4.",9/17/04ProjectF - TIM - 1201,FSW.PWR-11 is not clearly supported in the PWR mini-spec,4,"FSW.PWR-11 states, ""PWR shall provide a programmable period for Frangibolt activation (up to 63 seconds)."" IV&V could not find evidence to support this requirement in the IDPU Design Documents.",9/17/04ProjectF - TIM - 1200,FSW.PWR-10 is not supported in the PWR mini-spec,3,"FSW.PWR-10 states, ""PWR shall inhibit activation of the ESA Covers and Frangibolts if not Enabled (Ref 26 Enables)."" Activation is discussed in detail throughout the PWR mini-spec; however, ESA Covers and Frangibolts are not specifically mentioned. This requirement is addressed in the code; the mini-spec should be updated to support the requirement.",9/17/04ProjectF - TIM - 1199,FSW.PWR-9 is not supported in the PWR mini-spec,3,"FSW.PWR-9 states, ""PWR shall provide Frangibolt selection as follows: 000 = off 001 = MAG BOOMS A 010 = MAG BOOMS B 011 = off 100 = AXB1 101 = AXB2 110 = AXB1 & AXB2 111 = off This requirement is not addressed in the PWR mini-spec. Frangibolt commands are mentioned in the code, however the specific code listed in this requirement could not be located. If this code is no longer valid it should be removed from the requirements. Otherwise, the mini-spec should be updated to support the requirement.",9/17/04ProjectF - TIM - 1198,FSW.PWR-8 is not supported in the PWR mini-spec,3,"FSW.PWR-8 states, ""PWR shall provide SMA actuation selection using the following 4 bit code 0010 = SPB1 Cover 0011 = SPB2 Cover 0100 = SPB3 Cover 0101 = SPB4 Cover 0110 = ESA Cover A 0111 = ESA Cover B 1000 = SST1 Atten Open 1001 = SST1 Atten Close 1010 = SST2 Atten Open 1011 = SST2 Atten Close This requirement is not addressed in the PWR mini-spec, but is addressed in thm_sys_003 CDI sheet. There are however some inconsistencies (0010, 0011, 0100 and 0101) between the requirement and the thm_sys_003 document which states: Sets SMA On/Off where M= 4 bit code 0000 = Off 0001 = Off 0010 = SPB1 & 2 Covers 0011 = Off 0100 = SPB3 & 4 Covers 0101 = Off 0110 = ESA Cover A 0111 = ESA Cover B 1000 = SST1 Atten Open 1001 = SST1 Atten Close 1010 = SST2 Atten Open 1011 = SST2 Atten Close 1100 = Off 1101 = Off 1110 = Off 1111 = Off",9/17/04ProjectF - TIM - 1197,FSW.PWR-7 is not supported in the PWR mini-spec,3,"FSW.PWR-7 states, "" PWR shall enable SST, FGM, and EFI CDI interfaces when those subsystems are ON."" These interfaces should be described in the PWR mini-spec.",9/17/04ProjectF - TIM - 1196,FSW.PWR-6 is not supported in the PWR mini-spec,3,"FSW.PWR-6 states, ""PWR shall provide independent power switches as follows: (On=1, Off=0)PPP= [x,x,x, ESAHV, ESA, SST, FGM, SCM, EFI, VFX, VFY,VFZ]."" This requirement is not supported in the PWR mini-spec. It is documented in the command and telemetry file (thm_fsw_003_ctm_v1.03.xls) on the CDI tab but the parameters are not exactly consistent. The entry from the command and telemetry document is as follows: Sets Switch On/Off (On=1, Off=0) PPP= [ EFI, VFX, VFY,VFZ, ESA, SST, FGM, SCM].",9/17/04ProjectF - TIM - 1195,FSW.PWR-4 is not supported in the PWR mini-spec,3,"FSW.PWR-4 states, ""PWR shall provide a sequence to force on each supply below and then allow the supply to operate. [+10V, -10V, +5V, -5V, +8V, -8V, +5V, +2.5V, +28V] (Sequence is reprogrammed if there is a fault on a supply secondary)."" This requirement is not addressed in the mini-spec. This requirement is referenced in a comment section of the PWR code; however, the +8V supply is not listed in the comment. If +8V is no longer valid it should be removed from the mini-spec. The mini-spec should be updated to support this requirement.",9/17/04ProjectF - TIM - 1194,FSW.PWR-3 is not sufficiently supported in the PWR mini-spec,3,"FSW.PWR-3 states, ""PWR shall disable all subsystem secondary switches when turning on supply voltages."" This requirement is not sufficiently supported in the PWR mini-spec. The subsystem secondary switches that are disabled during this process should be identified and described in the mini-spec.",9/17/04ProjectF - TIM - 1193,FSW.PWR-2 is not supported in the PWR mini-spec,3,"FSW.PWR-2 states, ""PWR_CMD shall receive and execute commands to the module and Power Control Board (PCB) at up to 32Hz identified in Ref 26, and complete those commands in 2 msec or less."" This requirement is not addressed in the PWR mini-spec. The PWR_CMD module is in the code, it should be described in the mini-spec. This issue is similar to TIMs 1203, 1211, 1223, 1235, 1238, 1243, 1249 and 1255.",9/17/04ProjectF - TIM - 1192,Items in the IO mini-spec are not in the code,4,The following items in the IO mini-spec were not in the IO code. If they are no longer valid they should be removed from the mini-spec. If they are still valid the mini-spec or code should be updated to be in sync: ADC_POWER INIT_CHANNEL DISABLE_CHANNEL SET_INTRATE SET_TIMMODE CLEAR_1HZINT UPD_WATCHDOG (there is a WDT_RESET in the code but it appears to be different) SET_PD_DAC READ_PDA READ_PDB SET_MUX (I believe this may be ADC_MUX in the code) HEADER_WRITE CLOCK_WRITE,9/16/04ProjectF - TIM - 1191,FSW.IO-22 is not supported in the IO mini-spec,3,"FSW.IO-22 states, ""IO shall read the DCB status registers and provide to housekeeping telemetry."" This requirement appears to be met in the HSK_DCB section of the IO code however the requirement is not supported in the IO mini-spec.",9/16/04ProjectF - TIM - 1190,FSW.IO-21 is not supported in the IO mini-spec,3,"FSW.IO-21 states, ""IO shall be able to set the storage location and termination mode for the ETC channels."" This requirement is not supported in the IO mini-spec. There are several ETC modules in the IO code; they should be discussed in the IO mini-spec.",9/16/04ProjectF - TIM - 1189,FSW.IO-20 is not supported in the IO mini-spec,3,"FSW.IO-20 states, ""IO shall be able to set the storage location and termination mode for the DCB channels."" This requirement is not supported in the IO mini-spec. The functions described in this requirement could not be identified in the IO code either. These functions should be described in the IO mini-spec if they are indeed part of the software.",9/16/04ProjectF - TIM - 1188,FSW.IO-19 may be partially supported in the IO mini-spec,4,"FSW.IO-19 states, ""IO shall be able to set the Spin Clock Frequency."" The mini-spec identifies a termination select (TSEL) that appears to do this but not much detail is given. This mini-spec is still incomplete and should be updated.",9/16/04ProjectF - TIM - 1187,FSW.IO-18 is not supported in the IO mini-spec,3,"FSW.IO-18 states, ""IO shall be able to read the spin phase (0-255)."" This requirement is not supported in the IO mini-spec. This requirement is supported in the code by SPIN_PHZ_READ however it is not described in the mini-spec. It is listed in the table in the mini-spec but no description is given. Many of the functions in the table have no description so the table should be completed.",9/16/04ProjectF - TIM - 1186,FSW.IO-17 is not supported in the IO mini-spec,3,"FSW.IO-17 states, ""IO shall be able to read the Time, the SunPulse Time and the SpinSynchPulse Time."" This requirement is not supported in the IO mini-spec. SunPulse Time and SpinSynchPulse Time appear to be addressed in the code by SUN_CNT_READ and SPIN_CNT_READ respectively however they are not described in the mini-spec.",9/16/04ProjectF - TIM - 1185,FSW.IO-16 is not supported in the IO mini-spec,3,"FSW.IO-16 states, ""SET_PAGE0 and SET_PAGE1 shall set the memory page registers."" This requirement is not supported in the IO mini-spec. SET_PAGE0 and SET_PAGE1 modules are both in the code, they should be described in the mini-spec as well.",9/16/04ProjectF - TIM - 1184,FSW.IO-15 is not supported in the IO mini-spec,3,"FSW.IO-15 states, ""FGM_TLMH_ADDR shall set the storage location for the TLMH vectors."" This requirement is not supported in the IO mini-spec. The FGM_TLMH_ADDR module is in the code, it should be described in the mini-spec as well.",9/16/04ProjectF - TIM - 1183,FSW.IO-14 is not supported in the IO mini-spec,3,"FSW.IO-14 states, ""FGM_TLML_ADDR shall set the storage location for the FGM_TLML vectors."" This requirement is not supported in the IO mini-spec. The FGM_TLML_ADDR module is in the code, it should be described in the mini-spec as well.",9/16/04ProjectF - TIM - 1182,FSW.IO-13 is not supported in the IO mini-spec,3,"FSW.IO-13 states, ""FGM_TLMH shall return the current FGM X,Y,Z vector."" This requirement is not supported in the IO mini-spec. The FGM_TLMH module is in the code, it should be described in the mini-spec as well.",9/16/04ProjectF - TIM - 1181,FSW.IO-12 is not supported in the IO mini-spec,3,"FSW.IO-12 states, ""FGM_RANGE shall control the FGM X, Y, Z Range Selection."" This requirement is not supported in the IO mini-spec. The FGM_RANGE module is in the code and should be described in the mini-spec as well.",9/16/04ProjectF - TIM - 1180,FSW.TM-9 is not supported in the TM mini-spec,4,"FSW.TM-9 states, ""The TM Module shall simulate Science Data when commanded to do so (used for testing only)."" This requirement should be supported in the TM mini-spec.",9/16/04ProjectF - TIM - 1179,FSW.IO-10 is not supported in the IO mini-spec,4,"FSW.IO-10 states, ""UDMA_READ shall enable a Read Transfer from the SubSys1 to the IDPU at a selected Memory block."" This requirement is not supported in the IO mini-spec. UDMA_READ is in the code but needs to be described in detail in the mini-spec.",9/16/04ProjectF - TIM - 1178,Inconsistent VC Assignments,4,"The Virtual Channel assignments documented in the SubSys1 FSW CDR presentation (rev B) are not entirely consistent with the assignments specified in the SubSys1 SRS (rev 2.0). In particular the charts on pages 44 and 140 of the CDR document assign VC2, VC3, VC6, and VC7 differently than in SRS requirements FSW.TP.06.3, FSW.TP.06.4, FSW.TP.06.5, and FSW.TP.06.6.",9/16/04ProjectF - TIM - 1177,Possible inconsistency between FSW.IO-9 and the TM mini-spec,4,"FSW.IO-9 states, ""UDMA_INIT shall initialize the UART DMA circuit."" UDMA_INIT is in the code but it is only named in the mini-spec. The table that lists the function names has many of the description fields still blank. These should be completed for this function as well as the others that are blank.",9/16/04ProjectF - TIM - 1176,FSW.IO-8 is partially addressed in the TM mini-spec,4,"FSW.IO-8 states, ""IO shall be able to set the Multiplexor, Read the A/D converter, and control the Sleep mode of the A/D converter."" The mini-spec appears to address the ""set Multiplexor"" part of the requirement with SET_MUX however ""Read"" and ""Control"" the A/D converter parts of the requirement are not mentioned in the mini-spec. Additionally, there are some inconsistencies between the mini-spec and the code. The ""SET_MUX"" item in the mini-spec appears to be called ""ACD_MUX"" in the code. If this is correct, the mini-spec or the code should be updated.",9/15/04ProjectF - TIM - 1175,FSW.IO-7 is not supported in the IO mini-spec,4,"FSW.IO-7 states, ""IO shall read the ECC registers and provide this information to housekeeping telemetry."" This requirement is not addressed in the IO mini-spec. ECC (identified in the code as Error Correction) is in the code, however, the capabilities described in this requirement should be described in the mini-spec.",9/15/04ProjectF - TIM - 1174,FSW.IO-6 is not supported in the IO mini-spec,4,"FSW.IO-6 states, ""IO shall initialize, set the rate and enable or disable the Error Correction Circuitry."" This requirement is not addressed in the IO mini-spec. ECC (identified in the code as Error Correction) is in the code, however, it needs to be described in the mini-spec.",9/15/04ProjectF - TIM - 1173,FSW.IO-5 is not supported in the IO mini-spec,3,"FSW.IO-5 states, ""SSR_PWR shall control the Solid State Recorder Power."" This requirement is not addressed in the IO mini-spec. SSR_PWR is in the code along with two other modules that help control the SSR power (SSR_PWR_OFF and SSR_PWR_CHK). Detail should be provided on these modules in the mini-spec.",9/15/04ProjectF - TIM - 1172,Routines in the UTIL mini-spec but not in the code,4,The following routines are identified in the UTIL mini-spec but are not in the UTIL code: Delay MU21 If these routines will not be used they should be removed from the mini-spec.,9/15/04ProjectF - TIM - 1171,Routines in the SRS but not in the UTIL mini-spec,3,"The following routines are identified in the SRS but are not in the UTIL mini-spec: COPYL (FSW.UTIL-3) DECOMPRESS (FSW.UTIL-12) MAX16 (FSW.UTIL-13) MIN16 (FSW.UTIL-14) SUM16 (FSW.UTIL-15) An inspection of the code reveals that these routines have been implemented, however, they should be described in the mini-spec.",9/15/04ProjectF - TIM - 1170,FSW.LD-4 is not sufficiently supported in the LD mini-spec,4,"FSW.LD-4 states, ""LD shall contain 16 table addresses for use by the table commands above."" This requirement does not apprear to be supported in the LD mini-spec.",9/15/04ProjectF - TIM - 1169,FSW.LD-3 is not supported in the LD mini-spec,3,"FSW.LD-3 states, ""GEN_DUMP Formats a Dump packet for telemetry."" The mini-spec does not discuss telemetry and GEN_DUMP could not be found in the mini-spec or in the code. Recommend updating the mini-spec to support the requirement and updating the requirement if necessary.",9/15/04ProjectF - TIM - 1168,FSW.LD-1 LD_INIT is not completely supported in the LD mini-spec,3,"FSW.LD-1 states, ""LD_INIT Initializes the module Load and Dump pointers."" Section 1.1 of the mini-spec discusses Load and Dump pointers however it does not mention LD_INIT specifically and does not describe the initialization process. Given that the SRS points to this mini-spec for additional information on the LD_INIT requirement, additional detail should be provided in the mini-spec.",9/15/04ProjectF - TIM - 1167,FSW.TM-4 is not sufficiently supported in the TM mini-spec,3,"FSW.TM-4 states, ""The TM Module shall write Real-Time High Speed Telemetry as VC2 and Playback as VC3."" The mini-spec addresses high and low speed telemetry output but it does not discuss which VCs are used for each. The VCs tab of thm_fsw_003 includes a table that provides a description of the packets for each VC. Recommend updating the mini-spec to include a pointer to the table in thm_fsw_003.",9/14/04ProjectF - TIM - 1166,FSW.CMD-3 is not sufficiently supported in the BKG mini-spec,4,"FSW.CMD-3 states, ""CMD software shall function using an interrupt rate of 32 Hz and shall not require more than 1/256ths of a second."" This 32 Hz interrupt rate part of this requirement is not supported by the mini-spec and there appears to be a timing inconsistency when the mini-spec states, ""The Probe Status and Command Block is transferred to the instrument starting shortly after the 1 Hz tick and is guaranteed, given its length and the bit rate, to take less than 500 msec."" This is much longer than 1/256 of a second. Recommend updating the CMD mini-spec to completely support the requirement and to correct the noted inconsistency.",9/14/04ProjectF - TIM - 1165,FSW.BKG-5 is not supported in the BKG mini-spec,3,"FSW.BKG-5 states, ""BKG shall vector to ACS at a SpinSector computed by ACS module."" The BKG to ACS interface is not discussed in the BKG mini-spec. This interface is visible in the code but needs to be documented in detail in the BKG mini-spec.",9/14/04ProjectF - TIM - 1164,FSW.BKG-2 is not supported in the BKG mini-spec,3,"FSW.BKG-2 states, ""The BKG module shall service and distribute the 256Hz interrupt to other modules using the BKG Table in Ref 26."" The BKG mini spec does not describe the distribution of the 256 Hz interrupt to the other modules. Section 1.1.2.1 of the mini spec, ""Distribution of background processing,"" may be where this information is supposed to be located however this section is blank. This interface to other modules should be documented.",9/14/04ProjectF - TIM - 1163,FSW.EXEC-7 is not supported in the EXEC mini-spec,3,"FSW.EXEC-7 states, ""EXEC shall provide a round-robin service loop to all modules requiring long calculations {CMD_Decode(), RunUser(), and a reprogrammable vector for use by the EEPROM."" Support documentation for this requirement could not be located in the EXEC mini-spec. Additionally, the listed modules are not described in the EXEC mini-spec nor the corresponding mini-specs for the modules. Recommend updating the appropriate mini-specs to support the requirement. Note: This description was updated on September 6, 2006 to reflect the requirement, FSW.EXEC-7, as found in the IDPU SRS Rev G.",9/14/04ProjectF - TIM - 1162,Inconsistent Initialization Delay,4,"FSW.EXEC-4 states, ""At initialization, EXEC shall inhibit execution of the EEPROM programming for at least 8 seconds after turn on. (Allows reprogrammability)."" The EXEC mini-spec (thm_fsw_201) calls for a 10 second delay in order to allow ""a way for a user time to command a different program."" If this is the same as ""reprogrammability,"" then the delay should be consistent between the SRS and the mini-spec.",9/13/04ProjectF - TIM - 1161,SOH Telemetry Timing,3,"THM_FSW_002 Para 3.5.3 states: ""Once per second, the TM module transfers both SOH packets and FGE packets to the Probe using the TLMDMA channel. Double-buffering may be used so that the TM module can format new SOH and FGE packets into one buffer while the previous data is being transmitted, or the module may generate packets in the last half of each second, avoiding the transfer period in the first half."" This appears to contradict the requirement to start no later than 0.1 seconds after the 1PPS mark. FSW.TM-5 states: ""The TM Module shall provide Engineering and Fluxgate Telemetry packets at 1Hz to the SubSys1. These packets will start no later than 0.1 seconds after the 1 PPS mark.""",9/13/04ProjectF - TIM - 1160,No Backward Trace Matrix for the IDPU FSW,4,There is no information that traces the individual FSW requirements back to their parent requirements.,8/11/04ProjectF - TIM - 1159,No Backward Trace Matrix for the SubSys1 FSW,4,There is no information that traces the individual FSW requirements back to their parent requirements.,8/11/04ProjectF - TIM - 1158,Partial Trace of IN.ESA-1,4,"MRD Requirement IN.ESA-1 states: The ESA shall obtain partial moments of the 3D plasma electron and ion distributions in the magnetotail plasma sheet. Based on the note provided in the requirements flow down table, a partial link to FSW.ETC-11 was identified in the SRS. However, the MRD provides additional detail that should be included in the SRS. IDPU SRS Requirement FSW.ETC-11: ETC FSW shall jam the spin number, time, and SST attenuator position into the packet headers.",8/6/04ProjectF - TIM - 1157,Partial Trace of IN.EFI-7,4,"MRD Requirement IN.EFI-7 states: The EFI shall measure the Spacecraft Potential with a time resolution better than the spin rate (3 seconds; from ESA to compute moments). A partial link to FSW.EFI-6 was identified in the SRS. However, the MRD provides additional detail that should be included in the SRS when it states, “with a time resolution better than the spin rate (3 seconds; from ESA to compute moments).” IDPU SRS Requirement FSW.EFI-6: EFI shall calculate the Spacecraft Potential and make available to the SST module.",8/6/04ProjectF - TIM - 1156,MRD Rqmt IN.SCM-1 Not Traced,3,"No adequate links found in the SRS for this requirement. MRD Requirement IN.SCM-1: SCM shall provide a critical test for the role of waves at substorm onset, in various models (together with EFI).",8/5/04ProjectF - TIM - 1155,MRD Rqmt IN.FGM-7 Not Traced,3,"MRD Requirement IN.FGM-7 states: The FGM frequency range shall exceed DC-1 Hz. IV&V found no corresponding requirement in the IDPU SRS. The note in SRS states, “FGM module controls the sensitivity (range) of the magnetometer measurement,"" this should be a requirement in the SRS.",8/5/04ProjectF - TIM - 1154,Partial Trace of IN.ESA-8,4,"Partial trace to FSW.SCI-7 identified in the SRS, however, the MRD requirement contains some additional information that is not provided in the SRS. The note in the MRD states, “ETC module controls the ESA attenuation mode in solar wind.” The SRS does not explicitly state this as a requirement.",8/5/04ProjectF - TIM - 1153,MRD Rqmt IN.DPU-28 Not Traced,3,MRD Requirement IN.DPU-28 states: The IDPU DCB shall distribute a Spin Sector Clock with 2^14 phase pulses per spin to the ESA and SST (synchronized with the SRP). No adequate links were found for this requirement in the SRS.,8/5/04ProjectF - TIM - 1152,MRD Rqmt IN.DPU-27 Not Traced,3,"No adequate links found in the SRS. ETC-11 may address this requirement, however, it is unclear if the parent requirement is completely satisfied. IN.DPU-27: The IDPU DCB shall filter the raw sun pulse signal and provide a once-per-spin reference pulse (SRP) to the SST and ESA.",8/5/04ProjectF - TIM - 1151,Partial Trace of IN.DPU-15,4,"A Partial trace to FSW.SCI-4 was identified in the SRS, however, the SRS requirement does not clearly state if it can ""accommodate continuous instrument data.""",8/5/04ProjectF - TIM - 1150,MRD Rqmt IN.DPU-11 Not Traced,3,"MRD Requirement IN.DPU-11 states: The IDPU DCB shall implement autonomous fault protection features to ensure the health and safety of the instruments. IV&V found no corresponding requirement in the IDPU SRS. If the following requirement is considered a ""fault protection feature"", a partial link could be made: FSWPWR10 - PWR shall inhibit activation of the ESA Covers and Frangibolts if not Enabled (Ref 26 Enables) Also, the note in the SRS states: ""EFI, ESA, SST, FGM and SCM drivers are responsible for checking H&S of their instruments."" This should be stated as a requirements in the corresponding sections of the SRS.",8/5/04ProjectF - TIM - 1149,MRD Rqmt IN.DPU-9 Not Traced,3,"MRD Requirement IN.DPU-9 states: The IDPU DCB shall not erase instrument housekeeping telemetry from memory unless commanded to do so. IV&V could find no corresponding requirement in the IDPU SRS. The note in the SRS states ""TM will manage engineering telemetry with positive command to release memory"". This should be a requirement in the TM section of the SRS.",8/5/04ProjectF - TIM - 1148,Partial trace of IN.DPU-8,4,"IN.DPU-8 traces to FSW.SSR-10 and FSW.SSR-11 however a note in the SRS states, ""TM must have commands for pointer control in SSR."" The lack of a requirement for TM pointer control in the SSR is an issue. There should be a requirement in the SRS that identifies this functionality. IN.DPU-8: The IDPU DCB shall provide the capability to re-transmit the SSR contents.",8/5/04ProjectF - TIM - 1147,Telecommand TBD,3,"ProjectF Telecommand Format Specification version C dated May 20, 2004 has no entries in the TBD List but still contains a TBD in sections 6.1.1.1.3.2, 6.1.1.2.1.3 and 6.1.1.3. See the excerpt below. ""... Assignments of commands to APIDs are documented in the TBD document. ...""",8/5/04ProjectF - TIM - 1146,Interface TBD,3,"ProjectF Probe-to-Instrument Data Processing Unit (IDPU)/ ESA Plasma Analyzer Instrument Interface Control Document (ICD) version AB dated June 18, 2004 has no entries in the TBD List but still contains a TBD in section 4.4.3.1. See the excerpt below. ""... If the SubSys1 times out but some bits have been detected, the SubSys1 shall: a. Deassert READYN (as normal for a timeout) b. fill in S/C Identity, time field, Master frame count, & Oper Ctl field as for a normal frame c. transmit the frame, as normal. d. Apply TBD procedure for counting the error. ...""",8/5/04ProjectF - TIM - 1145,MRD Rqmt IN.DPU-12 Not Traced,3,MRD Requirement IN.DPU-12 states: The IDPU DCB shall enable all autonomous functions to be initiated and disabled by ground command. IV&V assumes that the design supports this capability but it is not stated as a requirement in the IDPU SRS.,8/2/04ProjectF - TIM - 1144,Partial Trace of IN.DPU-38,3,"MRD Requirement IN.DPU-38 states:The IDPU BEB shall provide sensor biasing circuitry, stub and guard voltage control, and boom deployment for the EFI. IDPU SRS Requirement FSW.DEP-4 covers the deployment capability. The sensor biasing circuitry is hardware but the stub and guard voltage control capability are not specified as a software requirement in the IDPU SRS.",8/2/04ProjectF - TIM - 1143,Partial Trace of FSW.TM-6,3,IDPU SRS Requirement FSW.TM-6 traces to MRD Requirement IN.DPU-21 but the rate has been changed to 8Hz in the MRD rev E. This rate should be changed in the SRS as well. MRD Requirement IN.DPU-21: The IDPU DCB shall provide FGM telemetry to the Probe C&DH Subsystem at a sample rate of 8 Hz. SRS Requirement FSW.TM-6: The TM Module shall provide FGE Telemetry packets at 1Hz to the SubSys1.,7/30/04ProjectF - TIM - 1142,Partial Trace of FSW.IO-22,4,"IDPU SRS Requirement FSW.IO-22 traces to MRD Requirement IN.DPU-4, however, the MRD provides more detail than the SRS. This detail should be included in the SRS requirement (""at the minimum data rate possible (1kbps)).""",7/30/04ProjectF - TIM - 1141,Partial Trace of FSW.EFI-6,4,"IDPU SRS Requirement FSW.EFI-6 traces to MRD Requirement IN.EFI-7 ,however, the MRD requirement provides more detail than the SRS requirement. This information should be included in the SRS as well (""with a time resolution better than the spin rate (3 seconds; from ESA to compute moments"").",7/30/04ProjectF - TIM - 1140,Partial Trace of FSW.CMD-2,4,"IDPU SRS Requirement FSW.CMD-2 traces to MRD requirement IN.DPU-1 however the MRD requirement provides more detail when it states ""via a 38.4 Kbaud bi-directional serial interface."".",7/30/04ProjectF - TIM - 1139,Partial Trace of IN.DPU-50,3,"MRD Requirement IN.DPU-50 traces to FSW.DEP-3 in the DEP section of the IDPU SRS, however, it is not entirely clear if entry into Engineering Mode constitutes a two stage command. The description of Engineering Mode in ICD thm_sys_101 states ""Mode is typically entered by ground command in preparation for early operations (instrument health and safety diagnostics) and special case instrument operations (boom deploy, high voltage turn-on)."" The phrase ""typically entered by ground command"" makes IV&V wonder what other events could cause entry into Engineering Mode. IV&V needs to review a list of IDPU commands to verify that a two stage command exists for boom deployments.",7/30/04ProjectF - TIM - 1138,Partial Trace of IN.DPU-49,3,"Based on the note in the SRS, IV&V can see a partial link from MRD Requirement IN.DPU-49 to IDPU SRS Requirements FSW.ETC-1, FSW.ETC-6, FSW.ETC-7, and FSW.EXEC-17. The SRS requirements were not clear on the two stage command requirement so IV&V needs to review a list of IDPU commands to verify that an enable command exists which must precede the ESA HV turn on command(s).",7/30/04ProjectF - TIM - 1137,Partial Trace of IN.DPU-5,3,"MRD Requirement IN.DPU-5 traces to FSW.CMP-7 in the IDPU SRS, however, more detail is provided in the MRD (nominal 2x reduction). This detail should be provided in the SRS as well. Additionally, the SRS identifies CSCs 1 (EXEC) and 10 (SSR) as other modules that trace from this MRD requirement. IV&V was unable to identify the requirements from those modules that match up with this MRD requirement. Several SSR requirements discuss memory however none specifically state that the SSR provides the memory access for this capability.",7/30/04ProjectF - TIM - 1136,Partial Trace of IN.DPU-4,3,"MRD Requirement IN.DPU-4 traces to FSW.BKG-3, FSW.TM-2, FSW.HSK-1 and FSW.IO-22 in the IDPU SRS. IV&V could not identify any SRS requirements that satisfied the second part of the MRD requirement, ""at the minimum data rate possible (1 kbps)"". Additionally, the SRS identifies CSC 7 (UTIL) as another module that traces from this MRD requirement. IV&V was unable to identify the requirements from those modules that match up with this MRD requirement.",7/30/04ProjectF - TIM - 1135,Partial Trace of IN.DPU-3,4,"MRD Requirement IN.DPU-3 traces to IDPU SRS Requirements FSW.BKG-3, FSW.TM-2 and FSW.TM-7, however the values and units are inconsistent between IN.DPU-3 and FSWTM7. 1 kbps to 2 Mbps is used in the MRD and 100 pps is used in the SRS. Additionally, the SRS identifies CSCs 7 (UTIL) & 8 (IO) as other modules that trace from this MRD requirement. IV&V was unable to identify the requirements from those modules that match up with this MRD requirement.",7/30/04ProjectF - TIM - 1134,PB.FSW-18 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-18 traces to all requirements in sections 7.2.5 and 7.2.6. It appears that this requirement traces only to FSW.CS.01 in the FSW SRS and 7.1.3 in the Boot SRS. MRD Requirement PB.FSW-18: The Flight Software shall verify program and data code area integrity.,7/29/04ProjectF - TIM - 1133,PB.FSW-17 Trace Too General,4,"The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-17 traces to all requirements in all sections of the SubSys1 FSW SRS. This requirement does not appear to trace to all but to the following requirements: FSW.BA2.07 FSW.CP.25 FSW.CS.15 FSW.HS.10 FSW.HS.11 FSW.BA1.06 FSW.LM.14 FSW.MM.25 FSW.TC.08 FSW.TP.20 FSW.IRU.03 FSW.DS.11 FSW.SC.29 MRD Requirement PB.FSW-17: All commands executed by the processor shall be verifiable on the ground. Where end point telemetry verification is not possible, separate counters in software shall increment to indicate whether the command was processed or rejected by the Flight Software.",7/29/04ProjectF - TIM - 1132,PB.FSW-16 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-16 traces to all requirements in all sections of the SubSys1 FSW SRS. This requirement does not appear to trace to all but to the following requirements: FSW.BI.04 FSW.CP.09 FSW.CP.10 FSW.CP.19 FSW.CP.21 FSW.CP.24 FSW.CS.14 FSW.IM.08 FSW.MM.24 FSW.TC.07 FSW.TP.25 FSW.AC.17 FSW.DS.14 FSW.DS.15 FSW.LM.13 FSW.MM.17 FSW.SC.15 FSW.SC.16 FSW.SC.19 FSW.SC.28 MRD Requirement PB.FSW-16: The Flight Software shall reject any command that cannot be validated,7/29/04ProjectF - TIM - 1131,PB.FSW-15 Trace Too General,4,"The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-15 traces to all requirements in all sections of the SubSys1 FSW SRS. This requirement does not appear to trace to all but to a few from the CP section. These are: FSW.CP.01, FSW.CP.13, FSW.CP.17, FSW.CP.18, FSW.CP.20. MRD Requirement PB.FSW-15: The Flight Software shall validate commands prior to execution.",7/29/04ProjectF - TIM - 1130,PB.FSW.12 Trace Too General,4,"The trace matrix in the SubSys1 FSW SRS indicates that PB.FSW-12 traces to the Boot SRS. The more precise trace in this case is the requirement 7.1.1 in the Boot SRS. This Boot requirement points to SAI-SPEC-1090 for details on the initialization process. SAI-SPEC-1090 describes two types of restarts that appear to correspond to the cold and warm restart but it does not mention the ""preserve RAM data areas"" portion of the MRD requirement. PB.FSW-12 should also trace to FSW.HS-04 in the FSW SRS which does describe the preservation of RAM data. This SRS requirement is not included in the trace matrix however. MRD Requirement PB.FSW-12: Upon a warm restart, the system startup software shall reload the code area but preserve RAM data areas.",7/28/04ProjectF - TIM - 1129,PB.FSW.11 Trace Too General,4,The trace matrix in the SubSys1 FSW SRS indicates that PB.FSW-11 traces to the Boot SRS. The more precise trace in this case is the boot requirement 7.1.1 in the Boot SRS. MRD Requirement PB.FSW.11: The Flight Software shall initialize the processor and its on-board devices and peripherals as needed for its own operation without operator intervention.,7/28/04ProjectF - TIM - 1128,PB.FSW-9 Trace Too General,4,"The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-9 traces to all requirements in sections 7.2.2 and 7.2.5. It appears that this requirement traces only to FSW.HS.05 in the FSW SRS and requirement 7.1.1 in the Boot SRS. MRD Requirement PB.FSW-9: The Flight Software shall perform a Cold Restart upon any of the following conditions: Power-On of the Bus Avionics, Ground Command, or a ground selectable (1 - 32) consecutive Warm Restarts.",7/28/04ProjectF - TIM - 1127,PB.FSW-7 Trace Too General,4,"The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-7 traces to all requirements in sections 7.2.4 and 7.2.6. It appears that this requirement traces only to FSW.TP.20 and FSW.MM.25 which are the telemetry requirements from sections 7.2.4 and 7.2.6. In version 1.1 of the SubSys1 FSW SRS the Probe's Unique ID was specified as numbered item 14 in requirement FSW.MM.25. IV&V assumes that this information will be preserved in the SUG which is where the commands and telemetry will be defined from SRS version 2 and forward. MRD Requirement PB.FSW-7: The Probe Specific Data Image shall contain the probe's unique ID, which will be available in real-time telemetry.",7/28/04ProjectF - TIM - 1125,PB.FSW-6 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-6 traces to all requirements in sections 7.2.4 and 7.2.5. It appears that this requirement traces only to FSW.TP.20 and FSW.HS.10 which are the telemetry requirements from sections 7.2.4 and 7.2.5. In version 1.1 of the SubSys1 FSW SRS the Flight Software Version ID was specified as numbered item 13 in requirement FSW.MM.25. IV&V assumes that this information will be preserved in the SUG which is where the commands and telemetry will be defined from SRS version 2 and forward. If this is the case then MM.25 should also be included in the trace. MRD Requirement PB.FSW-6: The Flight Software Code image version loaded and executing on a Probe shall be reported in real-time telemetry.,7/28/04ProjectF - TIM - 1124,PB.FSW-5 Trace Too General,4,"The trace matrix in the SubSys1 FSW SRS traces PB.FSW-5 to all of section 7.2.2 and 7.2.6. The trace matrix in the Boot SRS (pointed to by 7.2.2) traces PB.FSW-5 to section 7.2. In both documents this trace information could be more specific. In the FSW SRS PB.FSW-5 should trace to FSW.MM.18, FSW.CS.01.1 and FSW.CS.01.2. In the Boot SRS PB.FSW-5 should trace to 7.1.3 and 7.2.2. MRD Requirement PB.FSW-5: Upon a load of code or data image to the C&DH processor, it shall be possible to verify the integrity of the image.",7/28/04ProjectF - TIM - 1123,PB.FSW-4 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-4 traces to all requirements in section 7.2.6 of the SubSys1 FSW SRS. There is in fact an identical FSW requirement (FSW.MM.22) that addresses the MRD requirement. Therefore this requirement should only trace to FSW.MM.22. MRD Requirement PB.FSW-4: Probe Specific Data Images (Tables) shall be loaded onto each of the 5 ProjectF Probes. SRS Requirement: FSW.MM.22: Probe Specific Data Images (Tables) shall be loaded onto each of the 5 ProjectF Probes.,7/28/04ProjectF - TIM - 1122,PB.FSW-3 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-3 traces to all requirements in sections 7.2.2 and 7.2.6 of the SubSys1 FSW SRS. There is in fact an identical FSW requirement (FSW.MM.21) that addresses the MRD requirement. Therefore this requirement should only trace to FSW.MM.21. MRD Requirement PB.FSW-3: The Code Image (Build Number) loaded onto each of the 5 ProjectF Probes shall be identical. FSW.MM.21: The Flight Software Code Image (Build Number) loaded onto each of the 5 ProjectF Probes shall be identical.,7/28/04ProjectF - TIM - 1121,PB.FSW-2 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that MRD Requirement PB.FSW-2 traces to all requirements in all sections of the SubSys1 FSW SRS. There is in fact an identical FSW requirement (FSW.GE.01) that addresses the MRD requirement. Therefore this requirement should only trace to FSW.GE.01. MRD Requirement PB.FSW-2: The Flight Code shall be stored in Electrically Erasable Programmable Read-Only Memory (EEPROM) residing within the Bus Avionics. SRS Requirement FSW.GE.01: The Flight Software Code shall be stored in Electrically Erasable Programmable Read-Only Memory (EEPROM) residing within the Bus Avionics.,7/28/04ProjectF - TIM - 1120,PB.CDH-21 Trace Too General and Possible Missing FSW Requirements,2,"The trace matrix in the SubSys1 SRS indicates that PB.CDH-21 traces to all requirements in sections 7.2.10. It appears that this requirement should trace to a smaller group of FSW requirements. Namely BA2.03, BA2.07, AC.12, AC.13, AC.19 and IRU.03. Also if there is a real-time telemetry requirement for the Sun Synchronous Processing Task and the Thruster Firing Task they are not documented.",7/28/04ProjectF - TIM - 1119,PB.CDH.20 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that PB.CDH-20 traces to all requirements in all sections. While it is true that this requirement has many children it does not appear to be traceable to all. It appears to trace to the following FSW requirements: FSW.MM.25 FSW.BI.03 FSW.CP.10 FSW.CP.23 FSW.CS.13 FSW.DS.10 FSW.HS.06 FSW.IM.02 FSW.IM.07 FSW.MM.23 FSW.SC.27 FSW.TC.06 FSW.TP.19 FSW.AC.16 FSW.CP.09 FSW.CP.22 FSW.LM.12 FSW.LM.08 FSW.SC.01 FSW.SC.04 FSW.SC.23 FSW.HS.10 FSW.IM.09 FSW.LM.14 FSW.TC.08 FSW.AC.18 FSW.DS.11 FSW.SC.29 FSW.BI.05 FSW.CP.25 FSW.CS.15 FSW.HS.11 FSW.IM.03 FSW.TP.20 FSW.DS.16 FSW.LM.11 FSW.MM.20 FSW.SC.29 FSW.TP.18,7/28/04ProjectF - TIM - 1118,PB.CDH-19 Trace Too General,4,"The trace matrix in the SubSys1 SRS indicates that PB.CDH-19 traces to all requirements in section 7.2.6. It appears that this requirement should only trace to a few requirements in this section. Namely MM.04, MM.07, MM.08, MM.14, MM.16, MM.18, MM.19 and MM.20. MRD Requirement PB.CDH-19: The C&DH subsystem shall provide the capability to upload or modify Probe Bus flight software.",7/28/04ProjectF - TIM - 1117,PB.CDH-18 Trace Too General,4,The trace matrix in the SubSys1 SRS indicates that PB.CDH-18 traces to all requirements in all sections. It appears that this requirement should only trace to the Command Processing section (7.2.3). MRD Requirement PB.CDH-18: The C&DH subsystem shall be capable of enabling or disabling each autonomous function via ground command.,7/28/04ProjectF - TIM - 1116,PB-6 Trace Too General,4,"The trace matrix in the SubSys1 SRS indicates that PB-6 traces to all requirements in sections 7.2.6 and 7.2.10. I appears that only a few requirements in these sections (MM.25, BA2.07 and possibly BA2.12) were actually derived from PB-6. MRD Requirement PB-6: Each Probe Bus shall have a unique ID that is non-volitable on-orbit.",7/28/04ProjectF - TIM - 1115,Unclear Warm Restart Requirement,3,"MRD requirement PB.FSW-13 states: The flight software shall be able to perform a warm restart in an attempt to recover from a detected software anomaly with minimal impact on normal processing activity. The phrase ""with minimal impact on normal processing activity"" is not clear. It is IV&V's understanding that a warm restart terminates all currently executing tasks. If this is so then it is not reasonable to expect a warm restart to have only ""minimal impact on normal processing activity"". Please clarify the intent or consider deleting this requirement.",7/27/04ProjectF - TIM - 1114,Missing Timing Requirement on Restart,2,"IV&V was unable to find a software requirement to satisfy the MRD requirement for processing commands within one minute of restart. MRD Requirement PB.FSW-10: The Flight Software shall be capable of processing ground commands within 60 seconds (TBC) after a Cold Restart. The MRD requirement for servicing the watchdog within one minute of restart was not found either. MRD Requirement PB.FSW-14: Upon any kind of Restart, the Flight Software shall begin servicing the Watchdog hardware within 60 seconds (TBC). A FSW requirement was documented in version 1.0 of the SubSys1 SRS as FSW.IN.03 which states: The Flight Software shall be capable of generating real-time telemetry and accepting and processing commands within 40 seconds of a Power-Up, Cold Restart, or Warm Restart. This requirement addresses everything except the watchdog but was not found in the new version of the SubSys1 Boot FSW SRS.",7/27/04ProjectF - TIM - 1113,FSW.TM-5 - Clarify if the second sentence is meant to be a requirement,5,"FSW.TM-5 - ""The TM Module shall provide Engineering and Fluxgate Telemetry packets at 1Hz to the SubSys1. These packets will start no later than 0.1 seconds after the 1 PPS mark."" The second sentence in the requirement contains a ""will"" but not a ""shall."" Is it intended to be a requirement? If so, the statement should be stated with a shall.",7/26/04ProjectF - TIM - 1112,Vague statement in FSW.IO-1,4,"FSW.IO-1 - ""IO_INIT shall initialize the module and define its initial state so the module works correctly."" The statement ""works correctly"" is somewhat vague. Can additional detail be privided in the requirement to clarify what constitutes ""working correctly?""",7/26/04ProjectF - TIM - 1111,BKG Table identification,3,"FSW.BKG-2 - ""The BKG module shall service and distribute the 256Hz interrupt to other modules using the BKG Table in Ref 26"" The BKG table referred to in this requirement was not found in Ref 26 (ProjectF IDPU Command and Telemetry or thm-fsw-003). Can the location of this table be identified?",7/26/04ProjectF - TIM - 1110,Document inconsistency,3,"An inconsistency was noted between two documents where the requirements are identified. On page 10 of thm_IDPU_PDR_Overview_RevA.ppt dated 16OCT2003, requirement IN.DPU-36 uses the acronym FFT rather than DFT which is used in the ProjectF IDPU Software Requirements Specification THM_FSW_001 and in the MRD. Given that the word prior to DFT is ""an"", was this a simple typo that should have been FFT? Recommend clarifying which acronym is accurate.",7/26/04ProjectF - TIM - 1109,Compressed Packets,4,IDPU SRS Requirement FSW.CMP-5 states: CMP FSW shall properly identify compressed packets per Ref 26. IV&V could not find information on identification of compressed packets in Ref 26. This information was found however in Ref 18. Recommend adding Ref 18 in stead of or in addition to Ref 26.,7/21/04ProjectF - TIM - 1108,"""Click""",4,"IDPU SRS Requirement FSW.DEP-5 states: When deploying in pairs, DEP shall maintain a maximum of 2 ""click"" difference between boom lengths. A ""click"" is defined in the ""mini-spec"" (thm_fsw_216) which is referenced at the beginning of the section in the SRS but the reference to the definition of ""click"" should be explicitly stated in the requirement to avoid confusion.",7/21/04ProjectF - TIM - 1107,Calibrate On/Off Commands,4,"IDPU SRS Requirement FSW.SCM-4 states: SCM software shall provide calibrate On/Off commands to the SCM Preamplifier circuit. Ref 26 IV&V could find no mention of ""calibrate"" commands in Ref 26. The requirement may not be complete without the proper reference.",7/21/04ProjectF - TIM - 1106,EFI Typo,5,"IDPU SRS Requirement FSW.EFI-5 states: EFI shalled control the collection of EFI data transfers to the SSR. ""shalled"" should be ""shall"".",7/21/04ProjectF - TIM - 1105,Appropriate CDI Interfaces,3,"IDPU SRS Requirement FSW.PWR-7 states: PWR shall enable appropriate CDI interfaces when subsystems are ON. The phrase ""appropriate CDI interfaces"" is open to interpretation and should be defined.",7/21/04ProjectF - TIM - 1104,Typo,5,"IDPU SRS Requirement FSW.CMD-6 states: CMD software shall reject an errant command packet flag an error in telemetry. There appears to be a missing ""and"" between ""packet"" and ""flag"".",7/21/04ProjectF - TIM - 1103,Initialization Requirements,3,"The following IDPU SRS initialization requirements are vague. FSW.CMD-1, FSW.TM-1, FSW.LD-1, FSW.IO-1, FSW.PWR-1, FSW.SSR-1, FSW.ACS-1, FSW.EFI-1, FSW.ETC-1, FSW.FGM-1, FSW.SCM-1, FSW.DEP-1, FSW.FIT-1, FSW.CMP-1, FSW.SCI-1 Most of these read something like ""... initialize the module so that it works correctly."" The initial states should be documented and that document referenced by these requirements. FSW.BKG-1 is an example of a clear and testable initialization requirement.",7/21/04ProjectF - TIM - 1102,Appropriate Command List,3,"IDPU SRS Requirement FSW.EXEC-14 states: EXEC shall execute an appropriate command list for each mode when transitioning to that mode. The phrase ""appropriate command list"" is vague. This list should be documented and the document listed as a reference in this requirement.",7/21/04ProjectF - TIM - 1101,Long Calculations,3,"IDPU SRS Requirement FSW.EXEC-7 states: EXEC shall provide a round-robin service loop to all modules requiring long calculations. It is not clear which modules require round-robin service since they have not been listed and/or the definition of ""long calculations"" has not been given.",7/21/04ProjectF - TIM - 1100,Operate in a Timely Fashion,3,"IDPU SRS Requirement FSW.DCB-5 states: FSW shall not require more than 2 M cycles to operate all required functions in a timely fashion. The phrases ""all required functions"" and ""in a timely fashion"" are vague and not testable.",7/21/04ProjectF - TIM - 1099,SCM Trace,3,"MRD Requirement IN.SCM-1 states: SCM shall provide a critical test for the role of waves at substorm onset, in various models (together with EFI). The trace matrix in the IDPU SRS indicates that the requirement is addressed by the SCM module and states ""SCM module controls the data acquisition"". IV&V was unable to find any SRS requirement that addressed the ""critical test"" specified in IN.SCM-1. If this is a requirement on the software it should be documented in the SRS.",7/21/04ProjectF - TIM - 1098,ESA Trace,3,MRD Requirement IN.ESA-8 states: The ion ESA geometric factor shall be attenuated in the solar wind to avoid saturation. The comment in the IDPU SRS traceability matrix states: ETC module controls the ESA attenuation mode in solar wind. IV&V could find no requirements that specify the behavior required of the IDPU software in this attenuation mode.,7/21/04ProjectF - TIM - 1097,EFI Partial Trace,3,MRD Requirement IN.EFI-7 traces to IDPU SRS Requirement FSW.EFI-6 but the SRS requirement omits the detail on the time resolution required by the MRD requirement.,7/21/04ProjectF - TIM - 1096,ESA Field of View,4,"MRD Requirement IN.ESA-11 states: To resolve the solar wind, the ESA shall have a field of view with enhanced resolution of approximately 6 degrees. The phrase ""approximately 6 degrees"" is vague, it should be stated as a range (5 to 7 for example)",7/20/04ProjectF - TIM - 1095,Science and HK Telemetry Storage,4,"MRD Requirement IN.DPU-6 states: The IDPU DCB shall provide sufficient storage for all instrument science and housekeeping telemetry in SSR when not in ground contact: 750Mbits (if uncompressed) +1 day for contingency. The phrase ""+1 day for contingency"" is not precise. The first part of the requirement uses precise terms to specify storage so the 1 day contingency amount should be consistently specified using Mbits.",7/20/04ProjectF - TIM - 1094,Sufficient HW and SW safety latches,3,"MRD Requirement IN.DPU-49 states: The IDPU shall include sufficient hardware and software safety latches to prevent accidental high voltage turn on to the ESA. MRD Requirement IN.DPU-50 states: The IDPU shall include sufficient hardware and software safety latches to prevent accidental deployment of the booms. The phrase ""sufficient hardware and software safety latches"" is vague.",7/20/04ProjectF - TIM - 1093,No parent for IN.DPU-37,4,MRD Requirement IN.DPU-37 does not have a parent requirement documented in the MRD even though it is a level 4 subsystem requirement. MRD Requirement IN.DPU-37: The IDPU DFB shall integrate FGM digital data and EFI data to produce E·B (FPGA-based).,7/20/04ProjectF - TIM - 1092,"Sampling Times of FGM, SCM, and EFI",4,"MRD Requirement IN.DPU-35 states: The relative sampling times of FGM, SCM and EFI channels shall be fixed and well known for all modes of operation. The phrase ""well known"" is vague. These sampling times should be documented and the document referenced in the requirement. Also, no parent requirement is listed in the MRD.",7/20/04ProjectF - TIM - 1091,Time-tagging DFB and FGM data,3,"MRD Requirement IN.DPU-32 states: The IDPU DCB shall time-tag DFB and FGM data to <0.5 ms (max packet rate is 500/sec total). The trace matrix in the IDPU SRS has ""N/A"" in the column which indicates which CSC the requirement is satisfied by. It has no documented children. Does this mean the IDPU FSW is not time-tagging the data? If so how is the requirement being met? Also, the MRD does not list a parent requirement for IN.DPU-32 even though it is a level 4 subsystem requirement.",7/20/04ProjectF - TIM - 1090,"""Necessary"" Thermal Control",3,"MRD Requirement IN.DPU-20 states: The IDPU DCB shall provide Instrument thermal control if necessary (PWM). The phrase ""if necessary"" is vague.",7/20/04ProjectF - TIM - 1089,Instrument HK Telemetry,3,"MRD requirement IN.DPU-16 states: The IDPU DCB shall provide housekeeping telemetry sufficient to safely turn-on and operate all instruments (temperatures, currents, voltages, and bi-levels) as defined in Instrument-IDPU ICDs. A review of the instrument-IDPU ICDs revealed that these telemetry limits may not be completely specified. The temperature limits for the booms were specified and the FGM instrument has specified limits on temperatures, currents and voltages but this was not found for the other instruments.",7/20/04ProjectF - TIM - 1088,No Parent for IN.DPU-15,4,"MRD Requirement IN.DPU-15 is a level 4 subsystem requirement but no parent requirement is documented. Also the second sentence does not contain the word ""shall"". If it is intended for information purposes this is OK but if it is a requirement the word ""shall"" should be used. MRD rqmt IN.DPU-15: The IDPU DCB shall accommodate continuous instrument data governed by overall system mode (Slow Survey, Fast Survey, Particle Burst, Wave Burst I or II). Modes selected by ATS command or on-board triggering logic.",7/20/04ProjectF - TIM - 1087,or vs. and,4,"MRD Requirement IN.DPU-14 states: The IDPU DCB shall provide the capability to upload or modify Instrument flight software. The phrase ""upload or modify"" implies that either capability is sufficient. If the intent is to have both upload and modify capability the ""or"" should be replaced with ""and"". It is IV&Vs understanding that the modifications to the FSW will be accomplished with uploads which can overwrite all or part of the FSW image. Our interpretation of this requirement is that the ""upload"" means to overwrite the entire image and the ""modify"" means to overwrite only part of the image. Regardless if this is the correct interpretation the requirement is unclear and the wording should be improved.",7/20/04ProjectF - TIM - 1086,"No ""shall"" in requirements",4,"The following IDPU SRS requirements do not contain the word ""shall"". This word is commonly used to indicate the compulsory nature of the requirement. FSW.HSK-1, FSW.HSK-2, FSW.HSK-4, FSW.LD-1, FSW.LD-2, FSW.LD-3, FSW.UTIL-1, FSW.UTIL-2, FSW.UTIL-3, FSW.UTIL-4, FSW.UTIL-5, FSW.UTIL-6, FSW.UTIL-7, FSW.UTIL-8, FSW.UTIL-9, FSW.UTIL-10, FSW.UTIL-11, FSW.UTIL-12, FSW.UTIL-13, FSW.UTIL-14, FSW.UTIL-15, FSW.FIT-1, FSW.FIT-2, FSW.FIT-3, FSW.FIT-4, FSW.FIT-5, FSW.FIT-6, FSW.SPIN-1, FSW.MAT-1, FSW.MAT-2, FSW.FFP-1, FSW.FFP-2, FSW.FFP-3, FSW.FFP-4, FSW.FFP-5, FSW.FFP-6, FSW.FFP-7, FSW.FFP-8, FSW.FFP-9, FSW.FFP-10, FSW.FFP-11, FSW.FFP-12, FSW.FFP-13",7/20/04ProjectF - TIM - 1085,ESA Rqmt Unclear,4,MRD requirement IN.ESA-2 states: The ESA shall measure differences in velocity and ion pressure between probes in the magnetotail plasma sheet. It is IV&Vs understanding that there is no communication between probes. Therefore it is likely that the intent of this requirement is for the ESA to measure the velocity and ion pressure at each probe and the differences would be calculated on the ground. Also it is unclear exactly what velocity is being measured.,7/20/04ProjectF - TIM - 1084,IDPU Rqmt Typo,5,"There is a word missing in this requirement, ""it"" should be added between ""make"" and ""available"". FSW.EFI-6: EFI shall calculate the Spacecraft Potential and make available to the SST module.",7/20/04ProjectF - TIM - 1083,Critical Instrument Functions,2,"MRD Requirement IN.DPU-13 states: ""The IDPU DCB shall provide separate enable and activation commands for critical instrument functions such as boom deployments."" The requirement identifies boom deployments as one example of a class of functions called ""critical instrument functions"". If the other ""critical instrument functions"" are defined somewhere this definition should be referenced. If not then that list should be documented so that this requirement can be completely implemented and tested.",7/15/04ProjectF - TIM - 1082,SC Telemetry Typo,4,"In requirement FSW.SC.29, items 27, 29, and 31 on the list of real-time telemetry appear to have been truncated, making them incomprehensible. FSW.SC.29: The SC Flight Software shall provide the following telemetry in real time: 1. Number of SC ground commands processed 2. Number of SC ground commands rejected 3. Number of ATS patches successfully completed 4. Number of ATS loads successfully completed 5. Number of ATS patches aborted due to error 6. Number of ATS loads aborted due to errors 7. Number of free bytes in ATS buffer A 8. Number of free bytes in ATS buffer B 9. Current ATS Buffer Executing 10. Current ATS state 11. ATS command number Pending for dispatch 12. Indication of ATS switch pending 13. Dispatch Time for next ATS command 14. Total count of all failed RTS activation attempts 15. Total count of all RTSs successfully activated 16. Number of RTS loads aborted due to errors 17. Number of RTS loads successfully completed 18. Number of active RTSs 19. The next RTS command will come from this RTS 20. The UTC when the next RTS command will execute 21. RTS executing bit map 22. RTS disabled bit map 23. The total number of commands sent out by all ATSs 24. The total number of commands with errors for all ATSs 25. The total number of commands sent out by ALL RTSs 26. The total number of commands with errors for ALL RTSs 27. The ATS sequence number of the last 28. ATS command which caused an error 29. The ATS command number of the last 30. ATS command which caused an error 31. The RTS sequence number of the last 32. RTS command which caused an error 33. The word offset of the last RTS command which caused an error",6/4/04ProjectF - TIM - 1081,Missing Ground Commands: FSW.SC.27,3,"In requirement FSW.SC.27, it appears that two ground commands, namely, Disable Absolute Time Sequence and Enable Absolute Time Sequence, have been left out of the list of ground commands. FSW.SC.27: The SC Flight Software shall accept and process the following ground commands: 1. SC No Operation 2. SC Reset Counters 3. SC Start Absolute Time Sequence 4. SC Stop Absolute Time Sequence 5. SC Start Relative Time Sequence 6. SC Stop Relative Time Sequence 7. Disable Relative Time Sequence 8. Enable Relative Time Sequence 9. Switch Absolute Time Sequence 10. Absolute Time Sequence Jump",6/4/04ProjectF - TIM - 1080,Inconsistent SC Terminology,3,"In Sec. 7.2.12, the wording of several requirements addressing various timing aspects of commands needs to be clarified or standardized to avoid potential confusion. For instance, requirements FSW.SC.03 and FSW.SC.25 appear to be addressing two different timing aspects of Absolute Time Sequence (ATS) commands execution. However, the difference is subtle and subject to interpretation. One says ""match"" and the other says ""with a variance of no more than one second"". In the case of timing a ""match"" is usually determined based on two different time tags that are within a specified distance from each other. Maybe this distance is one second in this case. If this is true then these two requirements may be redundant. Another example concerns requirements FSW.SC.24 and FSW.SC.25, which appear to be addressing the same type of functionality in the case of Relative Time Sequence (RTS) and ATS commands, respectively. Yet, the wording of these two requirements is each different enough to cause a reader to attempt to interpret them differently. Also, requirement FSW.SC.02 specifies the resolution of time tagged commands while FSW.SC.05 specifies the resolution of the time tag of the command. These are probably the exact same thing but the different wording could make the reader wonder.",6/4/04ProjectF - TIM - 1079,Unclear Type of SC,3,"The intended target of requirement FSW.SC.06 appears to be ""relative"" time-tagged commands. In essence, FSW.SC.06 provides the definition for the relative time-tagged commands. Yet, the crucial information on the specific (namely, relative) type of the command appears to have been left out, implying that the definition provided in the requirement applies to RTS and ATS commands.",6/4/04ProjectF - TIM - 1078,Related LM Requirements,3,"The relationship between the numbered items in FSW.LM.03 and the numbered items in FSW.LM.04 is not clear. IV&V assumes that the three items in LM.03 are a subset of the eleven items in LM.04, with LM.03 #1 corresponding to LM.04 #2, LM.03 #2 corresponding to LM.04 #4 and LM.03 #3 corresponding to LM.04 #3. IV&V assumes that the intent of LM.03 is to specify the maximum number of watchpoints and the minimum number of attributes required to uniquely identify any watchpoint. If this is the correct interpretation of these requirements, the wording of the corresponding items should be the same. If these items are not related as described above, the relationship, if any, should be described in more detail. FSW.LM.03: The Flight Software shall be capable of monitoring at least 80 different watchpoints, identified as follows: 1. Packet APID in which the watchpoint is located 2. Byte size of the watchpoint, 3. Byte offset of the watchpoint. FSW.LM.04: The watchpoints shall be arranged as entries in a table, as follows: 1. Control, enable or disable monitoring 2. APID of packet 3. Offset within packet 4. Type 1,2, or 4 5. Operator GT, LT, EQ, NE 6. Chaining: None, AND, OR 7. Chain Index 8. RTS ID 9. Event Enable 10. Count of packets w/over limit conditions before taking action 11. Limit Value, 4 bytes. Bytes compared are defined in Type",6/4/04ProjectF - TIM - 1077,DM vs LM,5,"According to the Revision History of the ProjectF FSW SRS document, the FSW component, Data Monitoring, with abbreviations DM, was renamed to Limit Monitoring, with abbreviations LM, in release 1.0 of this document. The title of Sec. 7.2.11 refers to ""Limit Monitoring"" with abbreviations, ""LM."" However, the text following the section heading refers to ""Data Monitoring,"" as the FSW component under the consideration. While the titles for all of the requirements (FSW.LM.01 through FSW.LM.14) in this section contain the designation ""LM,"" for ""Limit Monitoring,"" requirements, FSW.LM.06 and FSW.LM.09 through FSW.LM.14 still refer to ""DM"" FSW in the body of the requirements.",6/4/04ProjectF - TIM - 1076,FSW.DS.20,3,"In describing the functionality called for in requirement FSW.DS.20, an implicit assumption has been made that at least two out of the three stored copies of a Transfer Frame will be found to be matching each other. The requirement fails to address the case of all three copies of a Transfer Frame disagreeing with one another (as unlikely as this case may appear to be) and what the response of Data Storage component of FSW should be in this case. Also a word appears to be missing from requirement FSW.DS.20. The condition which will trigger the functionality in the requirement has been described to be the ""playback of a Transfer Frame."" Actually, the playback of the Transfer Frame is also part of the response called for in the requirement. Most probably, the condition should read as ""playback request of a Transfer Frame."" FSW.DS.20: The DS Flight Software, upon playback of a Transfer Frame, SHALL compare the 3 copies of the Transfer Frame, and playback one of two matching copies.",6/4/04ProjectF - TIM - 1075,Two of Three Match,4,"In describing the functionality called for in requirement FSW.DS.20, an implicit assumption has been made that at least two out of the three stored copies of a Transfer Frame will be found to be matching each other. The requirement fails to address the case of all three copies of a Transfer Frame disagreeing with one another (as unlikely as this case may appear to be) and what the response of Data Storage component of FSW should be in this case. Also a word appears to be missing from requirement FSW.DS.20. The condition which will trigger the functionality in the requirement has been described to be the ""playback of a Transfer Frame."" Actually, the playback of the Transfer Frame is also part of the response called for in the requirement. Most probably, the condition should read as ""playback request of a Transfer Frame."" FSW.DS.20: The DS Flight Software, upon playback of a Transfer Frame, SHALL compare the 3 copies of the Transfer Frame, and playback one of two matching copies.",6/4/04ProjectF - TIM - 1074,Inconsistent Level of Detail,4,"The level of detail of requirement FSW.DS.16 is not consistent with that of the similar requirement FSW.DS.13. The latter requirement can be considered the counterpart to the former requirement, in that it addresses the data ""storage"" activities of the bulk memory, whereas the former requirement addresses the data ""playback"" of the bulk memory. FSW.DS.13 describes in detail how the required task of reporting the status of bulk memory storage activity should be accomplished, whereas FSW.DS.16 is mute on the details of how a similar reporting of the status of bulk memory playback activity should be performed. FSW.DS.13: The DS Flight Software shall report the status of bulk memory storage activities in normal housekeeping telemetry. This status includes the following information for each memory partition: The total number of bytes in the partition; the number of unused bytes in the partition; the current mode of the partition; the time of the oldest data that has yet to be downlinked; overwrite enable status; virtual recorder overflow status. FSW.DS.16: The DS Flight Software SHALL report the status of bulk memory playback activities in Real-time Housekeeping telemetry.",6/4/04ProjectF - TIM - 1073,Full VR,3,"The condition of a full VR with overwriting disabled is explicitly addressed in DS.12 but the alternate condition of VR full with overwriting enabled is not. Although the intent here seems straightforward both conditions should be explicitly specified. If these two conditions are specified DS.09 may become redundant. FSW.DS.12: If a Virtual Recorder with overwriting disabled becomes full, the DS Flight Software SHALL generate status and discard newly arriving telemetry data. FSW.DS.09: The DS Flight Software SHALL support the options of either autonomously overwriting recorded data at the oldest recorded block or discarding new data when the quota for a given Virtual Recorder becomes exhausted.",6/4/04ProjectF - TIM - 1072,Unclear Wording,3,Is the intent of FSW.DS.09 to simply perform one of two mutually exclusive tasks (discard incoming data or overwrite data starting with the oldest) based on a predetermined setting or does the word autonomously imply some more complex decision making process that the software will perform? In either case IV&V would suggest rewording the requirement to clarify the intent. FSW.DS.09: The DS Flight Software SHALL support the options of either autonomously overwriting recorded data at the oldest recorded block or discarding new data when the quota for a given Virtual Recorder becomes exhausted.,6/4/04ProjectF - TIM - 1071,Missing Requirement 2,3,"In Sec. 7.2.9, the leading paragraph indicates that the Data Storage (DS) component of FSW is responsible for the storage and playback of ""Science Data,"" besides real-time telemetry. Yet, no requirement in this section explicitly addresses any DS functionality in support of the Science Data. For example, requirement FSW.DS.05 specifies the default memory quota allocations for the two types of data, namely the ""Stored Probe Housekeeping"" and ""Spacecraft Events"" to be stored in the two Virtual Recorders, VR1 and VR2, respectively. It is not clear which one of these two data categories, if any, includes the Science Data.",6/4/04ProjectF - TIM - 1070,Unclear IM Requirement,4,"Requirement FSW.IM.09 calls for the Instrument Management (IM) component of FSW to both generate and ""maintain"" a number of real-time telemetry parameters. It is not clear what the significance and implication of the latter requirement (""maintain"") is. The similar requirements on some other FSW components are for those components to ""provide"" a number of real-time telemetry parameters (presumably to the Telemetry Processing component of FSW) for the eventual downlinking of this telemetry to Ground Control. If ""maintaining"" the real-time telemetry parameters by IM requires certain tasks to be performed by IM, these tasks should be specified in the current, or a separate, requirement. FSW.IM.09: The IM Flight Software shall generate and maintain the following telemetry in real time: 1. IM Commands Processed Count 2. IM Commands Rejected Count 3. IDPU Commands Received 4. IDPU Commands Forwarded 5. IDPU Commands Queued 6. Error Status",6/4/04ProjectF - TIM - 1069,Unclear TC Requirement,4,"In Sec. 7.2.7, requirement FSW.TC.08 calls for the Time Code Processing (TC) component of FSW to both generate and ""maintain"" a number of real-time telemetry parameters. It is not clear what the significance and implication of the latter requirement (""maintain"") is. The similar requirements on some other FSW components are for those components to ""provide"" a number of real-time telemetry parameters (presumably to the Telemetry Processing component of FSW) for the eventual downlinking of this telemetry to Ground Control. If ""maintaining"" the real-time telemetry parameters by TC requires certain tasks to be performed by TC, these tasks should be specified in the current, or a separate, requirement. FSW.TC.08: The TC Flight Software shall generate and maintain the following real time telemetry: 1. TC Commands Processed 2. TC Commands Rejected 3. Mission Elapsed Time Seconds 4. Mission Elapsed Time Subseconds 5. Universal Time Offset",6/4/04ProjectF - TIM - 1068,Requirement Misallocation to Flight Software: FSW.MM.22,3,"In Sec. 7.2.6, it is not clear what FSW component, if any, in particular Memory Management, is the target of requirement FSW.MM.22, which calls for probe-specific tables to be loaded onto each of the five ProjectF probes. This requirement seems to be more of a ""mission-rule"" nature than a requirement levied upon FSW. If the objective of this requirement is for FSW, and specifically Memory Management, to verify that only the tables specific to a probe are uploaded onto that probe, this objective should be explicitly stated in the requirement. Moreover, appropriate instructions should be provided as part of this requirement as to how FSW, or Memory Management, should respond in the event that a violation of the rule stated in this requirement is detected. FSW.MM.22: Probe Specific Data Images (Tables) SHALL be loaded onto each of the 5 ProjectF Probes.",6/4/04ProjectF - TIM - 1067,Requirement Misallocation to Flight Software: FSW.MM.21,3,"In Sec. 7.2.6, it is not clear what FSW component, if any, in particular Memory Management, is the target of requirement FSW.MM.21, which calls for the same build of the FSW code image to be loaded onto each of the five ProjectF probes. This requirement seems to be more of a mission requirement than a requirement levied upon FSW. If the objective of this requirement is for FSW, and specifically Memory Management, to verify that the FSW uploaded onto each of the five ProjectF probes has the same Build Number, this objective should be explicitly stated in the requirement. Moreover, appropriate instructions should be provided as part of this requirement as to how FSW, or Memory Management, should respond in the event that a violation of the rule stated in this requirement is detected. FSW.MM.21: The Flight Software Code Image (Build Number) loaded onto each of the 5 ProjectF Probes SHALL be identical.",6/4/04ProjectF - TIM - 1066,Missing Reference,4,"The ITOS User’s Manual, Document ProjectF-ITOS-UM has been referred to in requirements, FSW.MM.02, FSW.MM.05, FSW.MM.12, and FSW.MM.15. Yet, this document is not on the list of ""Related Documents"" in Table 2.1 of Sec. 2.",6/4/04ProjectF - TIM - 1065,TP Requirement Typo,5,"In FSW.TP.25, the word ""than"" occurring immediately after ""...any TP command"" is a typographical error and should be replaced by the word ""that."" FSW.TP.25: The TP Flight Software SHALL reject any TP command than contains an invalid Function code or invalid argument.",6/4/04ProjectF - TIM - 1064,Unclear TP Wording,4,"In FSW.TP.02, the words ""Telemetry Packets"" should be inserted immediately after ""CCSDS"" and immediately prior to ""secondary header."" FSW.TP.02: The CCSDS secondary header SHALL contain a time code field formatted with a 4 byte Seconds field and a 2 byte Sub-seconds field, with unused bits filled with zeros.",6/4/04ProjectF - TIM - 1063,Incomplete Requirement: FSW.CP.25,3,"Requirement FSW.CP.25 does not include the telemetry for the case of failed checksum verification of a code block, as called for in requirement FSW.CP.06. FSW.CP.06: Upon detection of any codeblock marked as invalid or failed checksum verification (parity), the CP Flight Software SHALL: 1. Abort further processing on that codeblock. 2. Discard the partially constructed transfer frame that would have contained that codeblock. 3. Generate appropriate telemetry. FSW.CP.25: The CP Flight Software shall provide the following telemetry in real time: 1. CP Command Error Count 2. CP Command Execution Count 3. Checksum Verification Enabled 4. Virtual Channel 1 CLCW 5. Packet Assembly Checksum Error Count 6. Packet Assembly Checksum Valid Count 7. Transfer Frame Frame Count 8. Transfer Frame Error Count 9. Transfer Frame Aborted Count 10. Transfer Frame Command Drop Count 11. Code Block Error Count 12. Code Block Count 13. Code Block Tail Sequence Count 14. Codeblock Count during last Second 15. C&DH UpLink Underflow Count 16. C&DH UpLink Overflow Count 17. FSW buffer Overflow Count 18. Highest count of codeblocks input in a previous 1 second period",6/4/04ProjectF - TIM - 1062,Unclear CP Requirement,4,"It is not clear exactly what the phrase ""Upon acceptance of Hardware or Special commands"" means in CP.11. The phrase ""not perform any OTHER processing"" implies that some processing is done on the Hardware/Special commands. Does this simply mean that the Hardware/Special commands are verified to have arrived on VC2 or does the FSW perform all of the checks described in CP.17, CP.18, CP.19, CP.20, CP.21 and CP.24 on all commands including Hardware and Special commands? FSW.CP.11: Upon acceptance of Hardware or ""Special"" commands, the CP Flight Software SHALL only log receipt of the command, and not perform any other processing of that command.",6/4/04ProjectF - TIM - 1061,CP Requirement Typo,5,"In FSW.CP.16, the typographical error ""included"" should be corrected to ""include"" for clarity and to avoid any confusion and misunderstanding. FSW.CP.16: The CP Flight Software SHALL generate an updated CLCW for VC1 whenever a VC1 telecommand Transfer Frame is received, and included that CLCW in the next Telemetry Transfer Frame generated.",6/4/04ProjectF - TIM - 1060,Missing Requirement,3,"In Sec. 7.2.3, no requirement addresses the need for generating appropriate telemetry in the case of rejection of a command by Command Processing due to the arrival of that command through an improper Virtual Channel for that type of command, as covered in requirements FSW.CP.09 and FSW.CP.10. FSW.CP.09: The CP Flight Software SHALL accept and process all Flight Software commands on Virtual Channel 1, and reject Flight Software commands on all other Virtual Channels. FSW.CP.10: The CP Flight Software shall accept and log all Hardware or “Special” commands on Virtual Channel 2, and reject Hardware commands on all other Virtual Channels.",6/4/04ProjectF - TIM - 1059,FSW.CP.10,3,"In FSW.CP.10, it is not clear if the call for Command Processing to receive and process Hardware and Special commands only through Virtual Channel 2 can be changed during the flight, that is, whether it is configurable. This feature may need to be considered and included as part of this requirement or introduced as a new requirement if necessary. FSW.CP.10: The CP Flight Software shall accept and log all Hardware or “Special” commands on Virtual Channel 2, and reject Hardware commands on all other Virtual Channels.",6/4/04ProjectF - TIM - 1058,FSW.CP.09,3,"In FSW.CP.09, it is not clear if the call for Command Processing to receive and process FSW commands only through Virtual Channel 1 can be changed during the flight, that is, whether it is configurable. This feature may need to be considered and included as part of this requirement or introduced as a new requirement if necessary. FSW.CP.09: The CP Flight Software SHALL accept and process all Flight Software commands on Virtual Channel 1, and reject Flight Software commands on all other Virtual Channels.",6/4/04ProjectF - TIM - 1057,FSW.CP.13,3,"FSW.CP.13 appears to contradict requirement FSW.CP.11 in that the latter requirement prohibits Command Processing (CP) from performing any processing of the Hardware and Special commands except for accepting and logging receipts of such commands; whereas, the former requirement calls for CP to validate Transfer Frames for Virtual Channel 1 and 2, the second of which deals exclusively with Hardware and Special commands. FSW.CP.11: Upon acceptance of Hardware or ""Special"" commands, the CP Flight Software SHALL only log receipt of the command, and not perform any other processing of that command. FSW.CP.13: For Virtual Channels 1 and 2, the CP Flight Software shall validate each Transfer Frame for the following: 1. Version Number 2. Virtual Channel 3. Maximum Frame Length 4. Frame Sequence Number",6/4/04ProjectF - TIM - 1056,Operator Inspection,3,"The verification method ""Operator Inspection"" is unconventional and should be precisely defined. It appears to be different from the more conventional ""Inspection"" as seen by its use in TP.01 and TP.02. To avoid confusion, the difference between these two methods should be made clear. Inspection is generally considered to be a visual inspection of the code or data; so if this is not the intent here, the ""Inspection"" method should be clearly defined as well. A tester will sometimes have to inspect an output screen or memory dump to confirm a successful test, but this is usually considered a ""Test"" instead of ""Operator Inspection.""",6/4/04ProjectF - TIM - 1055,Unclear CP Requirement Wording,4,"In the paragraph preceding Table 7-3, describing the responsibilities of the Command Processing (CP) component of FSW, it is stated that FSW only logs the ""execution"" of the Hardware or Special commands (by the SubSys1 electronics). This is inconsistent with FSW.CP.11 which states that the CP software shall ONLY log ""receipt"" of the command and not perform ANY other processing. FSW.CP.11: Upon acceptance of Hardware or ""Special"" commands, the CP Flight Software SHALL only log receipt of the command, and not perform any other processing of that command.",6/4/04ProjectF - TIM - 1054,Inconsistent Reference to BSW,5,"The document number given for ProjectF Boot Software Requirements Specification, namely ProjectF-FSW-BSW, is different from the document number ProjectF-BSW-SRS given elsewhere in ProjectF-FSW-SRS for the aforementioned document.",6/4/04ProjectF - TIM - 1053,Mislabeled Table7-1,5,Table 7-1 in Sec. 7.1 has been erroneously referred to as Table 2.,6/4/04ProjectF - TIM - 1052,Mislabeled Figure 6-1 and 6-2,5,"In the fourth paragraph in Section 6, Figures 6-1 and 6-2 have been erroneously referred to as Figures 3 and 4, respectively.",6/4/04ProjectF - TIM - 1051,CSC Name Change,5,In numbered items 1 and 2 of requirement FSW.CS.13 the MS (Memory Scrubbing) should be changed to CS (Checksumming). This also occurs in the opening paragraph of 7.2.13.,6/4/04ProjectF - TIM - 1050,Unclear DS Requirement,3,"SubSys1 SRS Requirement FSW.DS.08 states: The DS Flight Software shall provide the capability to mark sets of stored Transfer Frames within a Virtual Recorder as files or Datasets, up to a maximum of four (4). It is not clear what the maximum of 4 is referring to. (Files + Datasets up to 4 ) or (Files up to 4 and Datasets up to 4) or (Up to 4 sets of Transfer Frames within each File or Dataset).",6/4/04ProjectF - TIM - 1049,RAM Margin,4,"MRD Requirements PB.FSW-21 originally stated: Maximum Processor RAM utilization shall be less than 50% during the PDR phase, and shall be less than 75% at CDR. This requirement was deleted in revision C. IV&V questions why is it no longer necessary to specify this margin. IV&V would like to see the requirements change request form or whatever artifact was generated by the CM system upon the deletion of this requirement so that we may better understand the rationale. We also question why the margin was not originally specified at a point beyond CDR. IV&V believes that this margin should be tested as part of FSW FQT.",4/7/04ProjectF - TIM - 1048,EEPROM Margin,4,"MRD requirement PB.FSW.20 originally stated: Maximum EEPROM utilization shall be less than 50% during the PDR phase, and shall be less than 75% at CDR. This requirement was deleted in revision C. IV&V questions why is it no longer necessary to specify this margin. IV&V would like to see the requirements change request form or whatever artifact was generated by the CM system upon the deletion of this requirement so that we may better understand the rationale. We also question why the margin was not originally specified at a point beyond CDR. IV&V believes that this margin should be tested as part of FSW FQT.",4/7/04ProjectF - TIM - 1047,CPU Margin,4,"MRD requirement PB.FSW.19 originally stated: Maximum CPU utilization shall be less than 50% during the PDR phase, and shall be less than 75% at CDR. This requirement was deleted in revision C. IV&V questions why is it no longer necessary to specify this margin. IV&V would like to see the requirements change request form or whatever artifact was generated by the CM system upon the deletion of this requirement so that we may better understand the rationale. We also question why the margin was not originally specified at a point beyond CDR. IV&V believes that this margin should be tested as part of FSW FQT.",4/7/04ProjectF - TIM - 1046,Inadvertent Probe Release,3,Does the FSW share any responsibility in providing this capability? If so it should be documented in the SRS. MRD Rqmt PB.CDH-47: The CDH shall include inhibits to prevent inadvertent release of the Probe from the Probe Carrier.,4/7/04ProjectF - TIM - 1044,Undocumented MET Traceability,4,MRD Requirement PB.CDH-45 states: The C&DH subsystem shall maintain Mission Elapsed Time (MET) This is Addressed by FSW.TC.08 although the SRS does not document this traceability.,4/7/04ProjectF - TIM - 1043,UTC vs UTO,3,"FSW.TC.08 states that the FSW will maintain Universal Time Offset. Is this the same thing being referred to as Coordinated Universal Time (UTC) in MRD Requirement PB.CDH-44? If so the SRS should document the accuracy requirement of +/- 0.5 sec. MRD Requirement PB.CDH-44: The C&DH subsystem shall maintain Coordinated Universal Time (UTC) with an accuracy of 1 sec/day (required), 1 sec/orbit (desired).",4/7/04ProjectF - TIM - 1042,PB.CDH-43,3,MRD requirement PB.CDH-43 states: The C&DH Subsystem shall send a raw sun pulse signal to the IDPU. Could not find this in the FSW SRS. If the FSW is responsible for this capability it should be documented.,4/7/04ProjectF - TIM - 1041,PB.CDH-42,4,This is Addressed by FSW.IM.03 although the SRS does not document this traceability. MRD Requirement PB.CDH-42: Critical Instrument Houskeeping & FGM telemetry shall be included in real-time Housekeeping telemetry.,4/7/04ProjectF - TIM - 1040,PB.CDH-38,4,This is Addressed by FSW.TC.03 although the SRS does not document this traceability. MRD Requirement PB.CDH-38: The C&DH subsystem shall distribute time (UTC w/sub seconds) to the IDPU to synchronize Bus and Instrument clocks.,4/7/04ProjectF - TIM - 1039,PB.CDH-37,4,"This is Addressed by FSW.TC.03 although the SRS does not document this traceability. MRD Requirement PB.CDH-37: The C&DH subsystem shall provide a 1 Pulse Per Second (1PPS) interface to the instrument, (derived from the system clock).",4/7/04ProjectF - TIM - 1038,PB.CDH-35,4,This is Addressed by FSW.TP.06 although the SRS does not document this traceability. MRD Requirement PB.CDH-35: The telemetry format shall provide the means of distinguishing between data streams by the use of virtual channel IDs.,4/7/04ProjectF - TIM - 1037,PB.CDH-34,3,MRD requirement PB.CDH-34 states: C&DH subsystem ACS telemetry data shall be time-tagged with acquisition time accurate to within +/- 0.25 ms. Does this really mean one quarter of a millisecond or does it mean 25 milliseconds? Does FSW do this? If so it should be documented in the SRS.,4/7/04ProjectF - TIM - 1036,PB.CDH-33,3,MRD requirement PB.CDH-33 states: C&DH subsystem telemetry data shall be time-tagged with acquisition time accurate to within +/- 50 ms Could not find this in the FSW SRS. If the FSW is responsible for this capability it should be documented.,4/7/04ProjectF - TIM - 1035,PB.CDH-32,3,MRD requirement PB.CDH-32 states: The C&DH subsystem housekeeping telemetry storage rate shall be programmable from 250 bps to 4000 bps. Could not find this in the FSW SRS unless FSW.TP.26 addresses it. If TP.26 does address this mission requirement the range of the possible rates (250 to 4000 bps) should be stated so that it is clear that the requirement is being met.,4/7/04ProjectF - TIM - 1034,PB.CDH-31,4,This is Addressed by FSW.TP.27 although the SRS does not document this traceability. MRD Requirement PB.CDH-31: The C&DH Subsystem shall support downlink data rates from 1 kbps to 1048.576 kbps (rates derived from 2^23 MHz clock).,4/7/04ProjectF - TIM - 1033,PB.CDH-29,3,Could not find this requirement in the FSW SRS. It should be stated there if it is not. MRD Requirement PB.CDH-29: The C&DH subsystem shall be capable of playing back stored telemetry interleaved with real-time housekeeping telemetry.,4/7/04ProjectF - TIM - 1032,PB.CDH-28,4,Addressed by FSW.TP.27 and FSW.DS.07 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-28: The C&DH subsystem shall be capable of altering the housekeeping telemetry acquisition rate based on ground command.,4/7/04ProjectF - TIM - 1031,PB.CDH-27,4,Addressed by FSW 7.2.9 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-27: The C&DH subsystem shall erase stored telemetry only when commanded to do so.,4/7/04ProjectF - TIM - 1030,PB.CDH-26,4,Addressed by FSW 7.2.4 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-26: The C&DH subsystem shall play back stored telemetry when commanded.,4/7/04ProjectF - TIM - 1029,PB.CDH-23,3,The FSW appears to bear some responsibility for this requirement but the SRS does not acknowledge it. Need to clarify this traceability to ensure that the requirement has been accepted by the appropriate subsystem. Does ground contact mean that data is flowing to/from the ground or does it mean that the probe is in view of a ground station or something else? Thermal constraints on the transmitter may also be a limiting factor to this requirement. MRD Requirement PB.CDH-23 states: The C&DH subsystem shall transmit real-time housekeeping telemetry when in ground contact,4/7/04ProjectF - TIM - 1028,PB.CDH-15,3,"MRD requirement PB.CDH-15 states: The C&DH subsystem shall be able to load and execute commands simultaneously. IV&V Could not find this in the FSW SRS, but it was IV&Vs understanding that this capability was being implemented. If so it should be specified in the FSW SRS.",4/7/04ProjectF - TIM - 1027,PB.CDH-13,4,Addressed by FSW 7.2.12-04 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-13: The C&DH subsystem shall provide Relative Time Sequence (RTS) commands.,4/7/04ProjectF - TIM - 1026,PB.CDH-12,4,Addressed by FSW 7.2.12-01 and 7.2.12-25 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-12: The C&DH subsystem shall provide Absolute Time Sequence (ATS) commands expressed in UTC times with resolution of 1 second.,4/7/04ProjectF - TIM - 1025,PB.CDH-11,4,Addressed by FSW 7.2.3 and 7.2.12 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-11: The C&DH subsystem shall provide real-time and stored command capability.,4/7/04ProjectF - TIM - 1024,PB.CDH-10,4,Addressed by FSW 7.2.8-02 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-10: The C&DH subsystem shall forward all Instrument commands to the IDPU at a rate of 8 commands/second.,4/7/04ProjectF - TIM - 1023,PB.CDH-9,4,Addressed by FSW 7.2.3-01 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-9: The C&DH subsystem shall maintain the order of commands.,4/7/04ProjectF - TIM - 1022,PB.CDH-8,4,Addressed by FSW 7.2.3-09 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-8: The C&DH subsystem shall forward all other commands (software-decoded) to it's Flight Computer for processing.,4/7/04ProjectF - TIM - 1021,PB.CDH-7,4,Addressed by FSW 7.2.3 Introductory paragraph but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-7: The C&DH subsystem shall execute Special commands (hardware-decoded) immediately with no involvement from the Flight Computer.,4/7/04ProjectF - TIM - 1020,PB.CDH-6,4,Addressed by FSW 7.2.3-03 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-6: The C&DH subsystem shall be capable of processing commands at a rate of 1kbps.,4/7/04ProjectF - TIM - 1019,PB.CDH-4,4,Addressed by FSW 7.2.3-02 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-4: The C&DH subsystem shall be capable of receiving ground commands at all times.,4/7/04ProjectF - TIM - 1018,PB.CDH-3,4,Addressed by FSW 7.2.3-01 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-3: The C&DH subsystem shall receive and process commands destined for the Bus electronics.,4/7/04ProjectF - TIM - 1017,PB.CDH-2,4,Addressed by FSW 7.2.3-01 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-2: The C&DH subsystem shall use the COP-1 protocol.,4/7/04ProjectF - TIM - 1016,PB.CDH-1,4,Addressed by FSW 7.2.3-01 but the SRS does not claim traceability to this requirement. MRD Requirement PB.CDH-1: All Bus command and telemetry shall be compatible with CCSDS recommendations.,4/7/04ProjectF - TIM - 1014,PB.RCS-14,3,Does the FSW bear any responsibility for this requirement? If so it should be specified in the SRS or possibly a telemetry list. Need to clarify this traceability to ensure that the requirement has been accepted by the appropriate subsystem. MRD Requirement PB.RCS-14: The Reaction Control System shall provide positive indication of latch valve position.,4/7/04ProjectF - TIM - 1013,PB.RCS-13,4,IV&V found no evidence to support this in the FSW SRS. While this level of detail is not usually found in the SRS there should be a list of all telemetry items that would include this? MRD Requirement PB.RCS-13: The Reaction Control System shall provide pressure telemetry.,4/7/04ProjectF - TIM - 1012,PB.ACS-16,3,MRD requirement PB.ACS-16 states: The probe bus shall provide raw sun sensor information to the C&DH subsystem for transfer to the instrument. The FSW appears to bear some responsibility for this requirement but the SRS does not acknowledge this. Need to clarify this traceability to ensure that the requirement has been accepted by the appropriate subsystem.,4/7/04ProjectF - TIM - 1011,PB.ACS-15,3,The FSW SRS does not acknowledge this. Has this requirement been deleted? Wasn't the onboard quaternion propagation requirement added because there was too much raw data? MRD Requirement PB.ACS-15: The probe bus shall provide all raw attitude sensor information in its housekeeping telemetry.,4/7/04ProjectF - TIM - 1010,PB.ACS-11,3,MRD Requirement states: The probe shall be stable during axial EFI boom deployment at spin rates between 2 and 25 RPM. What does stable mean in this context? Probably not <5.6 degree alignment of the principle axis of inertia with the Z axis. Will FSW be required to monitor this stability and take action in the event of instability?,4/7/04ProjectF - TIM - 1009,PB.ACS-10,3,MRD requirement PB.ACS-10 states: The probe shall be stable during radial EFI boom deployment at spin rates between 2 and 25 RPM. What does stable mean in this context? Probably not <5.6 degree alignment of the principle axis of inertia with the Z axis. Will FSW be required to monitor this stability and take action in the event of instability?,4/7/04ProjectF - TIM - 1008,PB.ACS-9,3,MRD requirement PB.ACS-9 states: The probe shall be stable during FGM and SCM boom deployment at spin rates between 2 and 15 RPM. What does stable mean in this context? Probably not <5.6 degree alignment of the principle axis of inertia with the Z axis. Will FSW be required to monitor this stability and take action in the event of instability?,4/7/04ProjectF - TIM - 1007,PB.ACS-2,3,MRD requirement PB.ACS-2 states: The probe shall be stable for spin rates between 6 and 25 RPM during nominal science operations. Does stable mean < 5.6 degrees as defined in PB.Mec-6? Will FSW be required to monitor this stability and take action in the event of instability? PB.Mec-6: The Probe Principle Axis of Inertia shall be aligned within 5.6 degrees of the Probe Z axis.,4/7/04ProjectF - TIM - 1006,Duplicate Requirement,3,SubSys1 SRS Requirement FSW.SC.21 is an exact duplicate of FSW.SC.18,4/7/04ProjectF - TIM - 1005,Duplicate Requirement ID,3,Dup ID. The SubSys1 SRS requirement FSW.SC.16 is used to identify two different requirements.,4/7/04ProjectF - TIM - 1004,FSW.SC.16,3,This requirement has the same ID as the following one in the document.,4/7/04ProjectF - TIM - 1003,FSW.DS.06,3,Please define N.,4/7/04ProjectF - TIM - 1002,Dropped Requirement,4,SubSys1 SRS Requirement FSW.TP.15 was in Draft version 0.1 but was dropped completely from the first release. Was this an intentional omission? FSW.TP.15 states: The Flight Software shall accept and process a command to reset status and statistics on the real-time downlink of telemetry data.,4/7/04ProjectF - TIM - 1001,FSW.CP.25,4,Are 1 & 2 here the same as 1 & 2 on TP.20? If so do both the CP and TP tasks need to reportboth of these in real-time telemetry?,4/7/04